00001702 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 13/12/2019 16:31:31

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION : 
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8              
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =000002E4                 81  SCRWIDTH    EQU     740                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  
00001000                            93  -------------------- end include --------------------
00001000                            94              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            95  ; =============================================================================
00001000                            96  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            97  ; =============================================================================
00001000                            98  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101  ; INITIALIZES THE SYSTEM
00001000                           102  ; INPUT    - NONE
00001000                           103  ; OUTPUT   - NONE
00001000                           104  ; MODIFIES - NONE
00001000                           105  ; -----------------------------------------------------------------------------
00001000  205F                     106              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            107              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            108              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            109              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                110              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     111              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     112              RTS
0000101C                           113  
0000101C                           114  ; =============================================================================
0000101C                           115  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           116  ; =============================================================================
0000101C                           117  
0000101C                           118  ; -----------------------------------------------------------------------------
0000101C                           119  SCRINIT
0000101C                           120  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           121  ; INPUT    - NONE
0000101C                           122  ; OUTPUT   - NONE
0000101C                           123  ; MODIFIES - D0,D1,D2,D3
0000101C                           124  ; -----------------------------------------------------------------------------
0000101C                           125              ; TO DO:
0000101C                           126              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                127              ORI.W   #$0700,SR
00001020                           128              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           129              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       130              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           131              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                132              MOVE.B  #33,D0
0000102C  223C 02E401E0            133              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     134              TRAP    #15
00001034                           135              ; - SET WINDOWED MODE
00001034  7201                     136              MOVE.L  #1,D1
00001036  4E4F                     137              TRAP    #15
00001038                           138              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                139              MOVE.B  #11,D0
0000103C  323C FF00                140              MOVE.W  #$FF00,D1
00001040  4E4F                     141              TRAP    #15
00001042                           142              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                143              MOVE.B  #92,D0
00001046  123C 0011                144              MOVE.B  #17,D1
0000104A  4E4F                     145              TRAP    #15
0000104C                           146              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     147              MOVE.L  #11,D0
0000104E  323C FF00                148              MOVE.W  #$FF00,D1
00001052  4E4F                     149              TRAP    #15
00001054                           150              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           151              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       152              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           153              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           154              ;   TASK 32)
0000105C  103C 0020                155              MOVE.B  #32,D0
00001060  123C 0006                156              MOVE.B  #6,D1
00001064                           157              ;MOVE.B  #%10000001,D2
00001064  143C 0081                158              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     159              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     160              TRAP    #15
0000106C                           161              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 0000172C            162              CLR.B   SCRINTCT
00001072  4239 0000172D            163              CLR.B   SCRCYCCT
00001078                           164              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                165              ANDI.W  #$F8FF,SR
0000107C  4E75                     166              RTS
0000107E                           167  
0000107E                           168  ; -----------------------------------------------------------------------------
0000107E                           169  SCRISR
0000107E                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           171  ; INPUT    - NONE
0000107E                           172  ; OUTPUT   - NONE
0000107E                           173  ; MODIFIES - NONE
0000107E                           174  ; -----------------------------------------------------------------------------
0000107E  5239 0000172C            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 0000172D            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     177              RTE
0000108C                           178  
0000108C                           179  ; -----------------------------------------------------------------------------
0000108C                           180  SCRUPD
0000108C                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           182  ; BUFFER FOR THE NEXT ONE.
0000108C                           183  ; INPUT    - NONE
0000108C                           184  ; OUTPUT   - NONE
0000108C                           185  ; MODIFIES - NONE
0000108C                           186  ; -----------------------------------------------------------------------------
0000108C                           187              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                188              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                189              MOVE.B  #94,D0
00001094  4E4F                     190              TRAP    #15
00001096  103C 000B                191              MOVE.B  #11,D0
0000109A  323C FF00                192              MOVE.W  #$FF00,D1
0000109E  4E4F                     193              TRAP    #15
000010A0  4CDF 0003                194              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     195              RTE
000010A6                           196  
000010A6                           197  ; =============================================================================
000010A6                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           199  ; =============================================================================
000010A6                           200  
000010A6                           201  ; -----------------------------------------------------------------------------
000010A6                           202  KBDINIT
000010A6                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           204  ; INPUT    - NONE
000010A6                           205  ; OUTPUT   - NONE
000010A6                           206  ; MODIFIES - NONE
000010A6                           207  ; -----------------------------------------------------------------------------
000010A6  4239 0000172A            208              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 0000172B            209              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     211              RTS
000010BC                           212  
000010BC                           213  ; -----------------------------------------------------------------------------
000010BC                           214  KBDREAD
000010BC                           215  ; TRAP SERVICE ROUTINE.
000010BC                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           219  ; INPUT    - NONE
000010BC                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           221  ; MODIFIES - NONE
000010BC                           222  ; -----------------------------------------------------------------------------
000010BC                           223              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                224              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                225              MOVE.B  #19,D0
000010C4                           226              
000010C4  223C 50104D20            227              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     228              TRAP    #15
000010CC                           229          
000010CC  4202                     230              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                231              MOVE.W  #3,D4
000010D2                           232              
000010D2                           233  .LOOP1      
000010D2                           234       
000010D2  E189                     235              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     236              MOVE.W  SR,D3                   
000010D6  0243 0001                237              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     238              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     239              OR.B    D3,D2                   
000010DE  51CC FFF2                240              DBRA    D4,.LOOP1
000010E2                           241          
000010E2                           242              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           243              
000010E2  223C 28272625            244              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     245              TRAP    #15
000010EA                           246              
000010EA  383C 0003                247              MOVE.W  #3,D4
000010EE                           248  .LOOP2      
000010EE  E189                     249              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     250              MOVE.W  SR,D3
000010F2  0243 0001                251              ANDI.W  #$0001,D3    
000010F6  E30A                     252              LSL.B   #1,D2
000010F8  8403                     253              OR.B    D3,D2
000010FA                           254              
000010FA  51CC FFF2                255              DBRA    D4,.LOOP2
000010FE                           256              
000010FE                           257              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           258              
000010FE                           259              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 0000172A            260              MOVE.B  KBDVAL,D3
00001104  4603                     261              NOT.B   D3
00001106  13C2 0000172A            262              MOVE.B  D2,KBDVAL
0000110C  C602                     263              AND.B   D2,D3
0000110E  13C3 0000172B            264              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                265              MOVEM.L (A7)+,D0-D4
00001118  4E73                     266              RTE
0000111A                           267  
0000111A                           268  ; =============================================================================
0000111A                           269  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           270  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           271  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           272  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           273  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           274  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           275  ; =============================================================================
0000111A                           276  
0000111A                           277  ; -----------------------------------------------------------------------------
0000111A                           278  DMMINIT
0000111A                           279  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           280  ; INPUT    - NONE
0000111A                           281  ; OUTPUT   - NONE
0000111A                           282  ; MODIFIES - NONE
0000111A                           283  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                284              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001740            285              LEA     DMMDATA,A0
00001124  303C 0031                286              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                287  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            288              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                289              DBRA.W  D0,.LOOP
00001136  4CDF 0101                290              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     291              RTS
0000113C                           292  
0000113C                           293  ; -----------------------------------------------------------------------------
0000113C                           294  DMMFIRST
0000113C                           295  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           296  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           297  ; INPUT    - NONE
0000113C                           298  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           299  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           300  ; -----------------------------------------------------------------------------
0000113C  41F9 00001740            301              LEA     DMMDATA,A0
00001142  4A58                     302  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                303              BNE     DMMFRFND
00001148  D1FC 0000003E            304              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 000023BF            305  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     306              BLT     DMMFRLOP
00001156  207C 00000000            307              MOVE.L  #0,A0
0000115C  4E75                     308  DMMFRFND    RTS
0000115E                           309  
0000115E                           310  ; -----------------------------------------------------------------------------
0000115E                           311  DMMNEXT
0000115E                           312  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           313  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           314  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           315  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           316  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           317  ; -----------------------------------------------------------------------------
0000115E  2F00                     318              MOVE.L  D0,-(A7)
00001160  2008                     319              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            320              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            321              ADD.L   #DMMBSIZE,D0
0000116E  2040                     322              MOVE.L  D0,A0
00001170  201F                     323              MOVE.L  (A7)+,D0
00001172  60DA                     324              BRA     DMMFRCOM
00001174                           325  
00001174                           326  ; -----------------------------------------------------------------------------
00001174                           327  DMMFRSTO
00001174                           328  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           329  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           330  ; INPUT    - D0.W : ID TO SEARCH
00001174                           331  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           332  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           333  ; -----------------------------------------------------------------------------
00001174  41F9 00001740            334              LEA     DMMDATA,A0
0000117A  B058                     335  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                336              BEQ     DMMFFND
00001180  D1FC 0000003E            337              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 000023BF            338  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     339              BLT     DMMFLOOP
0000118E  207C 00000000            340              MOVE.L  #0,A0
00001194  4E75                     341  DMMFFND     RTS
00001196                           342  
00001196                           343  ; -----------------------------------------------------------------------------
00001196                           344  DMMNEXTO
00001196                           345  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           346  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           347  ; INPUT    - D0.W : ID TO SEARCH
00001196                           348  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           351  ; -----------------------------------------------------------------------------
00001196  2F00                     352              MOVE.L  D0,-(A7)
00001198  2008                     353              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011A6  2040                     356              MOVE.L  D0,A0
000011A8  201F                     357              MOVE.L  (A7)+,D0
000011AA  60DA                     358              BRA     DMMFCOM
000011AC                           359  
000011AC                           360  ; -----------------------------------------------------------------------------
000011AC                           361  DMMALLOC
000011AC                           362  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           363  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           364  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           367  ; -----------------------------------------------------------------------------
000011AC  3F00                     368              MOVE.W  D0,-(A7)
000011AE  4240                     369              CLR.W   D0
000011B0  4EB8 1174                370              JSR     DMMFRSTO
000011B4  301F                     371              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            372              CMP.L   #0,A0
000011BC  6700 0006                373              BEQ     .END
000011C0  3140 FFFE                374              MOVE.W  D0,-2(A0)
000011C4  4E75                     375  .END        RTS
000011C6                           376  
000011C6                           377  ; -----------------------------------------------------------------------------
000011C6                           378  DMMFREE
000011C6                           379  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           380  ; SYSTEM (0)
000011C6                           381  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           382  ; OUTPUT   - NONE
000011C6                           383  ; MODIFIES - NONE
000011C6                           384  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                385              MOVEM.L D0/A0,-(A7)
000011CA  2008                     386              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            387              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     388              MOVE.L  D0,A0
000011D4  4250                     389              CLR.W   (A0)
000011D6  4CDF 0101                390              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     391              RTS
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  
000011DC                           407  
000011DC                           408  -------------------- end include --------------------
000011DC                           409              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           410  ; =============================================================================
000011DC                           411  ; CONSTANTS
000011DC                           412  ; =============================================================================
000011DC                           413  
000011DC                           414  ; --- PLAYER RELATED CONSTANTS ------------------------------------------------
000011DC                           415  
000011DC                           416  
000011DC                           417  
000011DC                           418  
000011DC                           419  
000011DC                           420  ;PLRINIEN    EQU     500                     ; PLAYER INITIAL ENERGY (<SCRWIDTH)
000011DC                           421  ;PLRSPEED    EQU     7                       ; PLAYER SPEED (PIXELS PER INT)
000011DC                           422  
000011DC                           423  ;PLRDMGCL    EQU     $00FFFFFF               ; PLAYER DAMAGED COLOR
000011DC                           424  ;PLRTXTCL    EQU     $00FFFFFF               ; FONT COLOR
000011DC                           425  ;PLRTXTX     EQU     65                       ; SCORE X COORDINATE
000011DC                           426  ;PLRTXTY     EQU     10                       ; SCORE Y COORDINATE
000011DC                           427  ;PLRLIFEH    EQU     20                      ; HEIGHT OF LIFE BAR
000011DC                           428  ;PLRLIFEY    EQU     SCRHEIGH-PLRLIFEH*2     ; LIFE BAR Y POS
000011DC                           429  ;PLRLIFEC    EQU     $000000FF               ; LIFE BAR COLOR
000011DC                           430  ;PLRUMDMG    EQU     %00000001               ; UPDATE DAMAGE MASK
000011DC                           431  ;PLRPMDMG    EQU     %00000010               ; PLOT DAMAGE MASK
000011DC                           432  ;PLRUBDMG    EQU     0                       ; UPDATE DAMAGE BIT
000011DC                           433  ;PLRPBDMG    EQU     1                       ; PLOT DAMAGE BIT
000011DC                           434  
000011DC                           435  
000011DC                           436  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           437  
000011DC  =0000000E                438  INTTITX     EQU     14                      ; TITLE X COORDINATE
000011DC  =00000007                439  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                440  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000020                441  INTPRSX     EQU     32                      ; PRESS FIRE X COORDINATE
000011DC  =00000052                442  INTPRSY     EQU     82                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                443  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC                           444  
000011DC                           445  
000011DC                           446  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                447  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                448  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                449  STASPACE    EQU     1                       ; ESPERA EL ESPACIO PARA DISPARAR LA BOLA 
000011DC  =00000002                450  STAPLAY     EQU     2                       ; NORMAL GAME STATE
000011DC  =00000003                451  STAGOVR     EQU     3                       ; GAME OVER STATE
000011DC                           452  ;----------------------------------------------------------------------------
000011DC                           453  
000011DC                           454  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           455  
000011DC  =00000010                456  GOVERX      EQU     16                      ; GAME OVER X COORDINATE
000011DC  =00000007                457  GOVERY      EQU     7                       ; GAME OVER Y COORDINATE
000011DC  =0000FFFF                458  GOVERC      EQU     $0000FFFF               ; GAME OVER COLOR
000011DC                           459  
000011DC                           460  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =00000200                461  SCRCTRL     EQU     512   ;
000011DC                           462  ;----------------------------------------------------------------------------
000011DC                           463  
000011DC                           464  
000011DC                           465  ; PLAYER --------------------------------------------------------------------
000011DC                           466  
000011DC  =00000040                467  PINWIDTH    EQU     64                      ; PLAYER INITIAL WIDTH (PIXELS)
000011DC  =0000000C                468  PHEIGHT     EQU     12                      ; PLAYER HEIGHT (PIXELS)
000011DC  =00ECD59D                469  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011DC  =00000003                470  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011DC  =00000008                471  PMOVE       EQU     8                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011DC  =000001D0                472  PPOSY       EQU     SCRHEIGH-PHEIGHT-4      ;POSICION DE LA PLATAFORMA Y
000011DC  =000000E0                473  PINPOSX     EQU     SCRCTRL/2-PINWIDTH/2
000011DC                           474  ; ---------------------------------------------------------------------------
000011DC                           475  
000011DC                           476  ; BALL ----------------------------------------------------------------------
000011DC  =00000008                477  BHEIGHT     EQU     8                       ;ALTURA DE LA BOLA
000011DC  =00000008                478  BWIDTH      EQU     8                       ;ANCHURA DE LA BOLA
000011DC  =000000F8                479  BINPOSX     EQU     PINPOSX+PINWIDTH/2-BWIDTH                      ;POSICION DE LA PELOTA X INICIAL
000011DC  =000001C8                480  BINPOSY     EQU     PPOSY-BHEIGHT              ;POSICION DE LA PELOTA Y INICIAL
000011DC  =00000004                481  BINSPEED    EQU     4                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011DC  =00FFFFFF                482  BINCOLOR    EQU     $00FFFFFF
000011DC                           483  
000011DC                           484  ; ---------------------------------------------------------------------------
000011DC                           485  
000011DC                           486  
000011DC                           487  ;BLOCKS-------------------------------------------------------------------------
000011DC  =00000040                488  BLWIDTH     EQU     64
000011DC  =00000010                489  BLHEIGHT     EQU     16
000011DC= 00F7E78E 004E8CF3 ...    490  COLORS      DC.L    BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE,PURPLE,YELLOW,GREEN
00001204  =0000000A                491  BLROW       EQU     10
00001204  =00000008                492  BLCOL       EQU     8
00001204= 00000000 00000001 ...    493  VCOLORS      DC.L    0,1,2,3,4,5,6,7
00001224= 00000008 00000009 ...    494              DC.L    8,9,10,11,12,13,14,15
00001244= 00000010 00000011 ...    495              DC.L    16,17,18,19,20,21,22,23
00001264= 00000018 00000019 ...    496              DC.L    24,25,26,27,28,29,30,31
00001284= 00000020 00000021 ...    497              DC.L    32,33,34,35,36,37,38,39
000012A4                           498  
000012A4                           499  ;-------------------------------------------------------------------------------
000012A4                           500  
000012A4                           501  ;COLORS-------------------------------------------------------------
000012A4  =004E8CF3                502  ORANGE      EQU     $004E8CF3
000012A4  =00F7E78E                503  BLUE        EQU     $00F7E78E
000012A4  =00FFACAC                504  PURPLE      EQU     $00FFACAC
000012A4  =0038EEF8                505  YELLOW      EQU     $0038EEF8
000012A4  =0095FF8C                506  GREEN       EQU     $0095FF8C
000012A4                           507  ;-------------------------------------------------------------------
000012A4                           508  
000012A4                           509  
000012A4                           510  
000012A4                           511  
000012A4                           512  
000012A4                           513  
000012A4                           514  
000012A4                           515  
000012A4                           516  
000012A4                           517  
000012A4                           518  
000012A4                           519  
000012A4                           520  -------------------- end include --------------------
000012A4                           521              INCLUDE "PLAYER.X68"            ;EL JUGADOR
000012A4                           522  ; -----------------------------------------------------------------------------
000012A4                           523  ;           PLAYER
000012A4                           524  ; -----------------------------------------------------------------------------
000012A4                           525  PLRINIT
000012A4                           526  ; INITIALIZES THE PLAYER
000012A4                           527  ; INPUT    - NONE
000012A4                           528  ; OUTPUT   - NONE
000012A4                           529  ; MODIFIES - NONE
000012A4                           530  ; -----------------------------------------------------------------------------
000012A4                           531              
000012A4  33FC 00E0 000023C4       532              MOVE.W  #PINPOSX,PPOSX
000012AC  33FC 0040 000023C6       533              MOVE.W  #PINWIDTH,PWIDTH
000012B4  33FC 0003 000023C8       534              MOVE.W  #PINLIVE,PLIVES
000012BC  4279 000023CA            535              CLR.W   PSCORE
000012C2                           536             
000012C2  4E75                     537              RTS
000012C4                           538  
000012C4                           539  
000012C4                           540  ; -----------------------------------------------------------------------------
000012C4                           541  
000012C4                           542  PLRUPD      
000012C4  48E7 6000                543              MOVEM.L D1-D2,-(A7)
000012C8                           544              
000012C8                           545              
000012C8  1239 0000172A            546              MOVE.B  KBDVAL,D1  
000012CE  E219                     547              ROR.B   #1,D1                   ;IZQUIERDA
000012D0  6400 0016                548              BCC     .RIGHTKEY                  ;CUANDO C = 0
000012D4                           549              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
000012D4  3439 000023C4            550              MOVE.W  PPOSX,D2
000012DA  B47C 0000                551              CMP.W    #0,D2
000012DE  6F00 0008                552              BLE     .RIGHTKEY
000012E2  5179 000023C4            553              SUB.W   #PMOVE,(PPOSX)
000012E8                           554  .RIGHTKEY
000012E8  E209                     555              LSR.B   #1,D1                   ;NO NOS IMPORTA EL DE ARRIBA
000012EA  E219                     556              ROR.B   #1,D1                   ;
000012EC  6400 001C                557              BCC     .END
000012F0                           558              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
000012F0  3439 000023C4            559              MOVE.W  PPOSX,D2
000012F6  D479 000023C6            560              ADD.W   PWIDTH,D2 
000012FC                           561  
000012FC  B47C 0200                562              CMP.W    #SCRCTRL,D2
00001300  6C00 0008                563              BGE     .END
00001304  5079 000023C4            564              ADD.W   #PMOVE,PPOSX
0000130A                           565  .END
0000130A  4CDF 0006                566              MOVEM.L (A7)+,D1-D2
0000130E  4E75                     567              RTS
00001310                           568  
00001310                           569  
00001310                           570  PPLOT
00001310  48E7 FC00                571              MOVEM.L  D0-D5,-(A7)
00001314                           572              ;CONTOUR COLOR
00001314  223C 00ECD59D            573              MOVE.L  #PCOLOR,D1  
0000131A  103C 0050                574              MOVE.B  #80,D0
0000131E  4E4F                     575              TRAP    #15
00001320                           576      
00001320                           577      
00001320                           578               ;FILL COLOR
00001320  C2BC 00ECD59D            579              AND.L   #PCOLOR,D1  
00001326  103C 0051                580              MOVE.B  #81,D0
0000132A  4E4F                     581              TRAP    #15
0000132C                           582   
0000132C                           583  
0000132C                           584               ;SQUARE
0000132C  3A39 000023C6            585              MOVE.W  PWIDTH,D5                     
00001332  3639 000023C4            586              MOVE.W  PPOSX,D3
00001338  383C 01DC                587              MOVE.W  #PPOSY+PHEIGHT,D4
0000133C  D645                     588              ADD.W   D5,D3
0000133E                           589      
0000133E  3239 000023C4            590              MOVE.W  PPOSX,D1
00001344  343C 01D0                591              MOVE.W  #PPOSY,D2
00001348                           592      
00001348  303C 0057                593              MOVE.W  #87,D0
0000134C  4E4F                     594              TRAP    #15
0000134E                           595      
0000134E  4CDF 003F                596              MOVEM.L  (A7)+,D0-D5
00001352                           597  
00001352  4E75                     598              RTS
00001354                           599      
00001354                           600  
00001354                           601  
00001354                           602  
00001354                           603  
00001354                           604  
00001354                           605  
00001354                           606  
00001354                           607  
00001354                           608  
00001354                           609  
00001354                           610  -------------------- end include --------------------
00001354                           611              INCLUDE "STATES.X68"            ;
00001354                           612  ; =============================================================================
00001354                           613  ; GAME STATE MANAGEMENT
00001354                           614  ; =============================================================================
00001354                           615  
00001354                           616  ; -----------------------------------------------------------------------------
00001354                           617  STAINIT
00001354                           618  ; INITALIZES THE STATE MANAGER
00001354                           619  ; INPUT    - NONE
00001354                           620  ; OUTPUT   - NONE
00001354                           621  ; MODIFIES - NONE
00001354                           622  ; -----------------------------------------------------------------------------
00001354  33FC FFFF 000023C0       623              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
0000135C                           624             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
0000135C  33FC 0000 000023C2       625              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
00001364  4E75                     626              RTS
00001366                           627  
00001366                           628  ; -----------------------------------------------------------------------------
00001366                           629  STAUPD
00001366                           630  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
00001366                           631  ; INPUT    - NONE
00001366                           632  ; OUTPUT   - NONE
00001366                           633  ; MODIFIES - NONE
00001366                           634  ; -----------------------------------------------------------------------------
00001366  48E7 8080                635              MOVEM.L D0/A0,-(A7)
0000136A  4280                     636              CLR.L   D0
0000136C  3039 000023C2            637              MOVE.W  (STANEXT),D0
00001372  B079 000023C0            638              CMP.W   (STACUR),D0
00001378  6700 0012                639              BEQ     .DOUPD
0000137C  33C0 000023C0            640              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
00001382  E588                     641              LSL.L   #2,D0
00001384  2040                     642              MOVE.L  D0,A0
00001386  2068 13A4                643              MOVE.L  .INITBL(A0),A0
0000138A  4E90                     644              JSR     (A0)
0000138C  4280                     645  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
0000138E  3039 000023C0            646              MOVE.W  (STACUR),D0
00001394  E588                     647              LSL.L   #2,D0
00001396  2040                     648              MOVE.L  D0,A0
00001398  2068 13B0                649              MOVE.L  .UPDTBL(A0),A0
0000139C  4E90                     650              JSR     (A0)
0000139E  4CDF 0101                651              MOVEM.L (A7)+,D0/A0
000013A2  4E75                     652              RTS
000013A4= 0000111A 000013EE ...    653  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTY     ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
000013B0                           654                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
000013B0                           655                                               ;EL 2 ES NO HACER NADA 
000013B0= 00001434 000013FA ...    656  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAGOVRU
000013C0                           657                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
000013C0                           658                                              ;EL 2 HACE QUE SE UPDATE 
000013C0                           659  
000013C0                           660  ; -----------------------------------------------------------------------------
000013C0                           661  STAPLOT
000013C0                           662  ; PERFORMS STATE PLOT
000013C0                           663  ; INPUT    - NONE
000013C0                           664  ; OUTPUT   - NONE
000013C0                           665  ; MODIFIES - NONE
000013C0                           666  ; -----------------------------------------------------------------------------
000013C0  48E7 8080                667              MOVEM.L D0/A0,-(A7)
000013C4  4280                     668              CLR.L   D0
000013C6  3039 000023C0            669              MOVE.W  (STACUR),D0
000013CC  E588                     670              LSL.L   #2,D0
000013CE  2040                     671              MOVE.L  D0,A0
000013D0  2068 13DC                672              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
000013D4  4E90                     673              JSR     (A0)
000013D6  4CDF 0101                674              MOVEM.L (A7)+,D0/A0
000013DA  4E75                     675              RTS
000013DC= 0000144A 0000141C ...    676  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAGOVRP
000013EC                           677                                               ; EL 0 ES DIBUJAR LA PANTALLA DE INICIO
000013EC                           678  
000013EC                           679  ; -----------------------------------------------------------------------------
000013EC                           680  STAEMPTY
000013EC                           681  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
000013EC                           682  ; INPUT    - NONE
000013EC                           683  ; OUTPUT   - NONE
000013EC                           684  ; MODIFIES - NONE
000013EC                           685  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
000013EC                           686  ; -----------------------------------------------------------------------------
000013EC  4E75                     687              RTS
000013EE                           688  
000013EE                           689  ; -----------------------------------------------------------------------------
000013EE                           690  STAPLAYI    
000013EE                           691  ; PLAY STATE INITIALIZATION.
000013EE                           692  ; INPUT    - NONE
000013EE                           693  ; OUTPUT   - NONE
000013EE                           694  ; MODIFIES - NONE
000013EE                           695  ; NOTE     - JUST A WRAPPER FOR PLRINIT
000013EE                           696  ; -----------------------------------------------------------------------------
000013EE  4EB8 12A4                697              JSR     PLRINIT
000013F2  4EB9 00001522            698              JSR     BINIT
000013F8  4E75                     699              RTS
000013FA                           700              
000013FA                           701  ; -----------------------------------------------------------------------------
000013FA                           702  STASPACEU
000013FA                           703  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
000013FA                           704  ; INPUT    - NONE
000013FA                           705  ; OUTPUT   - NONE
000013FA                           706  ; MODIFIES - NONE
000013FA                           707  ; -----------------------------------------------------------------------------
000013FA                           708             
000013FA  0839 0004 0000172B       709              BTST.B  #KBDBITF1,(KBDEDGE)
00001402  6700 000A                710              BEQ     .END
00001406  33FC 0002 000023C2       711              MOVE.W  #STAPLAY,(STANEXT)
0000140E                           712  .END        
0000140E  4E75                     713              RTS
00001410                           714                               
00001410                           715  
00001410                           716  ; -----------------------------------------------------------------------------
00001410                           717  STAPLAYU
00001410                           718  ; PLAY STATE UPDATE
00001410                           719  ; INPUT    - NONE
00001410                           720  ; OUTPUT   - NONE
00001410                           721  ; MODIFIES - NONE
00001410                           722  ; -----------------------------------------------------------------------------
00001410  4EB8 12C4                723              JSR     PLRUPD
00001414  4EB9 00001548            724              JSR     BUPD                    
0000141A  4E75                     725              RTS
0000141C                           726  ; -----------------------------------------------------------------------------
0000141C                           727  STAPLAYP
0000141C                           728  ; PLAY STATE PLOT
0000141C                           729  ; INPUT    - NONE
0000141C                           730  ; OUTPUT   - NONE
0000141C                           731  ; MODIFIES - NONE
0000141C                           732  ; -----------------------------------------------------------------------------
0000141C  4EB9 000016B6            733              JSR     BLPLOT
00001422  4EB8 1310                734              JSR     PPLOT
00001426  4EB9 0000163E            735              JSR     BPLOT
0000142C  4EB9 0000167E            736              JSR     SCTRLINIT
00001432  4E75                     737              RTS
00001434                           738  
00001434                           739  ; -----------------------------------------------------------------------------
00001434  =0000111A                740  STAINTRI    EQU     DMMINIT                 ;VACIA LA MEMORIA DEL JUEGO
00001434                           741  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
00001434                           742  
00001434                           743  ; INTRO STATE INIT
00001434                           744  ; INPUT    - NONE
00001434                           745  ; OUTPUT   - NONE
00001434                           746  ; MODIFIES - NONE
00001434                           747  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
00001434                           748  ; -----------------------------------------------------------------------------
00001434                           749  
00001434                           750  ; -----------------------------------------------------------------------------
00001434                           751  STAINTRU
00001434                           752  ; INTRO STATE UPDATE
00001434                           753  ; INPUT    - NONE
00001434                           754  ; OUTPUT   - NONE
00001434                           755  ; MODIFIES - NONE
00001434                           756  ; -----------------------------------------------------------------------------
00001434  0839 0004 0000172B       757              BTST.B  #KBDBITF1,(KBDEDGE)
0000143C  6700 000A                758              BEQ     .END
00001440  33FC 0001 000023C2       759              MOVE.W  #STASPACE,(STANEXT)
00001448  4E75                     760  .END        RTS
0000144A                           761  
0000144A                           762  ; -----------------------------------------------------------------------------
0000144A                           763  STAINTRP
0000144A                           764  ; INTRO STATE PLOT
0000144A                           765  ; INPUT    - NONE
0000144A                           766  ; OUTPUT   - NONE
0000144A                           767  ; MODIFIES - NONE
0000144A                           768  ; -----------------------------------------------------------------------------
0000144A  48E7 C040                769              MOVEM.L A1/D0-D1,-(A7)
0000144E  323C 0E07                770              MOVE.W  #INTTITX<<8|INTTITY, D1 ;COORDENADAS DEL TEXTO TITULO
00001452  103C 000B                771              MOVE.B  #11,D0
00001456  4E4F                     772              TRAP    #15
00001458                           773              
00001458  223C 00DCAA7C            774              MOVE.L  #INTTITC,D1
0000145E  243C 00120001            775              MOVE.L  #18<<16|1,D2
00001464  103C 0015                776              MOVE.B  #21,D0
00001468  4E4F                     777              TRAP    #15
0000146A                           778  
0000146A  43F9 000014A4            779              LEA     .TITSTR,A1              ;PONE EL TEXTO
00001470  103C 000E                780              MOVE.B  #14,D0
00001474  4E4F                     781              TRAP    #15
00001476                           782  
00001476  323C 2052                783              MOVE.W  #INTPRSX<<8|INTPRSY, D1 ;COORDENADAS DEL TEXTO START
0000147A  103C 000B                784              MOVE.B  #11,D0
0000147E  4E4F                     785              TRAP    #15
00001480                           786              
00001480  223C 00FFFFFF            787              MOVE.L  #INTPRSC,D1
00001486  243C 000A0001            788              MOVE.L  #10<<16|1,D2
0000148C  103C 0015                789              MOVE.B  #21,D0
00001490  4E4F                     790              TRAP    #15
00001492                           791              
00001492  43F9 000014B4            792              LEA     .PRSSTR,A1
00001498  103C 000E                793              MOVE.B  #14,D0
0000149C  4E4F                     794              TRAP    #15
0000149E  4CDF 0203                795              MOVEM.L (A7)+,A1/D0-D1
000014A2  4E75                     796              RTS
000014A4                           797  
000014A4= 42 72 65 61 6B 69 ...    798  .TITSTR     DC.B    'Breaking Blocks',0
000014B4= 50 55 53 48 20 46 ...    799  .PRSSTR     DC.B    'PUSH FIRE TO START',0
000014C8                           800              DS.W    0
000014C8                           801  
000014C8                           802  ; -----------------------------------------------------------------------------
000014C8                           803  STAGOVRU
000014C8                           804  ; GAME OVER STATE UPDATE
000014C8                           805  ; INPUT    - NONE
000014C8                           806  ; OUTPUT   - NONE
000014C8                           807  ; MODIFIES - NONE
000014C8                           808  ; -----------------------------------------------------------------------------
000014C8  0839 0004 0000172B       809              BTST.B  #KBDBITF1,(KBDEDGE)
000014D0  6700 000A                810              BEQ     .END
000014D4  33FC 0000 000023C2       811              MOVE.W  #STAINTR,(STANEXT)
000014DC  4E75                     812  .END        RTS
000014DE                           813  
000014DE                           814  ; -----------------------------------------------------------------------------
000014DE                           815  STAGOVRP
000014DE                           816  ; GAME OVER STATE PLOT
000014DE                           817  ; INPUT    - NONE
000014DE                           818  ; OUTPUT   - NONE
000014DE                           819  ; MODIFIES - NONE
000014DE                           820  ; -----------------------------------------------------------------------------
000014DE                           821  
000014DE  48E7 C040                822              MOVEM.L A1/D0-D1,-(A7)
000014E2  323C 1007                823              MOVE.W  #GOVERX<<8|GOVERY, D1 ;COORDENADAS DEL TEXTO TITULO
000014E6  103C 000B                824              MOVE.B  #11,D0
000014EA  4E4F                     825              TRAP    #15
000014EC                           826              
000014EC  223C 0000FFFF            827              MOVE.L  #GOVERC,D1
000014F2  243C 00120001            828              MOVE.L  #18<<16|1,D2
000014F8  103C 0015                829              MOVE.B  #21,D0
000014FC  4E4F                     830              TRAP    #15
000014FE                           831              
000014FE  7200                     832              MOVE.L  #$00000000,D1
00001500  103C 0051                833              MOVE.B  #81,D0
00001504  4E4F                     834              TRAP    #15
00001506                           835  
00001506  43F9 00001518            836              LEA     .GOVSTR,A1              ;PONE EL TEXTO
0000150C  103C 000E                837              MOVE.B  #14,D0
00001510  4E4F                     838              TRAP    #15
00001512                           839              
00001512  4CDF 0203                840              MOVEM.L (A7)+,A1/D0-D1
00001516  4E75                     841              RTS
00001518                           842  
00001518= 47 41 4D 45 20 4F ...    843  .GOVSTR     DC.B    'GAME OVER',0
00001522                           844              DS.W    0
00001522                           845  
00001522                           846  
00001522                           847  
00001522                           848  
00001522                           849  
00001522                           850  
00001522                           851  
00001522                           852  
00001522                           853  -------------------- end include --------------------
00001522                           854              INCLUDE "BALL.X68"              ;LA PELOTA
00001522                           855  ; =============================================================================
00001522                           856  ; BALL
00001522                           857  ; =============================================================================
00001522                           858  
00001522                           859  BINIT
00001522  33FC 00F8 000023CE       860              MOVE.W  #BINPOSX,BPOSX
0000152A  33FC 01C6 000023D0       861              MOVE.W  #BINPOSY-2,BPOSY  
00001532  33FC 0004 000023D2       862              MOVE.W  #BINSPEED,BSPEEDX
0000153A  303C 0004                863              MOVE.W  #BINSPEED,D0
0000153E  4440                     864              NEG.W   D0
00001540  33C0 000023D4            865              MOVE.W  D0,BSPEEDY
00001546  4E75                     866              RTS
00001548                           867              
00001548                           868  BUPD        
00001548  48E7 F000                869              MOVEM.L D0-D3,-(A7)
0000154C                           870              
0000154C                           871              
0000154C  3239 000023D0            872  .UP         MOVE.W  BPOSY,D1
00001552  B27C 0000                873              CMP.W   #0,D1
00001556  6E00 0008                874              BGT     .LEFT
0000155A  4479 000023D4            875              NEG.W   BSPEEDY
00001560                           876              
00001560  3239 000023CE            877  .LEFT       MOVE.W  BPOSX,D1                ;CHOQUE IZQUIERDA
00001566  B27C 0000                878              CMP.W    #0,D1                 
0000156A  6E00 0008                879              BGT     .RIGHT     
0000156E  4479 000023D2            880              NEG.W   BSPEEDX
00001574                           881  
00001574                           882  .RIGHT     
00001574  3239 000023CE            883              MOVE.W  BPOSX,D1
0000157A  343C 0200                884              MOVE.W  #SCRCTRL,D2
0000157E  5041                     885              ADD.W   #BWIDTH,D1
00001580  B242                     886              CMP.W    D2,D1
00001582  6D00 0008                887              BLT     .PLRY
00001586  4479 000023D2            888              NEG.W   BSPEEDX
0000158C                           889  
0000158C                           890  .PLRY
0000158C  3239 000023D0            891              MOVE.W  BPOSY,D1
00001592  5041                     892              ADD.W   #BWIDTH,D1
00001594  343C 01D0                893              MOVE.W  #PPOSY,D2               ;D2-D1
00001598  B441                     894              CMP.W   D1,D2                   ;SI LA Y SE CORRESPONDE
0000159A  6E00 0084                895              BGT     .END                    ;SI LA BPOSY+WIDHT ES MAYOR QUE PPOSY,
0000159E                           896                                              ;ESPERAR A QUE CHOQUE CON ABAJO
0000159E                           897              ;MOVE.W  #BINPOSY,BPOSY
0000159E                           898  .PLRXLEFT   
0000159E                           899              
0000159E  3239 000023CE            900              MOVE.W  BPOSX,D1
000015A4  5841                     901              ADD.W   #BWIDTH/2,D1
000015A6  3439 000023C4            902              MOVE.W  PPOSX,D2
000015AC  B441                     903              CMP.W   D1,D2                   ;MIRAMOS EL IZQUIERDO
000015AE  6C00 0058                904              BGE     .DOWN
000015B2                           905              
000015B2                           906  .PLRXMIDDLE 
000015B2  3639 000023C6            907              MOVE.W  PWIDTH,D3
000015B8  E24B                     908              LSR.W   #1,D3
000015BA  D443                     909              ADD.W   D3,D2
000015BC  B441                     910              CMP.W   D1,D2                   ;CENTRO - POS PEL
000015BE  6F00 001E                911              BLE     .PLRXRIGHT
000015C2                           912             
000015C2  4479 000023D4            913              NEG.W   BSPEEDY
000015C8  3239 000023D2            914              MOVE.W  BSPEEDX,D1
000015CE  6B00 000E                915              BMI     .PLRXRIGHT
000015D2  4479 000023D2            916              NEG.W   BSPEEDX
000015D8  4EF9 00001620            917              JMP     .END
000015DE                           918              
000015DE                           919  .PLRXRIGHT 
000015DE  3239 000023CE            920              MOVE.W  BPOSX,D1           
000015E4  D443                     921              ADD.W   D3,D2                   ;COMPARAMOS EL LADO IZQ DE LA PLATAFORMA
000015E6  B441                     922              CMP.W   D1,D2                   ;EL DERECHO
000015E8  6F00 001E                923              BLE     .DOWN                   
000015EC  4479 000023D4            924              NEG.W   BSPEEDY
000015F2                           925              
000015F2  3239 000023D2            926              MOVE.W  BSPEEDX,D1
000015F8  6A00 000E                927              BPL     .DOWN              ;SI ES POSITIVO SOLO NEGAMOS Y
000015FC  4479 000023D2            928              NEG.W   BSPEEDX
00001602  4EF9 00001620            929              JMP     .END
00001608                           930  
00001608                           931  .DOWN       
00001608  3239 000023D0            932              MOVE.W  BPOSY,D1
0000160E  5041                     933              ADD.W   #BHEIGHT,D1
00001610  B27C 01E0                934              CMP.W   #SCRHEIGH,D1
00001614  6D00 000A                935              BLT     .END
00001618  33FC 0003 000023C2       936              MOVE.W   #STAGOVR,(STANEXT)
00001620                           937  .END            
00001620                           938  
00001620  3039 000023D2            939              MOVE.W  BSPEEDX,D0
00001626  D179 000023CE            940              ADD.W   D0,BPOSX
0000162C                           941              
0000162C  3239 000023D4            942              MOVE.W  BSPEEDY,D1
00001632  D379 000023D0            943              ADD.W   D1,BPOSY
00001638                           944  
00001638  4CDF 000F                945              MOVEM.L (A7)+,D0-D3
0000163C                           946              
0000163C  4E75                     947              RTS
0000163E                           948              
0000163E                           949  BPLOT       
0000163E  48E7 FC00                950              MOVEM.L  D0-D5,-(A7)
00001642                           951              ;CONTOUR COLOR
00001642  223C 00FFFFFF            952              MOVE.L  #BINCOLOR,D1  
00001648  103C 0050                953              MOVE.B  #80,D0
0000164C  4E4F                     954              TRAP    #15
0000164E                           955      
0000164E                           956               ;FILL COLOR
0000164E  223C 00FFFFFF            957              MOVE.L   #BINCOLOR,D1  
00001654  103C 0051                958              MOVE.B  #81,D0
00001658  4E4F                     959              TRAP    #15
0000165A                           960   
0000165A                           961              ;CIRCLE
0000165A                           962  
0000165A  3A3C 0008                963              MOVE.W  #BWIDTH,D5 
0000165E                           964      
0000165E  3639 000023CE            965              MOVE.W  BPOSX,D3
00001664  3839 000023D0            966              MOVE.W  BPOSY,D4
0000166A  3203                     967              MOVE.W  D3,D1
0000166C  3404                     968              MOVE.W  D4,D2
0000166E                           969              
0000166E  D845                     970              ADD.W   D5,D4
00001670  D645                     971              ADD.W   D5,D3
00001672                           972      
00001672                           973  
00001672  103C 0058                974              MOVE.B  #88,D0
00001676  4E4F                     975              TRAP    #15
00001678                           976      
00001678  4CDF 003F                977              MOVEM.L  (A7)+,D0-D5
0000167C                           978  
0000167C  4E75                     979              RTS
0000167E                           980  
0000167E                           981  
0000167E                           982  
0000167E                           983  
0000167E                           984  
0000167E                           985  
0000167E                           986  
0000167E                           987  
0000167E                           988  
0000167E                           989  
0000167E                           990  -------------------- end include --------------------
0000167E                           991              INCLUDE "SCTRL.X68"             ;CONTROL SCREEN
0000167E                           992  ;--------------------------------------------------------------------------
0000167E                           993  ;SCREEN CONTROL
0000167E                           994  ;--------------------------------------------------------------------------
0000167E                           995  SCTRLINIT
0000167E  48E7 F800                996              MOVEM.L D0-D4,-(A7)       
00001682  223C 00FFFFFF            997              MOVE.L  #$00FFFFFF,D1  ;COLOR
00001688  103C 0050                998              MOVE.B  #80,D0
0000168C  4E4F                     999              TRAP    #15
0000168E                          1000              
0000168E  C2BC 00FFFFFF           1001              AND.L   #$00FFFFFF,D1  ;COLOR
00001694  103C 0051               1002              MOVE.B  #81,D0
00001698  4E4F                    1003              TRAP    #15
0000169A                          1004              
0000169A  103C 0057               1005              MOVE.B  #87,D0
0000169E  323C 0200               1006              MOVE.W  #SCRCTRL,D1
000016A2  363C 020A               1007              MOVE.W  #SCRCTRL+10,D3
000016A6  343C 0000               1008              MOVE.W  #0,D2
000016AA  383C 01E0               1009              MOVE.W  #SCRHEIGH,D4
000016AE  4E4F                    1010              TRAP    #15
000016B0                          1011              
000016B0  4CDF 001F               1012              MOVEM.L  (A7)+,D0-D4
000016B4                          1013  
000016B4  4E75                    1014              RTS
000016B4  4E75                    1015  -------------------- end include --------------------
000016B6                          1016              INCLUDE  "BLOCKS.X68"           ;BLOQUES
000016B6                          1017  ;-----------------------------------------------------------
000016B6                          1018  ;           BLOCKS
000016B6                          1019  ;-----------------------------------------------------------
000016B6                          1020    
000016B6                          1021  BLUPD
000016B6                          1022              
000016B6                          1023  
000016B6                          1024  
000016B6                          1025  BLPLOT
000016B6                          1026  
000016B6  48E7 FE00               1027              MOVEM.L D0-D6,-(A7)
000016BA  103C 0050               1028              MOVE.B  #80,D0
000016BE  7200                    1029              MOVE.L  #0,D1
000016C0  4E4F                    1030              TRAP    #15
000016C2                          1031              
000016C2  4242                    1032              CLR.W   D2                      ;UPPER Y
000016C4  383C 0010               1033              MOVE.W  #BLHEIGHT,D4            ;DOWN Y
000016C8  41F8 11DC               1034              LEA     COLORS,A0
000016CC                          1035              
000016CC  3C3C 0009               1036              MOVE.W  #BLROW-1,D6
000016D0                          1037              
000016D0                          1038  .LOOP2           
000016D0                          1039   
000016D0  103C 0051               1040              MOVE.B  #81,D0
000016D4  2218                    1041              MOVE.L  (A0)+,D1
000016D6  4E4F                    1042              TRAP    #15
000016D8                          1043                                        ;BUCLE FILAS
000016D8  3A3C 0007               1044              MOVE.W #BLCOL-1,D5
000016DC  363C 0040               1045              MOVE.W  #BLWIDTH,D3             ;RIGHT X
000016E0  4241                    1046              CLR.W   D1                      ;LEFT X
000016E2                          1047              
000016E2                          1048  .LOOP1                                      ;BUCLE COLUMNAS
000016E2  103C 0057               1049              MOVE.B  #87,D0
000016E6  4E4F                    1050              TRAP    #15
000016E8  3203                    1051              MOVE.W  D3,D1
000016EA  0643 0040               1052              ADD.W   #BLWIDTH, D3
000016EE  51CD FFF2               1053              DBRA    D5,.LOOP1  
000016F2                          1054  
000016F2  3404                    1055              MOVE.W  D4,D2
000016F4  0644 0010               1056              ADD.W   #BLHEIGHT,D4
000016F8  51CE FFD6               1057              DBRA    D6,.LOOP2
000016FC  4CDF 007F               1058              MOVEM.L (A7)+,D0-D6
00001700  4E75                    1059              RTS
00001702                          1060  
00001702                          1061  
00001702                          1062  
00001702                          1063  
00001702                          1064  -------------------- end include --------------------
00001702                          1065  
00001702                          1066  ; --- INITIALIZE --------------------------------------------------------------
00001702                          1067              
00001702  4EB8 1000               1068  START       JSR     SYSINIT
00001706                          1069              ; TO DO: CALL GAME INITIALIZATION CODE HERE
00001706  4EB8 1354               1070              JSR     STAINIT                 ;INICIA LAS PANTALLAS            
0000170A                          1071              
0000170A                          1072  ; --- UPDATE ------------------------------------------------------------------
0000170A                          1073  
0000170A  4E40                    1074  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
0000170C                          1075                                              ; UPDATE DEPENDING ON THE STATE
0000170C                          1076              ; TO DO: CALL GAME UPDATE CODE HERE
0000170C  4EB8 1366               1077              JSR     STAUPD
00001710                          1078  
00001710                          1079  ; --- WAIT SYNCH --------------------------------------------------------------
00001710                          1080  
00001710  4A39 0000172C           1081  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001716  67F8                    1082              BEQ     .WINT
00001718                          1083              
00001718  4239 0000172C           1084              CLR.B   (SCRINTCT)
0000171E                          1085  
0000171E                          1086  ; --- PLOT --------------------------------------------------------------------
0000171E                          1087              
0000171E                          1088              ; TO DO: CALL GAME PLOT CODE HERE
0000171E  4EB8 13C0               1089              JSR     STAPLOT
00001722                          1090  
00001722  4E41                    1091              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001724  60E4                    1092              BRA     .LOOP
00001726  FFFF FFFF               1093              SIMHALT
0000172A                          1094  
0000172A                          1095  ; --- VARIABLES ---------------------------------------------------------------
0000172A                          1096  
0000172A                          1097              INCLUDE "SYSVAR.X68"
0000172A                          1098  ; =============================================================================
0000172A                          1099  ; SYSTEM VARS
0000172A                          1100  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
0000172A                          1101  ; THEY MUST NOT BE IN PROTECTED MEMORY.
0000172A                          1102  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
0000172A                          1103  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
0000172A                          1104  ; THIS IS GOOD ENOUGH.
0000172A                          1105  ; =============================================================================
0000172A                          1106  
0000172A                          1107  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
0000172A                          1108  
0000172A                          1109  KBDVAL      DS.B    1                       ; KEY PRESSED=1
0000172B                          1110  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
0000172C                          1111  
0000172C                          1112              DS.W    0
0000172C                          1113  
0000172C                          1114  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
0000172C                          1115  
0000172C                          1116  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
0000172D                          1117  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
0000172E                          1118              DS.W    0
0000172E                          1119  
0000172E                          1120  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
0000172E                          1121  
00001740                          1122              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001740                          1123  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
000023C0                          1124              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
000023C0                          1125  
000023C0                          1126  
000023C0                          1127  
000023C0                          1128  -------------------- end include --------------------
000023C0                          1129              INCLUDE "VAR.X68"
000023C0                          1130  ; =============================================================================
000023C0                          1131  ; GAME VARS
000023C0                          1132  ; =============================================================================
000023C0                          1133  
000023C0                          1134  ; TO DO: DECLARE GAME VARIABLES HERE.
000023C0                          1135  
000023C0                          1136  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
000023C0                          1137  
000023C0                          1138  STACUR      DS.W    1                       ; CURRENT GAME STATE
000023C2                          1139  STANEXT     DS.W    1                       ; NEXT GAME STATE
000023C4                          1140  ;----------------------------------------------------------------------------
000023C4                          1141  
000023C4                          1142  ; PLAYER --------------------------------------------------------------------
000023C4                          1143  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
000023C6                          1144  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
000023C8                          1145  PLIVES      DS.W    1                       ;LIVES LEFT
000023CA                          1146  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
000023CC                          1147  PSPEED      DS.W    1
000023CE                          1148  ;----------------------------------------------------------------------------
000023CE                          1149  
000023CE                          1150  ; BALL ----------------------------------------------------------------------
000023CE                          1151  BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
000023D0                          1152  BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
000023D2                          1153  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
000023D4                          1154  BSPEEDY     DS.W    1
000023D6                          1155  BCOLOR      DS.W    1
000023D8                          1156  
000023D8                          1157  
000023D8                          1158  
000023D8                          1159  
000023D8                          1160  -------------------- end include --------------------
000023D8                          1161              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              23D6
BHEIGHT             8
BINCOLOR            FFFFFF
BINIT               1522
BINPOSX             F8
BINPOSY             1C8
BINSPEED            4
BLCOL               8
BLHEIGHT            10
BLPLOT              16B6
BLPLOT:LOOP1        16E2
BLPLOT:LOOP2        16D0
BLROW               A
BLUE                F7E78E
BLUPD               16B6
BLWIDTH             40
BPLOT               163E
BPOSX               23CE
BPOSY               23D0
BSPEEDX             23D2
BSPEEDY             23D4
BUPD                1548
BUPD:DOWN           1608
BUPD:END            1620
BUPD:LEFT           1560
BUPD:PLRXLEFT       159E
BUPD:PLRXMIDDLE     15B2
BUPD:PLRXRIGHT      15DE
BUPD:PLRY           158C
BUPD:RIGHT          1574
BUPD:UP             154C
BWIDTH              8
COLORS              11DC
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1740
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
GOVERC              FFFF
GOVERX              10
GOVERY              7
GREEN               95FF8C
INTPRSC             FFFFFF
INTPRSX             20
INTPRSY             52
INTTITC             DCAA7C
INTTITX             E
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             172B
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              172A
ORANGE              4E8CF3
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX             E0
PINWIDTH            40
PLIVES              23C8
PLRINIT             12A4
PLRUPD              12C4
PLRUPD:END          130A
PLRUPD:RIGHTKEY     12E8
PMOVE               8
PPLOT               1310
PPOSX               23C4
PPOSY               1D0
PSCORE              23CA
PSPEED              23CC
PURPLE              FFACAC
PWIDTH              23C6
SCRCTRL             200
SCRCYCCT            172D
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            172C
SCRIRQ              1
SCRISR              107E
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            2E4
SCTRLINIT           167E
STACUR              23C0
STAEMPTY            13EC
STAGOVR             3
STAGOVRP            14DE
STAGOVRP:GOVSTR     1518
STAGOVRU            14C8
STAGOVRU:END        14DC
STAINIT             1354
STAINTR             0
STAINTRI            111A
STAINTRP            144A
STAINTRP:PRSSTR     14B4
STAINTRP:TITSTR     14A4
STAINTRU            1434
STAINTRU:END        1448
STANEXT             23C2
STANONE             FFFFFFFF
STAPLAY             2
STAPLAYI            13EE
STAPLAYP            141C
STAPLAYU            1410
STAPLOT             13C0
STAPLOT:PLTTBL      13DC
START               1702
START:LOOP          170A
START:WINT          1710
STASPACE            1
STASPACEU           13FA
STASPACEU:END       140E
STAUPD              1366
STAUPD:DOUPD        138C
STAUPD:INITBL       13A4
STAUPD:UPDTBL       13B0
SYSINIT             1000
VCOLORS             1204
YELLOW              38EEF8
