00001A54 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 20/12/2019 15:03:45

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION : 
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8              
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =000002E4                 81  SCRWIDTH    EQU     740                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  
00001000                            93  -------------------- end include --------------------
00001000                            94              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            95  ; =============================================================================
00001000                            96  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            97  ; =============================================================================
00001000                            98  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101  ; INITIALIZES THE SYSTEM
00001000                           102  ; INPUT    - NONE
00001000                           103  ; OUTPUT   - NONE
00001000                           104  ; MODIFIES - NONE
00001000                           105  ; -----------------------------------------------------------------------------
00001000  205F                     106              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            107              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            108              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            109              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                110              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     111              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     112              RTS
0000101C                           113  
0000101C                           114  ; =============================================================================
0000101C                           115  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           116  ; =============================================================================
0000101C                           117  
0000101C                           118  ; -----------------------------------------------------------------------------
0000101C                           119  SCRINIT
0000101C                           120  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           121  ; INPUT    - NONE
0000101C                           122  ; OUTPUT   - NONE
0000101C                           123  ; MODIFIES - D0,D1,D2,D3
0000101C                           124  ; -----------------------------------------------------------------------------
0000101C                           125              ; TO DO:
0000101C                           126              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                127              ORI.W   #$0700,SR
00001020                           128              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           129              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       130              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           131              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                132              MOVE.B  #33,D0
0000102C  223C 02E401E0            133              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     134              TRAP    #15
00001034                           135              ; - SET WINDOWED MODE
00001034  7201                     136              MOVE.L  #1,D1
00001036  4E4F                     137              TRAP    #15
00001038                           138              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                139              MOVE.B  #11,D0
0000103C  323C FF00                140              MOVE.W  #$FF00,D1
00001040  4E4F                     141              TRAP    #15
00001042                           142              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                143              MOVE.B  #92,D0
00001046  123C 0011                144              MOVE.B  #17,D1
0000104A  4E4F                     145              TRAP    #15
0000104C                           146              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     147              MOVE.L  #11,D0
0000104E  323C FF00                148              MOVE.W  #$FF00,D1
00001052  4E4F                     149              TRAP    #15
00001054                           150              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           151              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       152              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           153              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           154              ;   TASK 32)
0000105C  103C 0020                155              MOVE.B  #32,D0
00001060  123C 0006                156              MOVE.B  #6,D1
00001064                           157         
00001064  143C 0081                158              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     159              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     160              TRAP    #15
0000106C                           161              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 00001A7E            162              CLR.B   SCRINTCT
00001072  4239 00001A7F            163              CLR.B   SCRCYCCT
00001078                           164              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                165              ANDI.W  #$F8FF,SR
0000107C  4E75                     166              RTS
0000107E                           167  
0000107E                           168  ; -----------------------------------------------------------------------------
0000107E                           169  SCRISR
0000107E                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           171  ; INPUT    - NONE
0000107E                           172  ; OUTPUT   - NONE
0000107E                           173  ; MODIFIES - NONE
0000107E                           174  ; -----------------------------------------------------------------------------
0000107E  5239 00001A7E            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 00001A7F            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     177              RTE
0000108C                           178  
0000108C                           179  ; -----------------------------------------------------------------------------
0000108C                           180  SCRUPD
0000108C                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           182  ; BUFFER FOR THE NEXT ONE.
0000108C                           183  ; INPUT    - NONE
0000108C                           184  ; OUTPUT   - NONE
0000108C                           185  ; MODIFIES - NONE
0000108C                           186  ; -----------------------------------------------------------------------------
0000108C                           187              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                188              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                189              MOVE.B  #94,D0
00001094  4E4F                     190              TRAP    #15
00001096  103C 000B                191              MOVE.B  #11,D0
0000109A  323C FF00                192              MOVE.W  #$FF00,D1
0000109E  4E4F                     193              TRAP    #15
000010A0  4CDF 0003                194              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     195              RTE
000010A6                           196  
000010A6                           197  ; =============================================================================
000010A6                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           199  ; =============================================================================
000010A6                           200  
000010A6                           201  ; -----------------------------------------------------------------------------
000010A6                           202  KBDINIT
000010A6                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           204  ; INPUT    - NONE
000010A6                           205  ; OUTPUT   - NONE
000010A6                           206  ; MODIFIES - NONE
000010A6                           207  ; -----------------------------------------------------------------------------
000010A6  4239 00001A7C            208              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 00001A7D            209              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     211              RTS
000010BC                           212  
000010BC                           213  ; -----------------------------------------------------------------------------
000010BC                           214  KBDREAD
000010BC                           215  ; TRAP SERVICE ROUTINE.
000010BC                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           219  ; INPUT    - NONE
000010BC                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           221  ; MODIFIES - NONE
000010BC                           222  ; -----------------------------------------------------------------------------
000010BC                           223              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                224              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                225              MOVE.B  #19,D0
000010C4                           226              
000010C4  223C 50104D20            227              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     228              TRAP    #15
000010CC                           229          
000010CC  4202                     230              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                231              MOVE.W  #3,D4
000010D2                           232              
000010D2                           233  .LOOP1      
000010D2                           234       
000010D2  E189                     235              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     236              MOVE.W  SR,D3                   
000010D6  0243 0001                237              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     238              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     239              OR.B    D3,D2                   
000010DE  51CC FFF2                240              DBRA    D4,.LOOP1
000010E2                           241          
000010E2                           242              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           243              
000010E2  223C 28272625            244              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     245              TRAP    #15
000010EA                           246              
000010EA  383C 0003                247              MOVE.W  #3,D4
000010EE                           248  .LOOP2      
000010EE  E189                     249              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     250              MOVE.W  SR,D3
000010F2  0243 0001                251              ANDI.W  #$0001,D3    
000010F6  E30A                     252              LSL.B   #1,D2
000010F8  8403                     253              OR.B    D3,D2
000010FA                           254              
000010FA  51CC FFF2                255              DBRA    D4,.LOOP2
000010FE                           256              
000010FE                           257              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           258              
000010FE                           259              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 00001A7C            260              MOVE.B  KBDVAL,D3
00001104  4603                     261              NOT.B   D3
00001106  13C2 00001A7C            262              MOVE.B  D2,KBDVAL
0000110C  C602                     263              AND.B   D2,D3
0000110E  13C3 00001A7D            264              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                265              MOVEM.L (A7)+,D0-D4
00001118  4E73                     266              RTE
0000111A                           267  
0000111A                           268  ; =============================================================================
0000111A                           269  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           270  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           271  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           272  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           273  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           274  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           275  ; =============================================================================
0000111A                           276  
0000111A                           277  ; -----------------------------------------------------------------------------
0000111A                           278  DMMINIT
0000111A                           279  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           280  ; INPUT    - NONE
0000111A                           281  ; OUTPUT   - NONE
0000111A                           282  ; MODIFIES - NONE
0000111A                           283  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                284              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001A80            285              LEA     DMMDATA,A0
00001124  303C 0031                286              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                287  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            288              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                289              DBRA.W  D0,.LOOP
00001136  4CDF 0101                290              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     291              RTS
0000113C                           292  
0000113C                           293  ; -----------------------------------------------------------------------------
0000113C                           294  DMMFIRST
0000113C                           295  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           296  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           297  ; INPUT    - NONE
0000113C                           298  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           299  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           300  ; -----------------------------------------------------------------------------
0000113C  41F9 00001A80            301              LEA     DMMDATA,A0
00001142  4A58                     302  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                303              BNE     DMMFRFND
00001148  D1FC 0000003E            304              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 000026FF            305  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     306              BLT     DMMFRLOP
00001156  207C 00000000            307              MOVE.L  #0,A0
0000115C  4E75                     308  DMMFRFND    RTS
0000115E                           309  
0000115E                           310  ; -----------------------------------------------------------------------------
0000115E                           311  DMMNEXT
0000115E                           312  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           313  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           314  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           315  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           316  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           317  ; -----------------------------------------------------------------------------
0000115E  2F00                     318              MOVE.L  D0,-(A7)
00001160  2008                     319              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            320              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            321              ADD.L   #DMMBSIZE,D0
0000116E  2040                     322              MOVE.L  D0,A0
00001170  201F                     323              MOVE.L  (A7)+,D0
00001172  60DA                     324              BRA     DMMFRCOM
00001174                           325  
00001174                           326  ; -----------------------------------------------------------------------------
00001174                           327  DMMFRSTO
00001174                           328  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           329  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           330  ; INPUT    - D0.W : ID TO SEARCH
00001174                           331  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           332  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           333  ; -----------------------------------------------------------------------------
00001174  41F9 00001A80            334              LEA     DMMDATA,A0
0000117A  B058                     335  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                336              BEQ     DMMFFND
00001180  D1FC 0000003E            337              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 000026FF            338  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     339              BLT     DMMFLOOP
0000118E  207C 00000000            340              MOVE.L  #0,A0
00001194  4E75                     341  DMMFFND     RTS
00001196                           342  
00001196                           343  ; -----------------------------------------------------------------------------
00001196                           344  DMMNEXTO
00001196                           345  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           346  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           347  ; INPUT    - D0.W : ID TO SEARCH
00001196                           348  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           351  ; -----------------------------------------------------------------------------
00001196  2F00                     352              MOVE.L  D0,-(A7)
00001198  2008                     353              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011A6  2040                     356              MOVE.L  D0,A0
000011A8  201F                     357              MOVE.L  (A7)+,D0
000011AA  60DA                     358              BRA     DMMFCOM
000011AC                           359  
000011AC                           360  ; -----------------------------------------------------------------------------
000011AC                           361  DMMALLOC
000011AC                           362  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           363  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           364  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           367  ; -----------------------------------------------------------------------------
000011AC  3F00                     368              MOVE.W  D0,-(A7)
000011AE  4240                     369              CLR.W   D0
000011B0  4EB8 1174                370              JSR     DMMFRSTO
000011B4  301F                     371              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            372              CMP.L   #0,A0
000011BC  6700 0006                373              BEQ     .END
000011C0  3140 FFFE                374              MOVE.W  D0,-2(A0)
000011C4  4E75                     375  .END        RTS
000011C6                           376  
000011C6                           377  ; -----------------------------------------------------------------------------
000011C6                           378  DMMFREE
000011C6                           379  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           380  ; SYSTEM (0)
000011C6                           381  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           382  ; OUTPUT   - NONE
000011C6                           383  ; MODIFIES - NONE
000011C6                           384  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                385              MOVEM.L D0/A0,-(A7)
000011CA  2008                     386              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            387              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     388              MOVE.L  D0,A0
000011D4  4250                     389              CLR.W   (A0)
000011D6  4CDF 0101                390              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     391              RTS
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  
000011DC                           407  
000011DC                           408  
000011DC                           409  
000011DC                           410  
000011DC                           411  
000011DC                           412  
000011DC                           413  -------------------- end include --------------------
000011DC                           414              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           415  ; =============================================================================
000011DC                           416  ; CONSTANTS
000011DC                           417  ; =============================================================================
000011DC                           418  
000011DC                           419  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           420  
000011DC  =0000000E                421  INTTITX     EQU     14                      ; TITLE X COORDINATE
000011DC  =00000007                422  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                423  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000020                424  INTPRSX     EQU     32                      ; PRESS FIRE X COORDINATE
000011DC  =00000052                425  INTPRSY     EQU     82                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                426  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC  =00000012                427  TXBSIZE     EQU     18                      ;BIG SIZE LETTERS
000011DC  =00000010                428  TXMSIZE     EQU     16                      ;MEDIUM SIZE LETTERS
000011DC  =0000000A                429  TXSSIZE     EQU     10                      ;SMALL SIZE LETTERS
000011DC                           430  
000011DC                           431  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                432  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                433  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                434  STASPACE    EQU     1                       ; ESPERA EL ESPACIO PARA DISPARAR LA BOLA 
000011DC  =00000002                435  STAPLAY    EQU     2                       ; NORMAL GAME STATE
000011DC                           436  ;STAPLAY2    EQU     3
000011DC                           437  ;STAPLAY3    EQU     4
000011DC  =00000003                438  STAGOVR     EQU     3                       ; GAME OVER STATE
000011DC                           439  ;----------------------------------------------------------------------------
000011DC                           440  
000011DC                           441  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           442  
000011DC  =00000012                443  GOVERX      EQU     18                      ; GAME OVER X COORDINATE
000011DC  =00000007                444  GOVERY      EQU     7                       ; GAME OVER Y COORDINATE
000011DC  =0000FFFF                445  GOVERC      EQU     $0000FFFF               ; GAME OVER COLOR
000011DC                           446  
000011DC                           447  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =00000201                448  SCRCTRL     EQU     513   
000011DC  =00000005                449  SCRLWIDTH   EQU     5
000011DC  =00000040                450  LIVEWIDTH   EQU     64
000011DC  =00000010                451  LIVEHEIGHT  EQU     16
000011DC  =000000FF                452  LIVECOLOR   EQU     $000000FF               ;ROJO
000011DC  =00000215                453  LIVEPOSX    EQU     SCRCTRL+20
000011DC  =0000001E                454  LIVEPOSY    EQU     30
000011DC                           455  
000011DC                           456  ;----------------------------------------------------------------------------
000011DC                           457  
000011DC                           458  
000011DC                           459  ; PLAYER --------------------------------------------------------------------
000011DC                           460  
000011DC  =00000040                461  PINWIDTH1    EQU     64                      ; PLAYER INITIAL WIDTH (PIXELS)
000011DC  =00000038                462  PINWIDTH2    EQU     56
000011DC  =00000030                463  PINWIDTH3    EQU     48
000011DC  =0000000C                464  PHEIGHT     EQU     12                      ; PLAYER HEIGHT (PIXELS)
000011DC  =00ECD59D                465  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011DC  =00000003                466  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011DC  =00000008                467  PMOVE       EQU     8                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011DC  =000001D0                468  PPOSY       EQU     SCRHEIGH-PHEIGHT-4      ;POSICION DE LA PLATAFORMA Y
000011DC  =000000E0                469  PINPOSX1     EQU     SCRCTRL/2-PINWIDTH1/2
000011DC  =000000E4                470  PINPOSX2     EQU     SCRCTRL/2-PINWIDTH2/2
000011DC  =000000E8                471  PINPOSX3     EQU     SCRCTRL/2-PINWIDTH3/2
000011DC  =00000032                472  PSCORETX     EQU    50                       ; SCORE X COORDINATE
000011DC  =00000004                473  PSCORETY     EQU    4                       ; SCORE Y COORDINATE
000011DC  =00FFFFFF                474  PSCORECOL   EQU     $00FFFFFF
000011DC                           475  ; ---------------------------------------------------------------------------
000011DC                           476  
000011DC                           477  ; BALL ----------------------------------------------------------------------
000011DC  =0000000A                478  BDIAMET     EQU     10                       ;ANCHURA DE LA BOLA
000011DC  =000000FB                479  BINPOSX     EQU     SCRCTRL/2-BDIAMET/2     ;POSICION DE LA PELOTA X INICIAL
000011DC  =000001CE                480  BINPOSY     EQU     PPOSY-2                 ;POSICION DE LA PELOTA Y INICIAL
000011DC  =FFFFFFFB                481  BINSPEED    EQU     -5                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011DC                           482  
000011DC  =00FFFFFF                483  BINCOLOR    EQU     $00FFFFFF
000011DC                           484  
000011DC                           485  ; ---------------------------------------------------------------------------
000011DC                           486  
000011DC                           487  
000011DC                           488  ;BLOCKS-------------------------------------------------------------------------
000011DC  =00000040                489  BLWIDTH     EQU     64
000011DC  =00000010                490  BLHEIGHT     EQU     16
000011DC= 00F7E78E 004E8CF3 ...    491  COLORS      DC.L    BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE
0000120C  =0000000C                492  BLROW       EQU     12
0000120C  =00000008                493  BLCOL       EQU     8
0000120C                           494  
0000120C                           495  
0000120C                           496  ;-------------------------------------------------------------------------------
0000120C                           497  
0000120C                           498  ;COLORS-------------------------------------------------------------
0000120C  =004E8CF3                499  ORANGE      EQU     $004E8CF3
0000120C  =00F7E78E                500  BLUE        EQU     $00F7E78E
0000120C  =00FFACAC                501  PURPLE      EQU     $00FFACAC
0000120C  =0038EEF8                502  YELLOW      EQU     $0038EEF8
0000120C  =0095FF8C                503  GREEN       EQU     $0095FF8C
0000120C                           504  ;-------------------------------------------------------------------
0000120C                           505  
0000120C                           506  
0000120C                           507  
0000120C                           508  
0000120C                           509  
0000120C                           510  
0000120C                           511  
0000120C                           512  
0000120C                           513  
0000120C                           514  
0000120C                           515  
0000120C                           516  
0000120C                           517  
0000120C                           518  
0000120C                           519  
0000120C                           520  
0000120C                           521  
0000120C                           522  
0000120C                           523  
0000120C                           524  
0000120C                           525  
0000120C                           526  
0000120C                           527  
0000120C                           528  
0000120C                           529  
0000120C                           530  -------------------- end include --------------------
0000120C                           531              INCLUDE "UTIL.X68"
0000120C                           532  ; =============================================================================
0000120C                           533  ; UTILITY MACROS
0000120C                           534  ; =============================================================================
0000120C                           535  
0000120C                           536  UTLSPEN     MACRO
0000120C                           537  ; WRAPPER FOR SET PEN TRAP 15 TASK.
0000120C                           538  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
0000120C                           539  ; OUTPUT   - NONE
0000120C                           540  ; MODIFIES - D0,D1
0000120C                           541  ; -----------------------------------------------------------------------------
0000120C                           542              MOVE.B  #80,D0
0000120C                           543              MOVE.L  \1,D1
0000120C                           544              TRAP    #15
0000120C                           545              ENDM
0000120C                           546  
0000120C                           547  ; -----------------------------------------------------------------------------
0000120C                           548  UTLSIZC     MACRO
0000120C                           549  ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
0000120C                           550  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR \2 SIZE (8, 9, 10, 12, 14, 16, 18))
0000120C                           551  ; OUTPUT   - NONE
0000120C                           552  ; MODIFIES - D0,D1
0000120C                           553  ; -----------------------------------------------------------------------------
0000120C                           554              MOVE.L  \1,D1
0000120C                           555              MOVE.L  #\2<<16|1,D2
0000120C                           556              MOVE.B  #21,D0
0000120C                           557              TRAP    #15
0000120C                           558              ENDM
0000120C                           559  ; -----------------------------------------------------------------------------
0000120C                           560  UTLSFIL     MACRO
0000120C                           561  ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000120C                           562  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
0000120C                           563  ; OUTPUT   - NONE
0000120C                           564  ; MODIFIES - D0,D1
0000120C                           565  ; -----------------------------------------------------------------------------
0000120C                           566              MOVE.B  #81,D0
0000120C                           567              MOVE.L  \1,D1
0000120C                           568              TRAP    #15
0000120C                           569              ENDM
0000120C                           570              
0000120C                           571  ; -----------------------------------------------------------------------------
0000120C                           572  UTLLOCT     MACRO
0000120C                           573  ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
0000120C                           574  ; INPUT    - \1 X, \2 Y
0000120C                           575  ; OUTPUT   - NONE
0000120C                           576  ; MODIFIES - D0,D1
0000120C                           577  ; -----------------------------------------------------------------------------
0000120C                           578              MOVE.W  #\1<<8|\2, D1
0000120C                           579              MOVE.B  #11,D0
0000120C                           580              TRAP    #15
0000120C                           581              ENDM
0000120C                           582     
0000120C                           583  ; -----------------------------------------------------------------------------
0000120C                           584  UTLSNDS     MACRO
0000120C                           585  ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000120C                           586  ; INPUT    - \1 ADDRESS TO STRING WITH NAME OF THE FILE, \2 NUM SOUNDS, 
0000120C                           587  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000120C                           588  ; MODIFIES - D0,A1
0000120C                           589  ; -----------------------------------------------------------------------------
0000120C                           590              LEA     \1, A1             ;PLAY EXPLOSION SOUND
0000120C                           591              MOVE.W  \2,D1
0000120C                           592              MOVE.B  #71,D0
0000120C                           593              TRAP    #15
0000120C                           594              MOVE.B  #72,D0
0000120C                           595              TRAP    #15
0000120C                           596              
0000120C                           597              ENDM
0000120C                           598              
0000120C                           599  ; -----------------------------------------------------------------------------
0000120C                           600  UTLSNDST     MACRO
0000120C                           601  ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000120C                           602  ; INPUT    - NONE 
0000120C                           603  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000120C                           604  ; MODIFIES - D0,A1
0000120C                           605  ; -----------------------------------------------------------------------------
0000120C                           606              MOVE.L  #3,D2
0000120C                           607              MOVE.B  #76,D0
0000120C                           608              TRAP    #15
0000120C                           609              
0000120C                           610              ENDM
0000120C                           611              
0000120C                           612  ; =============================================================================
0000120C                           613  ; UTILITY SUBROUTINES
0000120C                           614  ; =============================================================================
0000120C                           615  ; -----------------------------------------------------------------------------
0000120C                           616  UTLCHCOLW
0000120C                           617  ; CHECKS COLLISION WITH WALL
0000120C                           618  ; INPUT    - D0.W BPOSX1
0000120C                           619  ;            D1.W BPOSY1
0000120C                           620  ;            D2.W BPOSX2
0000120C                           621  ;            D3.W BPOSY2
0000120C                           622  ; OUTPUT   - 
0000120C                           623  ; MODIFIES - 
0000120C                           624  ; -----------------------------------------------------------------------------
0000120C  48E7 F080                625              MOVEM.L D0-D3/A0,-(A7)
00001210  41F9 000012EE            626              LEA.L   .COLLISIONS,A0
00001216  B258                     627              CMP.W   (A0)+,D1      ;UP
00001218  6E00 001C                628              BGT     .LEFT
0000121C                           629  
0000121C  4479 00002710            630              NEG.W   BSPEEDY
00001222  4279 00002718            631              CLR.W   BPOSY1
00001228  33FC 000A 0000271A       632              MOVE.W  #BDIAMET,BPOSY2
00001230  4EF9 000012E8            633              JMP     .END 
00001236                           634  .LEFT        
00001236  B058                     635              CMP.W   (A0)+,D0
00001238  6E00 001C                636              BGT     .RIGHT
0000123C  4479 0000270E            637              NEG.W   BSPEEDX
00001242  4279 00002714            638              CLR.W   BPOSX1
00001248  33FC 000A 00002716       639              MOVE.W  #BDIAMET,BPOSX2
00001250  4EF9 000012E8            640              JMP     .END
00001256                           641  .RIGHT      
00001256                           642              
00001256  B458                     643              CMP.W   (A0)+,D2
00001258  6D00 001E                644              BLT     .DOWN
0000125C  4479 0000270E            645              NEG.W   BSPEEDX
00001262  33FC 0201 00002716       646              MOVE.W  #SCRCTRL,BPOSX2
0000126A  33FC 01F7 00002714       647              MOVE.W  #SCRCTRL-BDIAMET,BPOSX1
00001272  4EF9 000012E8            648              JMP     .END
00001278                           649  .DOWN       
00001278  B658                     650              CMP.W   (A0)+,D3         
0000127A  6E00 0008                651              BGT     .MINLIVE                  
0000127E  4EF9 000012E8            652              JMP     .END  
00001284                           653  .MINLIVE       
00001284                           654m             UTLSNDS .SOUNDL,#1
00001284                           655m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001284                           656m ; INPUT    - .SOUNDL ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001284                           657m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001284                           658m ; MODIFIES - D0,A1
00001284                           659m ; -----------------------------------------------------------------------------
0000129A  33FC 01E0 0000271A       660              MOVE.W  #SCRHEIGH,BPOSY2
000012A2  33FC 01D6 00002718       661              MOVE.W  #SCRHEIGH-BDIAMET,BPOSY1 
000012AA  5379 00002708            662              SUB.W   #1,PLIVES                
000012B0  6600 002E                663              BNE     .RESET               ;SALTA SI NO SE HAN AGOTADO LAS VIDAS              
000012B4                           664m             UTLSNDST
000012B4                           665m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000012B4                           666m ; INPUT    - NONE 
000012B4                           667m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012B4                           668m ; MODIFIES - D0,A1
000012B4                           669m ; -----------------------------------------------------------------------------
000012BC                           670m             UTLSNDS .SOUNDG,#1
000012BC                           671m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000012BC                           672m ; INPUT    - .SOUNDG ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000012BC                           673m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012BC                           674m ; MODIFIES - D0,A1
000012BC                           675m ; -----------------------------------------------------------------------------
000012D2  33FC 0003 00002702       676              MOVE.W  #STAGOVR,(STANEXT)
000012DA  4EF9 000012E8            677              JMP     .END
000012E0                           678  .RESET     
000012E0  33FC 0001 00002702       679              MOVE.W  #STASPACE,(STANEXT)            
000012E8                           680  .END        
000012E8  4CDF 010F                681              MOVEM.L (A7)+,D0-D3/A0
000012EC  4E75                     682              RTS
000012EE= 0000 0000 0201 01E0      683  .COLLISIONS DC.W    0,0,SCRCTRL,SCRHEIGH
000012F6= 67616D65 206F7665 ...    684  .SOUNDG      DC.L    'game over.wav',0
0000130A= 6C6F7365 206C6966 ...    685  .SOUNDL     DC.L    'lose life.wav',0
0000131E                           686  ; -----------------------------------------------------------------------------
0000131E                           687  UTLCHCOLP
0000131E                           688  ; CHECKS COLLISION WITH PLATAFORM
0000131E                           689  ; INPUT    - D0.W BPOSX1
0000131E                           690  ;            D1.W BPOSY1
0000131E                           691  ;            D2.W PPOSX2
0000131E                           692  ;            D3.W PPOSY2
0000131E                           693  ; OUTPUT   
0000131E                           694  ;           
0000131E                           695  ; MODIFIES - D4,D5
0000131E                           696  ; -----------------------------------------------------------------------------
0000131E  48E7 0C00                697              MOVEM.L D4-D5,-(A7)
00001322  383C 01D0                698              MOVE.W  #PPOSY,D4
00001326  B644                     699              CMP.W   D4,D3
00001328  6D00 0086                700              BLT     .END                    ;SI ESTÁ MÁS A ARRIBA DE LA PLATAFORMA NO HAY COLISIÓN
0000132C  3839 00002704            701              MOVE.W  PPOSX,D4
00001332  B444                     702              CMP.W   D4,D2
00001334  6D00 007A                703              BLT     .END                    ;SI ESTÁ MÁS A LA IZQUIERDA DE LA PLATAFORMA NO HAY COLISIÓN
00001338  D879 00002706            704              ADD.W   PWIDTH,D4
0000133E  B044                     705              CMP.W    D4,D0
00001340  6E00 006E                706              BGT     .END                    ;SI ESTÁ MÁS A LA DERECHA NO HAY COLISIÓN
00001344                           707              ;AQUÍ HAY COLISIÓN, TENEMOS QUE DETECTAR CUAL
00001344  383C 01D0                708              MOVE.W  #PPOSY,D4
00001348  B244                     709              CMP.W   D4,D1
0000134A  6E00 005E                710              BGT     .LADOS
0000134E  4479 00002710            711              NEG.W   BSPEEDY                 ;COLISIÓN CON LA PARTE DE ARRIBA
00001354  33C4 0000271A            712              MOVE.W  D4,BPOSY2
0000135A  0444 000A                713              SUB.W   #BDIAMET,D4
0000135E  33C4 00002718            714              MOVE.W  D4,BPOSY1       
00001364                           715  .PLRXMIDDLE 
00001364  3839 00002706            716              MOVE.W  PWIDTH,D4
0000136A  E24C                     717              LSR.W   #1,D4
0000136C  3A39 00002704            718              MOVE.W  PPOSX,D5 
00001372  DA44                     719              ADD.W   D4,D5                   ;D5 = CENTRO PLATAFORMA
00001374  BA42                     720              CMP.W   D2,D5                   ;CENTRO - POS PEL
00001376  6B00 001A                721              BMI     .PLRXRIGHT
0000137A  3839 0000270E            722              MOVE.W  BSPEEDX,D4
00001380  6B00 002E                723              BMI     .END
00001384                           724                                           
00001384  4444                     725              NEG.W   D4
00001386  33C4 0000270E            726              MOVE.W  D4,BSPEEDX
0000138C  4EF9 000013B0            727              JMP     .END
00001392                           728              
00001392                           729  .PLRXRIGHT             
00001392  3839 0000270E            730              MOVE.W  BSPEEDX,D4
00001398  6A00 0016                731              BPL     .END              ;SI ES POSITIVO SOLO NEGAMOS Y
0000139C  4444                     732              NEG.W   D4
0000139E  33C4 0000270E            733              MOVE.W  D4,BSPEEDX
000013A4  4EF9 000013B0            734              JMP     .END
000013AA                           735  
000013AA  4479 0000270E            736  .LADOS      NEG.W   BSPEEDX                 ;COLISIÓN CON LOS LADOS
000013B0  4CDF 0030                737  .END        MOVEM.L (A7)+,D4-D5 
000013B4  4E75                     738              RTS
000013B6                           739  
000013B6                           740  
000013B6                           741  ; -----------------------------------------------------------------------------
000013B6                           742  UTLCOLBL   
000013B6                           743  ; CHECKS COLLISION WITH BLOCKS
000013B6                           744  ; INPUT    - POSITION BALL \1 X \2 Y TO CHECK COLLISION WITH BLOCK
000013B6                           745  ; OUTPUT   
000013B6                           746  ;           
000013B6                           747  ; MODIFIES - NONE
000013B6                           748  ; -----------------------------------------------------------------------------
000013B6  E889                     749              LSR.L  #4,D1                    ;POSY/BLHEIGHT. D1 -> FILA
000013B8  343C 000B                750              MOVE.W  #BLROW-1,D2
000013BC  B441                     751              CMP.W   D1,D2                   ;SI ESTÁ POR DEBAJO DE LA ÚLTIMA FILA SALTA DIRECTO A END
000013BE  6D00 0082                752              BLT     .END                    
000013C2  41F9 0000271E            753              LEA.L   BLMATRIX,A0
000013C8  D1C1                     754              ADDA.L  D1,A0                   ;CARGAMOS EN A0 LA DIRECCIÓN DEL BYTE DE LA FILA
000013CA                           755                                          
000013CA  EC88                     756              LSR.L  #6,D0                    ;D0 -> COLUMNA 
000013CC  363C 0007                757              MOVE.W  #BLCOL-1,D3                           
000013D0  9640                     758              SUB.W   D0,D3                   ;D3 -> COLUMNA (DESDE DRCHA) DONDE ESTÁ LA BOLA
000013D2  6A00 0004                759              BPL     .TEST  
000013D6  4283                     760              CLR.L   D3                        ;POR SI SALE NEGATIVO LA REAJUSTAMOS
000013D8                           761  .TEST
000013D8  0710                     762              BTST.B  D3,(A0)                 ;MIRAMOS EL BIT DONDE ESTA 
000013DA  6700 0066                763              BEQ     .END                    ;SALTA SI EN ESA POSICION YA HABIA UN 0
000013DE  3439 00002714            764              MOVE.W  BPOSX1,D2
000013E4  ED88                     765              LSL.L   #6,D0                   ;COORDENADA IZQUIERDA DEL BLOQUE
000013E6  B042                     766              CMP     D2,D0
000013E8  6D00 000E                767              BLT     .RIGHT
000013EC  4479 0000270E            768              NEG.W   BSPEEDX
000013F2  4EF9 00001418            769              JMP     .COLBL
000013F8  3439 00002716            770  .RIGHT      MOVE.W  BPOSX2,D2
000013FE  E388                     771              LSL.L   #1,D0
00001400  B042                     772              CMP     D2,D0                   ;POSBLOQUE - POS X (DERECHA) DE LA BOLA 
00001402  6E00 000E                773              BGT     .NEGY                   ;5-7= -2 
00001406  4479 0000270E            774              NEG.W   BSPEEDX
0000140C  4EF9 00001418            775              JMP     .COLBL
00001412  4479 00002710            776  .NEGY       NEG.W   BSPEEDY
00001418                           777              
00001418                           778  .COLBL
00001418  383C 0001                779              MOVE.W  #1,D4
0000141C  0790                     780              BCLR    D3,(A0)
0000141E  5379 0000271C            781              SUB.W   #1,BLCOUNTER
00001424                           782m             UTLSNDS  .SOUND,#1
00001424                           783m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001424                           784m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001424                           785m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001424                           786m ; MODIFIES - D0,A1
00001424                           787m ; -----------------------------------------------------------------------------
0000143A  0679 0064 0000270A       788              ADD.W   #100,PSCORE
00001442                           789                                  
00001442                           790  .END            
00001442  4E75                     791              RTS
00001444= 626C6F63 6B732E77 ...    792  .SOUND      DC.L    'blocks.wav',0
00001454                           793  ; -----------------------------------------------------------------------------
00001454                           794  UTLCHCOL
00001454                           795  ; CHECKS COLLISION
00001454                           796  ; INPUT    - D0.W X0 COORDINATE ball
00001454                           797  ;            D1.W Y0 COORDINATE ball
00001454                           798  ;            D2.W X1 COORDINATE plataforma
00001454                           799  ;            D3.W Y1 COORDINATE plataforma
00001454                           800  ;            D4.W WIDTH 0      ball
00001454                           801  ;            D5.W WIDTH 1      plataforma 
00001454                           802  ;            D6.W HEIGHT 0     ball
00001454                           803  ;            D7.W HEIGHT 1     plataforma
00001454                           804  ; OUTPUT   - D0.B=FF - COLLISION, =0 - NO COLLISION
00001454                           805  ; MODIFIES - NONE
00001454                           806  ; -----------------------------------------------------------------------------
00001454  48A7 0F00                807              MOVEM.W D4-D7,-(A7)
00001458  D840                     808              ADD.W   D0,D4
0000145A  B842                     809              CMP.W   D2,D4
0000145C  6F00 0022                810              BLE     .NOCOL
00001460  DA42                     811              ADD.W   D2,D5
00001462  BA40                     812              CMP.W   D0,D5
00001464  6F00 001A                813              BLE     .NOCOL
00001468  DC41                     814              ADD.W   D1,D6
0000146A  BC43                     815              CMP.W   D3,D6
0000146C  6F00 0012                816              BLE     .NOCOL
00001470  DE43                     817              ADD.W   D3,D7
00001472  BE41                     818              CMP.W   D1,D7
00001474  6F00 000A                819              BLE     .NOCOL
00001478  103C 00FF                820              MOVE.B  #$FF,D0
0000147C  6000 0004                821              BRA     .END
00001480  4200                     822  .NOCOL      CLR.B   D0
00001482  4C9F 00F0                823  .END        MOVEM.W (A7)+,D4-D7
00001486  4E75                     824              RTS
00001488                           825  
00001488                           826  
00001488                           827  
00001488                           828  
00001488                           829  
00001488                           830  
00001488                           831  
00001488                           832  
00001488                           833  -------------------- end include --------------------
00001488                           834              INCLUDE "PLAYER.X68"            ;EL JUGADOR
00001488                           835  ; -----------------------------------------------------------------------------
00001488                           836  ;           PLAYER
00001488                           837  ; -----------------------------------------------------------------------------
00001488                           838  PLRINIT
00001488                           839  ; INITIALIZES THE PLAYER
00001488                           840  ; INPUT    - NONE
00001488                           841  ; OUTPUT   - NONE
00001488                           842  ; MODIFIES - NONE
00001488                           843  ; -----------------------------------------------------------------------------
00001488                           844              
00001488  33FC 00E0 00002704       845              MOVE.W  #PINPOSX1,PPOSX
00001490  33FC 0040 00002706       846              MOVE.W  #PINWIDTH1,PWIDTH
00001498                           847              
00001498                           848            
00001498  4E75                     849              RTS
0000149A                           850              
0000149A                           851  ; -----------------------------------------------------------------------------
0000149A                           852  PLRREV
0000149A                           853  ; PLAYER REVIVES, INITIALIZE POSITION
0000149A                           854  ; INPUT    - NONE
0000149A                           855  ; OUTPUT   - NONE
0000149A                           856  ; MODIFIES - NONE
0000149A                           857  ; -----------------------------------------------------------------------------
0000149A                           858              ;DEBERIAMOS CALCULAR LA POSICION NUEVA A PARTIR DE LA WIDTH QUE NOS PASEN
0000149A                           859              
0000149A  33FC 00E0 00002704       860              MOVE.W  #PINPOSX1,PPOSX
000014A2  33FC 0040 00002706       861              MOVE.W  #PINWIDTH1,PWIDTH
000014AA                           862            
000014AA  4E75                     863              RTS
000014AC                           864  
000014AC                           865  ; -----------------------------------------------------------------------------
000014AC                           866  
000014AC                           867  PLRUPD      
000014AC  48E7 6000                868              MOVEM.L D1-D2,-(A7)
000014B0  1239 00001A7C            869              MOVE.B  KBDVAL,D1  
000014B6  E219                     870              ROR.B   #1,D1                   ;IZQUIERDA
000014B8  6400 0016                871              BCC     .RIGHTKEY               ;CUANDO C = 0
000014BC                           872              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
000014BC  3439 00002704            873              MOVE.W  PPOSX,D2
000014C2  B47C 0000                874              CMP.W    #0,D2
000014C6  6F00 0008                875              BLE     .RIGHTKEY
000014CA  5179 00002704            876              SUB.W   #PMOVE,(PPOSX)
000014D0                           877  .RIGHTKEY
000014D0  E209                     878              LSR.B   #1,D1                   
000014D2  E219                     879              ROR.B   #1,D1                   
000014D4  6400 001C                880              BCC     .END
000014D8                           881              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
000014D8  3439 00002704            882              MOVE.W  PPOSX,D2
000014DE  D479 00002706            883              ADD.W   PWIDTH,D2 
000014E4                           884  
000014E4  B47C 01FC                885              CMP.W    #SCRCTRL-SCRLWIDTH,D2
000014E8  6C00 0008                886              BGE     .END
000014EC  5079 00002704            887              ADD.W   #PMOVE,PPOSX
000014F2                           888  .END
000014F2  4CDF 0006                889              MOVEM.L (A7)+,D1-D2
000014F6  4E75                     890              RTS
000014F8                           891  
000014F8                           892  
000014F8                           893  PPLOT
000014F8  48E7 FC40                894              MOVEM.L  D0-D5/A1,-(A7)
000014FC                           895              ;PLOT THE PLATAFORM
000014FC                           896m             UTLSPEN #PCOLOR 
000014FC                           897m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000014FC                           898m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
000014FC                           899m ; OUTPUT   - NONE
000014FC                           900m ; MODIFIES - D0,D1
000014FC                           901m ; -----------------------------------------------------------------------------
00001508                           902m             UTLSFIL #PCOLOR
00001508                           903m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001508                           904m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
00001508                           905m ; OUTPUT   - NONE
00001508                           906m ; MODIFIES - D0,D1
00001508                           907m ; -----------------------------------------------------------------------------
00001514  3239 00002704            908              MOVE.W  PPOSX,D1
0000151A  343C 01D0                909              MOVE.W  #PPOSY,D2                    
0000151E  3639 00002704            910              MOVE.W  PPOSX,D3
00001524  3839 00002706            911              MOVE.W  PWIDTH,D4 
0000152A  D644                     912              ADD.W   D4,D3
0000152C  383C 01DC                913              MOVE.W  #PPOSY+PHEIGHT,D4
00001530  303C 0057                914              MOVE.W  #87,D0
00001534  4E4F                     915              TRAP    #15
00001536                           916              
00001536                           917              ;PLOT LIFE
00001536  3A39 00002708            918              MOVE.W  PLIVES,D5
0000153C  6700 0076                919              BEQ     .END
00001540                           920m             UTLSPEN #$00FFFFFF  
00001540                           921m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001540                           922m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
00001540                           923m ; OUTPUT   - NONE
00001540                           924m ; MODIFIES - D0,D1
00001540                           925m ; -----------------------------------------------------------------------------
0000154C                           926m             UTLSFIL #LIVECOLOR
0000154C                           927m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000154C                           928m ; INPUT    - #LIVECOLOR COLOR IN FORMAT $00BBGGRR
0000154C                           929m ; OUTPUT   - NONE
0000154C                           930m ; MODIFIES - D0,D1
0000154C                           931m ; -----------------------------------------------------------------------------
00001558  5345                     932              SUB.W   #1,D5             
0000155A  103C 0057                933              MOVE.B  #87,D0
0000155E  323C 0215                934              MOVE.W  #LIVEPOSX,D1
00001562  3601                     935              MOVE.W  D1,D3
00001564  0643 0040                936              ADD.W   #LIVEWIDTH,D3
00001568  343C 001E                937              MOVE.W  #LIVEPOSY,D2
0000156C  3802                     938              MOVE.W  D2,D4
0000156E  0644 0010                939              ADD.W   #LIVEHEIGHT,D4
00001572                           940  .LOOP           
00001572  4E4F                     941              TRAP    #15
00001574  3203                     942              MOVE.W  D3,D1
00001576  0643 0040                943              ADD.W   #LIVEWIDTH,D3
0000157A  51CD FFF6                944              DBRA    D5,.LOOP
0000157E                           945              
0000157E                           946              ;PLOT SCORE
0000157E                           947m             UTLLOCT PSCORETX,PSCORETY            
0000157E                           948m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
0000157E                           949m ; INPUT    - PSCORETX X, PSCORETY Y
0000157E                           950m ; OUTPUT   - NONE
0000157E                           951m ; MODIFIES - D0,D1
0000157E                           952m ; -----------------------------------------------------------------------------
00001588                           953m             UTLSIZC #PSCORECOL,TXMSIZE           ;PENCOLOR Y TAMAÑO
00001588                           954m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001588                           955m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR TXMSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001588                           956m ; OUTPUT   - NONE
00001588                           957m ; MODIFIES - D0,D1
00001588                           958m ; -----------------------------------------------------------------------------
0000159A                           959m             UTLSFIL #$00000000
0000159A                           960m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000159A                           961m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
0000159A                           962m ; OUTPUT   - NONE
0000159A                           963m ; MODIFIES - D0,D1
0000159A                           964m ; -----------------------------------------------------------------------------
000015A2  43F9 000015BA            965              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
000015A8  3239 0000270A            966              MOVE.W  PSCORE,D1
000015AE  103C 0011                967              MOVE.B  #17,D0
000015B2  4E4F                     968              TRAP    #15
000015B4                           969              
000015B4                           970  .END            
000015B4  4CDF 023F                971              MOVEM.L (A7)+,D0-D5/A1
000015B8  4E75                     972              RTS
000015BA                           973              
000015BA= 53 43 4F 52 45 3A ...    974  .TXTSCORE   DC.B    'SCORE: ',0
000015C2                           975              DS.W    0
000015C2                           976  
000015C2                           977  
000015C2                           978  
000015C2                           979  
000015C2                           980  
000015C2                           981  
000015C2                           982  
000015C2                           983  
000015C2                           984  
000015C2                           985  
000015C2                           986  
000015C2                           987  
000015C2                           988  
000015C2                           989  
000015C2                           990  
000015C2                           991  
000015C2                           992  
000015C2                           993  -------------------- end include --------------------
000015C2                           994              INCLUDE "STATES.X68"            ;
000015C2                           995  ; =============================================================================
000015C2                           996  ; GAME STATE MANAGEMENT
000015C2                           997  ; =============================================================================
000015C2                           998  
000015C2                           999  ; -----------------------------------------------------------------------------
000015C2                          1000  STAINIT
000015C2                          1001  ; INITALIZES THE STATE MANAGER
000015C2                          1002  ; INPUT    - NONE
000015C2                          1003  ; OUTPUT   - NONE
000015C2                          1004  ; MODIFIES - NONE
000015C2                          1005  ; -----------------------------------------------------------------------------
000015C2  33FC FFFF 00002700      1006              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
000015CA                          1007             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
000015CA  33FC 0000 00002702      1008              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
000015D2  4E75                    1009              RTS
000015D4                          1010  
000015D4                          1011  ; -----------------------------------------------------------------------------
000015D4                          1012  STAUPD
000015D4                          1013  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
000015D4                          1014  ; INPUT    - NONE
000015D4                          1015  ; OUTPUT   - NONE
000015D4                          1016  ; MODIFIES - NONE
000015D4                          1017  ; -----------------------------------------------------------------------------
000015D4  48E7 8080               1018              MOVEM.L D0/A0,-(A7)
000015D8  4280                    1019              CLR.L   D0
000015DA  3039 00002702           1020              MOVE.W  (STANEXT),D0
000015E0  B079 00002700           1021              CMP.W   (STACUR),D0
000015E6  6700 0012               1022              BEQ     .DOUPD
000015EA  33C0 00002700           1023              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
000015F0  E588                    1024              LSL.L   #2,D0
000015F2  2040                    1025              MOVE.L  D0,A0
000015F4  2068 1612               1026              MOVE.L  .INITBL(A0),A0
000015F8  4E90                    1027              JSR     (A0)
000015FA  4280                    1028  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
000015FC  3039 00002700           1029              MOVE.W  (STACUR),D0
00001602  E588                    1030              LSL.L   #2,D0
00001604  2040                    1031              MOVE.L  D0,A0
00001606  2068 161E               1032              MOVE.L  .UPDTBL(A0),A0
0000160A  4E90                    1033              JSR     (A0)
0000160C  4CDF 0101               1034              MOVEM.L (A7)+,D0/A0
00001610  4E75                    1035              RTS
00001612= 000016A8 0000165C ...   1036  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTY ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
0000161E                          1037                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
0000161E                          1038                                               ;EL 2 ES NO HACER NADA 
0000161E= 000016D8 00001668 ...   1039  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAGOVRU
0000162E                          1040                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
0000162E                          1041                                              ;EL 2 HACE QUE SE UPDATE 
0000162E                          1042  
0000162E                          1043  ; -----------------------------------------------------------------------------
0000162E                          1044  STAPLOT
0000162E                          1045  ; PERFORMS STATE PLOT
0000162E                          1046  ; INPUT    - NONE
0000162E                          1047  ; OUTPUT   - NONE
0000162E                          1048  ; MODIFIES - NONE
0000162E                          1049  ; -----------------------------------------------------------------------------
0000162E  48E7 8080               1050              MOVEM.L D0/A0,-(A7)
00001632  4280                    1051              CLR.L   D0
00001634  3039 00002700           1052              MOVE.W  (STACUR),D0
0000163A  E588                    1053              LSL.L   #2,D0
0000163C  2040                    1054              MOVE.L  D0,A0
0000163E  2068 164A               1055              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
00001642  4E90                    1056              JSR     (A0)
00001644  4CDF 0101               1057              MOVEM.L (A7)+,D0/A0
00001648  4E75                    1058              RTS
0000164A= 0000170A 00001690 ...   1059  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAGOVRP
0000165A                          1060                             ;SPACE      NIVEL1   NIVEL2    NIVEL3   
0000165A                          1061  
0000165A                          1062  ; -----------------------------------------------------------------------------
0000165A                          1063  STAEMPTY
0000165A                          1064  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
0000165A                          1065  ; INPUT    - NONE
0000165A                          1066  ; OUTPUT   - NONE
0000165A                          1067  ; MODIFIES - NONE
0000165A                          1068  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
0000165A                          1069  ; -----------------------------------------------------------------------------
0000165A  4E75                    1070              RTS
0000165C                          1071  
0000165C                          1072  ; -----------------------------------------------------------------------------
0000165C                          1073  STAPLAYI    ;DEL NIVEL1, COMIENZO
0000165C                          1074  
0000165C                          1075  ; PLAY STATE INITIALIZATION.
0000165C                          1076  ; INPUT    - NONE
0000165C                          1077  ; OUTPUT   - NONE
0000165C                          1078  ; MODIFIES - NONE
0000165C                          1079  ; NOTE     - JUST A WRAPPER FOR PLRINIT
0000165C                          1080  ; -----------------------------------------------------------------------------
0000165C  4EB8 1488               1081              JSR     PLRINIT
00001660  4EB9 000017E2           1082              JSR     BINIT
00001666  4E75                    1083              RTS
00001668                          1084  ; -----------------------------------------------------------------------------
00001668                          1085  STASPACEU
00001668                          1086  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
00001668                          1087  ; INPUT    - NONE
00001668                          1088  ; OUTPUT   - NONE
00001668                          1089  ; MODIFIES - NONE
00001668                          1090  ; -----------------------------------------------------------------------------
00001668                          1091             
00001668  0839 0004 00001A7D      1092              BTST.B  #KBDBITF1,(KBDEDGE)
00001670  6700 000A               1093              BEQ     .END
00001674  33FC 0002 00002702      1094              MOVE.W  #STAPLAY,(STANEXT)
0000167C                          1095  .END        
0000167C  4E75                    1096              RTS
0000167E                          1097                               
0000167E                          1098  
0000167E                          1099  ; -----------------------------------------------------------------------------
0000167E                          1100  STAPLAYU
0000167E                          1101  ; PLAY STATE UPDATE
0000167E                          1102  ; INPUT    - NONE
0000167E                          1103  ; OUTPUT   - NONE
0000167E                          1104  ; MODIFIES - NONE
0000167E                          1105  ; -----------------------------------------------------------------------------
0000167E                          1106              
0000167E  4EB8 14AC               1107              JSR     PLRUPD
00001682  4EB9 000019EE           1108              JSR     BLUPD
00001688  4EB9 0000187A           1109              JSR     BUPD                    
0000168E  4E75                    1110              RTS
00001690                          1111  ; -----------------------------------------------------------------------------
00001690                          1112  STAPLAYP
00001690                          1113  ; PLAY STATE PLOT
00001690                          1114  ; INPUT    - NONE
00001690                          1115  ; OUTPUT   - NONE
00001690                          1116  ; MODIFIES - NONE
00001690                          1117  ; -----------------------------------------------------------------------------
00001690  4EB9 00001916           1118              JSR     BPLOT
00001696  4EB9 000019F0           1119              JSR     BLPLOT
0000169C  4EB8 14F8               1120              JSR     PPLOT
000016A0  4EB9 00001956           1121              JSR     SCTRLPLOT
000016A6  4E75                    1122              RTS
000016A8                          1123  
000016A8                          1124  ; -----------------------------------------------------------------------------
000016A8                          1125  STAINTRI                  ;VACIA LA MEMORIA DEL JUEGO
000016A8                          1126  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
000016A8                          1127  
000016A8                          1128  ; INTRO STATE INIT
000016A8                          1129  ; INPUT    - NONE
000016A8                          1130  ; OUTPUT   - NONE
000016A8                          1131  ; MODIFIES - NONE
000016A8                          1132  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
000016A8                          1133  ; -----------------------------------------------------------------------------
000016A8                          1134m             UTLSNDS .SOUND,#1
000016A8                          1135m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000016A8                          1136m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000016A8                          1137m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000016A8                          1138m ; MODIFIES - D0,A1
000016A8                          1139m ; -----------------------------------------------------------------------------
000016BE  4EB8 111A               1140              JSR     DMMINIT
000016C2  4E75                    1141              RTS
000016C4= 73746172 74206C61 ...   1142  .SOUND      DC.L    'start largo.wav',0
000016D8                          1143  ; -----------------------------------------------------------------------------
000016D8                          1144  STAINTRU
000016D8                          1145  ; INTRO STATE UPDATE
000016D8                          1146  ; INPUT    - NONE
000016D8                          1147  ; OUTPUT   - NONE
000016D8                          1148  ; MODIFIES - NONE
000016D8                          1149  ; -----------------------------------------------------------------------------
000016D8                          1150              
000016D8  0839 0004 00001A7D      1151              BTST.B  #KBDBITF1,(KBDEDGE)
000016E0  6700 0026               1152              BEQ     .END
000016E4                          1153m             UTLSNDST
000016E4                          1154m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000016E4                          1155m ; INPUT    - NONE 
000016E4                          1156m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000016E4                          1157m ; MODIFIES - D0,A1
000016E4                          1158m ; -----------------------------------------------------------------------------
000016EC  33FC 0001 00002702      1159              MOVE.W  #STASPACE,(STANEXT)
000016F4  4EB9 000019CA           1160              JSR     BLINIT
000016FA  33FC 0003 00002708      1161              MOVE.W  #PINLIVE,PLIVES
00001702  4279 0000270A           1162              CLR.W   PSCORE            
00001708  4E75                    1163  .END        RTS
0000170A                          1164  
0000170A                          1165  ; -----------------------------------------------------------------------------
0000170A                          1166  STAINTRP
0000170A                          1167  ; INTRO STATE PLOT
0000170A                          1168  ; INPUT    - NONE
0000170A                          1169  ; OUTPUT   - NONE
0000170A                          1170  ; MODIFIES - NONE
0000170A                          1171  ; -----------------------------------------------------------------------------
0000170A  48E7 E040               1172              MOVEM.L A1/D0-D2,-(A7)
0000170E                          1173              ;TITULO
0000170E                          1174m             UTLLOCT INTTITX,INTTITY      
0000170E                          1175m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
0000170E                          1176m ; INPUT    - INTTITX X, INTTITY Y
0000170E                          1177m ; OUTPUT   - NONE
0000170E                          1178m ; MODIFIES - D0,D1
0000170E                          1179m ; -----------------------------------------------------------------------------
00001718                          1180m             UTLSIZC #INTTITC,TXBSIZE
00001718                          1181m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001718                          1182m ; INPUT    - #INTTITC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001718                          1183m ; OUTPUT   - NONE
00001718                          1184m ; MODIFIES - D0,D1
00001718                          1185m ; -----------------------------------------------------------------------------
0000172A  43F9 00001764           1186              LEA     .TITSTR,A1            
00001730  103C 000E               1187              MOVE.B  #14,D0
00001734  4E4F                    1188              TRAP    #15
00001736                          1189              
00001736                          1190              ;START
00001736                          1191m             UTLLOCT INTPRSX,INTPRSY
00001736                          1192m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001736                          1193m ; INPUT    - INTPRSX X, INTPRSY Y
00001736                          1194m ; OUTPUT   - NONE
00001736                          1195m ; MODIFIES - D0,D1
00001736                          1196m ; -----------------------------------------------------------------------------
00001740                          1197m             UTLSIZC #INTPRSC,TXSSIZE
00001740                          1198m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001740                          1199m ; INPUT    - #INTPRSC COLOR IN FORMAT $00BBGGRR TXSSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001740                          1200m ; OUTPUT   - NONE
00001740                          1201m ; MODIFIES - D0,D1
00001740                          1202m ; -----------------------------------------------------------------------------
00001752  43F9 00001774           1203              LEA     .PRSSTR,A1
00001758  103C 000E               1204              MOVE.B  #14,D0
0000175C  4E4F                    1205              TRAP    #15
0000175E                          1206              
0000175E  4CDF 0207               1207              MOVEM.L (A7)+,A1/D0-D2
00001762  4E75                    1208              RTS
00001764                          1209  
00001764= 42 72 65 61 6B 69 ...   1210  .TITSTR     DC.B    'Breaking Blocks',0
00001774= 50 55 53 48 20 46 ...   1211  .PRSSTR     DC.B    'PUSH FIRE TO START',0
00001788                          1212              DS.W    0
00001788                          1213  ; -----------------------------------------------------------------------------
00001788                          1214  STAGOVRU
00001788                          1215  ; GAME OVER STATE UPDATE
00001788                          1216  ; INPUT    - NONE
00001788                          1217  ; OUTPUT   - NONE
00001788                          1218  ; MODIFIES - NONE
00001788                          1219  ; -----------------------------------------------------------------------------
00001788  0839 0004 00001A7D      1220              BTST.B  #KBDBITF1,(KBDEDGE)
00001790  6700 0012               1221              BEQ     .END
00001794                          1222m             UTLSNDST
00001794                          1223m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001794                          1224m ; INPUT    - NONE 
00001794                          1225m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001794                          1226m ; MODIFIES - D0,A1
00001794                          1227m ; -----------------------------------------------------------------------------
0000179C  33FC 0000 00002702      1228              MOVE.W  #STAINTR,(STANEXT)
000017A4  4E75                    1229  .END        RTS
000017A6                          1230  
000017A6                          1231  ; -----------------------------------------------------------------------------
000017A6                          1232  STAGOVRP
000017A6                          1233  ; GAME OVER STATE PLOT
000017A6                          1234  ; INPUT    - NONE
000017A6                          1235  ; OUTPUT   - NONE
000017A6                          1236  ; MODIFIES - NONE
000017A6                          1237  ; -----------------------------------------------------------------------------
000017A6                          1238  
000017A6  48E7 E040               1239              MOVEM.L A1/D0-D2,-(A7)
000017AA                          1240              
000017AA                          1241              ;GAME OVER TEXT
000017AA                          1242m             UTLLOCT GOVERX,GOVERY            
000017AA                          1243m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000017AA                          1244m ; INPUT    - GOVERX X, GOVERY Y
000017AA                          1245m ; OUTPUT   - NONE
000017AA                          1246m ; MODIFIES - D0,D1
000017AA                          1247m ; -----------------------------------------------------------------------------
000017B4                          1248m             UTLSIZC #GOVERC,TXBSIZE
000017B4                          1249m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
000017B4                          1250m ; INPUT    - #GOVERC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
000017B4                          1251m ; OUTPUT   - NONE
000017B4                          1252m ; MODIFIES - D0,D1
000017B4                          1253m ; -----------------------------------------------------------------------------
000017C6  43F9 000017D8           1254              LEA     .GOVSTR,A1              ;PONE EL TEXTO
000017CC  103C 000E               1255              MOVE.B  #14,D0
000017D0  4E4F                    1256              TRAP    #15
000017D2                          1257  
000017D2  4CDF 0207               1258              MOVEM.L (A7)+,A1/D0-D2
000017D6  4E75                    1259              RTS
000017D8= 47 41 4D 45 20 4F ...   1260  .GOVSTR     DC.B    'GAME OVER',0
000017E2                          1261              DS.W    0
000017E2                          1262  
000017E2                          1263  
000017E2                          1264  
000017E2                          1265  
000017E2                          1266  
000017E2                          1267  -------------------- end include --------------------
000017E2                          1268              INCLUDE "BALL.X68"              ;LA PELOTA
000017E2                          1269  ; =============================================================================
000017E2                          1270  ; BALL
000017E2                          1271  ; =============================================================================
000017E2                          1272  ;----------------------------------
000017E2                          1273  BINIT
000017E2                          1274  ;INITIALIZE THE BALL
000017E2                          1275  ;----------------------------------
000017E2  33FC 00FB 00002714      1276              MOVE.W  #BINPOSX,BPOSX1
000017EA  33FC 01CE 0000271A      1277              MOVE.W  #BINPOSY,BPOSY2
000017F2  33FC 0105 00002716      1278              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
000017FA  33FC 01C4 00002718      1279              MOVE.W  #BINPOSY-BDIAMET,BPOSY1
00001802  303C FFFB               1280              MOVE.W  #BINSPEED,D0
00001806  4440                    1281              NEG.W   D0
00001808  33C0 0000270E           1282              MOVE.W  D0,BSPEEDX
0000180E  33FC FFFB 00002710      1283              MOVE.W  #BINSPEED,BSPEEDY
00001816  4E75                    1284              RTS
00001818                          1285  ;----------------------------------         
00001818                          1286  BNXTLEV
00001818                          1287  ;INITIALIZE THE BALL TO THE NEXT LEVEL
00001818                          1288  ;----------------------------------
00001818                          1289  ;BALL NEXT LEVEL       (NEXT LEVEL)
00001818  48E7 8000               1290              MOVEM.L D0,-(A7)
0000181C  33FC 00FB 00002714      1291              MOVE.W  #BINPOSX,BPOSX1
00001824  33FC 01CE 00002718      1292              MOVE.W  #BINPOSY,BPOSY1
0000182C  33FC 0105 00002716      1293              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
00001834  33FC 0105 0000271A      1294              MOVE.W  #BINPOSX+BDIAMET,BPOSY2
0000183C  3039 00002710           1295              MOVE.W  BSPEEDY,D0
00001842  6B00 000E               1296              BMI     .NEGY
00001846  5279 00002710           1297              ADD.W   #1,BSPEEDY
0000184C  4EB9 00001858           1298              JSR     .X
00001852                          1299  .NEGY        
00001852  5379 00002710           1300              SUB.W   #1,BSPEEDY
00001858                          1301  .X          
00001858  3039 0000270E           1302              MOVE.W  BSPEEDX,D0
0000185E  6B00 000E               1303              BMI     .NEGX 
00001862  5279 0000270E           1304              ADD.W   #1,BSPEEDX
00001868  4EB9 00001874           1305              JSR     .END
0000186E                          1306  .NEGX       
0000186E  5379 0000270E           1307              SUB.W   #1,BSPEEDX 
00001874                          1308  .END        
00001874  4CDF 0001               1309              MOVEM.L (A7)+,D0
00001878  4E75                    1310              RTS
0000187A                          1311        
0000187A                          1312  ;-----------------------------------------------------------------------------
0000187A                          1313  BUPD
0000187A                          1314  ;UPDATES THE BALL
0000187A                          1315  ;-----------------------------------
0000187A                          1316  ; UPDATES THE BALL MOTION
0000187A                          1317  ; INPUT    - NONE 
0000187A                          1318  ; OUTPUT   - NONE 
0000187A                          1319  ; MODIFIES - NONE
0000187A                          1320  ; -----------------------------------------------------------------------------
0000187A                          1321  
0000187A  48E7 FE80               1322              MOVEM.L D0-D6/A0,-(A7)
0000187E                          1323              ;COMPRUEBA COLISIONES CON LAS 4 PAREDES
0000187E                          1324              ;Y SI PASA LA DE ABAJO LE ELIMINA UNA VIDA, O ENVIA LA PANTALLA GAME OVER
0000187E  3039 00002714           1325              MOVE.W  BPOSX1,D0
00001884  3239 00002718           1326              MOVE.W  BPOSY1,D1
0000188A  3439 00002716           1327              MOVE.W  BPOSX2,D2
00001890  3639 0000271A           1328              MOVE.W  BPOSY2,D3
00001896  4EB8 120C               1329              JSR     UTLCHCOLW               ;COMPRUEBA COLISIÓN CON PAREDES               
0000189A  4EB8 131E               1330              JSR     UTLCHCOLP               ;COMPRUEBA COLISIÓN CON PLATAFORMA
0000189E  4284                    1331              CLR.L  D4
000018A0  4EB8 13B6               1332              JSR     UTLCOLBL
000018A4  B87C 0001               1333              CMP     #1,D4
000018A8  6700 0042               1334              BEQ     .END
000018AC  3039 00002716           1335              MOVE.W  BPOSX2,D0
000018B2  3239 00002718           1336              MOVE.W  BPOSY1,D1
000018B8  4EB8 13B6               1337              JSR     UTLCOLBL
000018BC  B87C 0001               1338              CMP     #1,D4
000018C0  6700 002A               1339              BEQ     .END
000018C4  3039 00002714           1340              MOVE.W BPOSX1,D0
000018CA  3239 0000271A           1341              MOVE.W BPOSY2,D1
000018D0  4EB8 13B6               1342              JSR     UTLCOLBL
000018D4  B87C 0001               1343              CMP     #1,D4
000018D8  6700 0012               1344              BEQ     .END
000018DC  3039 00002716           1345              MOVE.W BPOSX2,D0
000018E2  3239 0000271A           1346              MOVE.W BPOSY2,D1
000018E8  4EB8 13B6               1347              JSR     UTLCOLBL   
000018EC                          1348  
000018EC                          1349  .END            
000018EC                          1350  
000018EC  3039 0000270E           1351              MOVE.W  BSPEEDX,D0              ;POSICIÓN = POSICIÓN + VELOCIDAD
000018F2  D179 00002714           1352              ADD.W   D0,BPOSX1
000018F8  D179 00002716           1353              ADD.W   D0,BPOSX2
000018FE                          1354              
000018FE  3239 00002710           1355              MOVE.W  BSPEEDY,D1
00001904  D379 00002718           1356              ADD.W   D1,BPOSY1
0000190A  D379 0000271A           1357              ADD.W   D1,BPOSY2
00001910  4CDF 017F               1358              MOVEM.L (A7)+,D0-D6/A0
00001914                          1359              
00001914  4E75                    1360              RTS
00001916                          1361  
00001916                          1362  BPLOT       
00001916  48E7 F800               1363              MOVEM.L  D0-D4,-(A7)
0000191A                          1364              ;CONTOUR COLOR
0000191A  223C 00FFFFFF           1365              MOVE.L  #BINCOLOR,D1  
00001920  103C 0050               1366              MOVE.B  #80,D0
00001924  4E4F                    1367              TRAP    #15
00001926                          1368      
00001926                          1369               ;FILL COLOR
00001926  223C 00FFFFFF           1370              MOVE.L   #BINCOLOR,D1  
0000192C  103C 0051               1371              MOVE.B  #81,D0
00001930  4E4F                    1372              TRAP    #15
00001932                          1373   
00001932                          1374              ;CIRCLE
00001932                          1375  
00001932  3239 00002714           1376              MOVE.W  BPOSX1,D1
00001938  3439 00002718           1377              MOVE.W  BPOSY1,D2
0000193E  3639 00002716           1378              MOVE.W  BPOSX2,D3
00001944  3839 0000271A           1379              MOVE.W  BPOSY2,D4
0000194A  103C 0058               1380              MOVE.B  #88,D0
0000194E  4E4F                    1381              TRAP    #15
00001950                          1382      
00001950  4CDF 001F               1383              MOVEM.L  (A7)+,D0-D4
00001954                          1384  
00001954  4E75                    1385              RTS
00001956                          1386  
00001956                          1387  
00001956                          1388  
00001956                          1389  
00001956                          1390  
00001956                          1391  
00001956                          1392  
00001956                          1393  
00001956                          1394  
00001956                          1395  
00001956                          1396  
00001956                          1397  
00001956                          1398  
00001956                          1399  
00001956                          1400  
00001956                          1401  
00001956                          1402  
00001956                          1403  
00001956                          1404  
00001956                          1405  
00001956                          1406  
00001956                          1407  
00001956                          1408  
00001956                          1409  
00001956                          1410  
00001956                          1411  
00001956                          1412  -------------------- end include --------------------
00001956                          1413              INCLUDE "SCTRL.X68"             ;CONTROL SCREEN
00001956                          1414  ;--------------------------------------------------------------------------
00001956                          1415  ;SCREEN CONTROL
00001956                          1416  ;--------------------------------------------------------------------------
00001956                          1417  
00001956                          1418  
00001956                          1419  SCTRLPLOT
00001956  48E7 FC40               1420              MOVEM.L D0-D5/A1,-(A7)       
0000195A                          1421              
0000195A                          1422              ;DIBUJA LA BARRA DE SEPARACIÓN
0000195A  223C 00FFFFFF           1423              MOVE.L  #$00FFFFFF,D1  ;COLOR
00001960  103C 0050               1424              MOVE.B  #80,D0
00001964  4E4F                    1425              TRAP    #15
00001966                          1426              
00001966  C2BC 00FFFFFF           1427              AND.L   #$00FFFFFF,D1  ;COLOR
0000196C  103C 0051               1428              MOVE.B  #81,D0
00001970  4E4F                    1429              TRAP    #15
00001972                          1430              
00001972  103C 0057               1431              MOVE.B  #87,D0
00001976  323C 0201               1432              MOVE.W  #SCRCTRL,D1
0000197A  363C 0206               1433              MOVE.W  #SCRCTRL+SCRLWIDTH,D3
0000197E  4282                    1434              CLR.L   D2
00001980  383C 01E0               1435              MOVE.W  #SCRHEIGH,D4
00001984  4E4F                    1436              TRAP    #15
00001986                          1437              
00001986                          1438              ;SCORE
00001986                          1439              
00001986                          1440  
00001986                          1441m             UTLLOCT PSCORETX,PSCORETY            
00001986                          1442m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001986                          1443m ; INPUT    - PSCORETX X, PSCORETY Y
00001986                          1444m ; OUTPUT   - NONE
00001986                          1445m ; MODIFIES - D0,D1
00001986                          1446m ; -----------------------------------------------------------------------------
00001990                          1447m             UTLSIZC #PSCORECOL,TXMSIZE           ;PENCOLOR Y TAMAÑO
00001990                          1448m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001990                          1449m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR TXMSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001990                          1450m ; OUTPUT   - NONE
00001990                          1451m ; MODIFIES - D0,D1
00001990                          1452m ; -----------------------------------------------------------------------------
000019A2                          1453m             UTLSFIL #$00000000
000019A2                          1454m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000019A2                          1455m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
000019A2                          1456m ; OUTPUT   - NONE
000019A2                          1457m ; MODIFIES - D0,D1
000019A2                          1458m ; -----------------------------------------------------------------------------
000019AA  43F9 000019C2           1459              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
000019B0  3239 0000270A           1460              MOVE.W  PSCORE,D1
000019B6  103C 0011               1461              MOVE.B  #17,D0
000019BA  4E4F                    1462              TRAP    #15
000019BC                          1463              
000019BC  4CDF 023F               1464              MOVEM.L (A7)+,D0-D5/A1
000019C0  4E75                    1465              RTS   
000019C2                          1466  
000019C2                          1467  
000019C2= 53 43 4F 52 45 3A ...   1468  .TXTSCORE   DC.B    'SCORE: ',0
000019CA                          1469              DS.W    0
000019CA                          1470  
000019CA                          1471  
000019CA                          1472  -------------------- end include --------------------
000019CA                          1473              INCLUDE "BLOCKS.X68"           ;BLOQUES
000019CA                          1474  ;-----------------------------------------------------------
000019CA                          1475  ;           BLOCKS
000019CA                          1476  ;-----------------------------------------------------------
000019CA                          1477    
000019CA                          1478  BLINIT
000019CA  48E7 8080               1479              MOVEM.L D0/A0,-(A7)
000019CE  41F9 0000271E           1480              LEA.L   BLMATRIX,A0
000019D4  303C 000B               1481              MOVE.W  #BLROW-1,D0             ;7
000019D8                          1482  .LOOP       
000019D8  10FC 00FF               1483              MOVE.B  #%11111111,(A0)+
000019DC  51C8 FFFA               1484              DBRA    D0,.LOOP
000019E0  33FC 0060 0000271C      1485              MOVE.W  #BLROW*BLCOL,BLCOUNTER
000019E8                          1486              
000019E8  4CDF 0101               1487              MOVEM.L (A7)+,D0/A0
000019EC  4E75                    1488              RTS
000019EE                          1489              
000019EE                          1490              
000019EE                          1491              
000019EE                          1492  BLUPD       
000019EE                          1493              
000019EE                          1494  
000019EE  4E75                    1495               RTS     
000019F0                          1496  
000019F0                          1497              
000019F0                          1498  BLPLOT
000019F0  48E7 FFC0               1499              MOVEM.L D0-D7/A0-A1,-(A7)
000019F4  103C 0050               1500              MOVE.B  #80,D0                  ;SET PEN COLOR
000019F8  7200                    1501              MOVE.L  #0,D1
000019FA  4E4F                    1502              TRAP    #15
000019FC                          1503              
000019FC  4242                    1504              CLR.W   D2                      ;UPPER Y
000019FE  383C 0010               1505              MOVE.W  #BLHEIGHT,D4            ;DOWN Y
00001A02  41F8 11DC               1506              LEA     COLORS,A0
00001A06                          1507              
00001A06  3A3C 000B               1508              MOVE.W  #BLROW-1,D5    ;DBRA
00001A0A  227C 00000000           1509              MOVE.L  #0,A1                      ;PARA SABER CUAL PONER D6= FILA
00001A10                          1510              
00001A10                          1511  .LOOP2                                      ;BUCLE DE FILAS
00001A10                          1512   
00001A10  103C 0051               1513              MOVE.B  #81,D0                  ;SET COLOR
00001A14  2218                    1514              MOVE.L  (A0)+,D1
00001A16  4E4F                    1515              TRAP    #15
00001A18                          1516                                        ;BUCLE FILAS
00001A18                          1517              
00001A18  363C 0040               1518              MOVE.W  #BLWIDTH,D3             ;RIGHT X
00001A1C  4241                    1519              CLR.W   D1                      ;LEFT X
00001A1E                          1520              
00001A1E  3F05                    1521              MOVE.W  D5,-(A7)                ;GUARDO EL VALOR DEL DECREMENTO DE LOOP2
00001A20  3A3C 0007               1522              MOVE.W  #BLCOL-1,D5
00001A24  1C29 271E               1523              MOVE.B  BLMATRIX(A1),D6
00001A28                          1524  .LOOP1                                      ; BUCLE COLUMNAS
00001A28                          1525             
00001A28  E31E                    1526              ROL.B   #1,D6
00001A2A  6400 0008               1527              BCC     .SALTO                  ; SALTA SI CARRY = 0
00001A2E                          1528              
00001A2E  103C 0057               1529              MOVE.B  #87,D0                  ; DIBUJAMOS EL CUADRADO
00001A32  4E4F                    1530              TRAP    #15
00001A34                          1531  .SALTO
00001A34  3203                    1532              MOVE.W  D3,D1
00001A36  0643 0040               1533              ADD.W   #BLWIDTH, D3
00001A3A  5247                    1534              ADDI.W  #1,D7
00001A3C  51CD FFEA               1535              DBRA    D5,.LOOP1 
00001A40  3A1F                    1536              MOVE.W  (A7)+,D5              
00001A42                          1537  
00001A42  5249                    1538              ADDA.W  #1,A1
00001A44  3404                    1539              MOVE.W  D4,D2
00001A46  0644 0010               1540              ADD.W   #BLHEIGHT,D4
00001A4A  51CD FFC4               1541              DBRA    D5,.LOOP2
00001A4E  4CDF 03FF               1542              MOVEM.L (A7)+,D0-D7/A0-A1
00001A52  4E75                    1543              RTS
00001A54                          1544  
00001A54                          1545  -------------------- end include --------------------
00001A54                          1546  
00001A54                          1547  ; --- INITIALIZE --------------------------------------------------------------
00001A54                          1548              
00001A54  4EB8 1000               1549  START       JSR     SYSINIT
00001A58                          1550              ; TO DO: CALL GAME INITIALIZATION CODE HERE
00001A58  4EB8 15C2               1551              JSR     STAINIT                 ;INICIA LAS PANTALLAS            
00001A5C                          1552              
00001A5C                          1553  ; --- UPDATE ------------------------------------------------------------------
00001A5C                          1554  
00001A5C  4E40                    1555  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
00001A5E                          1556                                              ; UPDATE DEPENDING ON THE STATE
00001A5E                          1557              ; TO DO: CALL GAME UPDATE CODE HERE
00001A5E  4EB8 15D4               1558              JSR     STAUPD
00001A62                          1559  
00001A62                          1560  ; --- WAIT SYNCH --------------------------------------------------------------
00001A62                          1561  
00001A62  4A39 00001A7E           1562  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001A68  67F8                    1563              BEQ     .WINT
00001A6A                          1564              
00001A6A  4239 00001A7E           1565              CLR.B   (SCRINTCT)
00001A70                          1566  
00001A70                          1567  ; --- PLOT --------------------------------------------------------------------
00001A70                          1568              
00001A70                          1569              ; TO DO: CALL GAME PLOT CODE HERE
00001A70  4EB8 162E               1570              JSR     STAPLOT
00001A74                          1571  
00001A74  4E41                    1572              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001A76  60E4                    1573              BRA     .LOOP
00001A78  FFFF FFFF               1574              SIMHALT
00001A7C                          1575  
00001A7C                          1576  ; --- VARIABLES ---------------------------------------------------------------
00001A7C                          1577  
00001A7C                          1578              INCLUDE "SYSVAR.X68"
00001A7C                          1579  ; =============================================================================
00001A7C                          1580  ; SYSTEM VARS
00001A7C                          1581  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
00001A7C                          1582  ; THEY MUST NOT BE IN PROTECTED MEMORY.
00001A7C                          1583  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
00001A7C                          1584  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
00001A7C                          1585  ; THIS IS GOOD ENOUGH.
00001A7C                          1586  ; =============================================================================
00001A7C                          1587  
00001A7C                          1588  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001A7C                          1589  
00001A7C                          1590  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001A7D                          1591  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001A7E                          1592  
00001A7E                          1593              DS.W    0
00001A7E                          1594  
00001A7E                          1595  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001A7E                          1596  
00001A7E                          1597  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001A7F                          1598  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001A80                          1599              DS.W    0
00001A80                          1600  
00001A80                          1601  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001A80                          1602  
00001A80                          1603              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001A80                          1604  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002700                          1605              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002700                          1606  
00002700                          1607  
00002700                          1608  
00002700                          1609  -------------------- end include --------------------
00002700                          1610              INCLUDE "VAR.X68"
00002700                          1611  ; =============================================================================
00002700                          1612  ; GAME VARS
00002700                          1613  ; =============================================================================
00002700                          1614  
00002700                          1615  ; TO DO: DECLARE GAME VARIABLES HERE.
00002700                          1616  
00002700                          1617  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
00002700                          1618  
00002700                          1619  STACUR      DS.W    1                       ; CURRENT GAME STATE
00002702                          1620  STANEXT     DS.W    1                       ; NEXT GAME STATE
00002704                          1621  ;----------------------------------------------------------------------------
00002704                          1622  
00002704                          1623  ; PLAYER --------------------------------------------------------------------
00002704                          1624  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
00002706                          1625  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
00002708                          1626  PLIVES      DS.W    1                       ;LIVES LEFT
0000270A                          1627  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
0000270C                          1628  PSPEED      DS.W    1
0000270E                          1629  ;----------------------------------------------------------------------------
0000270E                          1630  
0000270E                          1631  ; BALL ----------------------------------------------------------------------
0000270E                          1632  ;BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
0000270E                          1633  ;BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
0000270E                          1634  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
00002710                          1635  BSPEEDY     DS.W    1
00002712                          1636  BCOLOR      DS.W    1
00002714                          1637  BPOSX1      DS.W    1
00002716                          1638  BPOSX2      DS.W    1
00002718                          1639  BPOSY1      DS.W    1
0000271A                          1640  BPOSY2      DS.W    1
0000271C                          1641  ; BLOCKS --------------------------------------------------------------------
0000271C                          1642  BLCOUNTER   DS.W    1
0000271E                          1643  BLMATRIX    DS.B    12  ;12*8
0000272A                          1644              DS.W    0
0000272A                          1645              
0000272A                          1646  
0000272A                          1647  
0000272A                          1648  
0000272A                          1649  
0000272A                          1650  
0000272A                          1651  
0000272A                          1652  -------------------- end include --------------------
0000272A                          1653              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              2712
BDIAMET             A
BINCOLOR            FFFFFF
BINIT               17E2
BINPOSX             FB
BINPOSY             1CE
BINSPEED            FFFFFFFB
BLCOL               8
BLCOUNTER           271C
BLHEIGHT            10
BLINIT              19CA
BLINIT:LOOP         19D8
BLMATRIX            271E
BLPLOT              19F0
BLPLOT:LOOP1        1A28
BLPLOT:LOOP2        1A10
BLPLOT:SALTO        1A34
BLROW               C
BLUE                F7E78E
BLUPD               19EE
BLWIDTH             40
BNXTLEV             1818
BNXTLEV:END         1874
BNXTLEV:NEGX        186E
BNXTLEV:NEGY        1852
BNXTLEV:X           1858
BPLOT               1916
BPOSX1              2714
BPOSX2              2716
BPOSY1              2718
BPOSY2              271A
BSPEEDX             270E
BSPEEDY             2710
BUPD                187A
BUPD:END            18EC
COLORS              11DC
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1A80
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
GOVERC              FFFF
GOVERX              12
GOVERY              7
GREEN               95FF8C
INTPRSC             FFFFFF
INTPRSX             20
INTPRSY             52
INTTITC             DCAA7C
INTTITX             E
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1A7D
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1A7C
LIVECOLOR           FF
LIVEHEIGHT          10
LIVEPOSX            215
LIVEPOSY            1E
LIVEWIDTH           40
ORANGE              4E8CF3
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX1            E0
PINPOSX2            E4
PINPOSX3            E8
PINWIDTH1           40
PINWIDTH2           38
PINWIDTH3           30
PLIVES              2708
PLRINIT             1488
PLRREV              149A
PLRUPD              14AC
PLRUPD:END          14F2
PLRUPD:RIGHTKEY     14D0
PMOVE               8
PPLOT               14F8
PPLOT:END           15B4
PPLOT:LOOP          1572
PPLOT:TXTSCORE      15BA
PPOSX               2704
PPOSY               1D0
PSCORE              270A
PSCORECOL           FFFFFF
PSCORETX            32
PSCORETY            4
PSPEED              270C
PURPLE              FFACAC
PWIDTH              2706
SCRCTRL             201
SCRCYCCT            1A7F
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1A7E
SCRIRQ              1
SCRISR              107E
SCRLWIDTH           5
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            2E4
SCTRLPLOT           1956
SCTRLPLOT:TXTSCORE  19C2
STACUR              2700
STAEMPTY            165A
STAGOVR             3
STAGOVRP            17A6
STAGOVRP:GOVSTR     17D8
STAGOVRU            1788
STAGOVRU:END        17A4
STAINIT             15C2
STAINTR             0
STAINTRI            16A8
STAINTRI:SOUND      16C4
STAINTRP            170A
STAINTRP:PRSSTR     1774
STAINTRP:TITSTR     1764
STAINTRU            16D8
STAINTRU:END        1708
STANEXT             2702
STANONE             FFFFFFFF
STAPLAY             2
STAPLAYI            165C
STAPLAYP            1690
STAPLAYU            167E
STAPLOT             162E
STAPLOT:PLTTBL      164A
START               1A54
START:LOOP          1A5C
START:WINT          1A62
STASPACE            1
STASPACEU           1668
STASPACEU:END       167C
STAUPD              15D4
STAUPD:DOUPD        15FA
STAUPD:INITBL       1612
STAUPD:UPDTBL       161E
SYSINIT             1000
TXBSIZE             12
TXMSIZE             10
TXSSIZE             A
UTLCHCOL            1454
UTLCHCOL:END        1482
UTLCHCOL:NOCOL      1480
UTLCHCOLP           131E
UTLCHCOLP:END       13B0
UTLCHCOLP:LADOS     13AA
UTLCHCOLP:PLRXMIDDLE  1364
UTLCHCOLP:PLRXRIGHT  1392
UTLCHCOLW           120C
UTLCHCOLW:COLLISIONS  12EE
UTLCHCOLW:DOWN      1278
UTLCHCOLW:END       12E8
UTLCHCOLW:LEFT      1236
UTLCHCOLW:MINLIVE   1284
UTLCHCOLW:RESET     12E0
UTLCHCOLW:RIGHT     1256
UTLCHCOLW:SOUNDG    12F6
UTLCHCOLW:SOUNDL    130A
UTLCOLBL            13B6
UTLCOLBL:COLBL      1418
UTLCOLBL:END        1442
UTLCOLBL:NEGY       1412
UTLCOLBL:RIGHT      13F8
UTLCOLBL:SOUND      1444
UTLCOLBL:TEST       13D8
UTLLOCT             3CF
UTLSFIL             2A5
UTLSIZC             12A
UTLSNDS             4F7
UTLSNDST            6F3
UTLSPEN             0
YELLOW              38EEF8
