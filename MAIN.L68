000016A4 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 16/12/2019 15:11:26

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION : 
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8              
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =000002E4                 81  SCRWIDTH    EQU     740                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  
00001000                            93  -------------------- end include --------------------
00001000                            94              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            95  ; =============================================================================
00001000                            96  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            97  ; =============================================================================
00001000                            98  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101  ; INITIALIZES THE SYSTEM
00001000                           102  ; INPUT    - NONE
00001000                           103  ; OUTPUT   - NONE
00001000                           104  ; MODIFIES - NONE
00001000                           105  ; -----------------------------------------------------------------------------
00001000  205F                     106              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            107              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            108              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            109              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                110              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     111              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     112              RTS
0000101C                           113  
0000101C                           114  ; =============================================================================
0000101C                           115  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           116  ; =============================================================================
0000101C                           117  
0000101C                           118  ; -----------------------------------------------------------------------------
0000101C                           119  SCRINIT
0000101C                           120  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           121  ; INPUT    - NONE
0000101C                           122  ; OUTPUT   - NONE
0000101C                           123  ; MODIFIES - D0,D1,D2,D3
0000101C                           124  ; -----------------------------------------------------------------------------
0000101C                           125              ; TO DO:
0000101C                           126              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                127              ORI.W   #$0700,SR
00001020                           128              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           129              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       130              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           131              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                132              MOVE.B  #33,D0
0000102C  223C 02E401E0            133              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     134              TRAP    #15
00001034                           135              ; - SET WINDOWED MODE
00001034  7201                     136              MOVE.L  #1,D1
00001036  4E4F                     137              TRAP    #15
00001038                           138              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                139              MOVE.B  #11,D0
0000103C  323C FF00                140              MOVE.W  #$FF00,D1
00001040  4E4F                     141              TRAP    #15
00001042                           142              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                143              MOVE.B  #92,D0
00001046  123C 0011                144              MOVE.B  #17,D1
0000104A  4E4F                     145              TRAP    #15
0000104C                           146              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     147              MOVE.L  #11,D0
0000104E  323C FF00                148              MOVE.W  #$FF00,D1
00001052  4E4F                     149              TRAP    #15
00001054                           150              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           151              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       152              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           153              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           154              ;   TASK 32)
0000105C  103C 0020                155              MOVE.B  #32,D0
00001060  123C 0006                156              MOVE.B  #6,D1
00001064                           157         
00001064  143C 0081                158              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     159              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     160              TRAP    #15
0000106C                           161              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 000016CE            162              CLR.B   SCRINTCT
00001072  4239 000016CF            163              CLR.B   SCRCYCCT
00001078                           164              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                165              ANDI.W  #$F8FF,SR
0000107C  4E75                     166              RTS
0000107E                           167  
0000107E                           168  ; -----------------------------------------------------------------------------
0000107E                           169  SCRISR
0000107E                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           171  ; INPUT    - NONE
0000107E                           172  ; OUTPUT   - NONE
0000107E                           173  ; MODIFIES - NONE
0000107E                           174  ; -----------------------------------------------------------------------------
0000107E  5239 000016CE            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 000016CF            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     177              RTE
0000108C                           178  
0000108C                           179  ; -----------------------------------------------------------------------------
0000108C                           180  SCRUPD
0000108C                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           182  ; BUFFER FOR THE NEXT ONE.
0000108C                           183  ; INPUT    - NONE
0000108C                           184  ; OUTPUT   - NONE
0000108C                           185  ; MODIFIES - NONE
0000108C                           186  ; -----------------------------------------------------------------------------
0000108C                           187              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                188              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                189              MOVE.B  #94,D0
00001094  4E4F                     190              TRAP    #15
00001096  103C 000B                191              MOVE.B  #11,D0
0000109A  323C FF00                192              MOVE.W  #$FF00,D1
0000109E  4E4F                     193              TRAP    #15
000010A0  4CDF 0003                194              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     195              RTE
000010A6                           196  
000010A6                           197  ; =============================================================================
000010A6                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           199  ; =============================================================================
000010A6                           200  
000010A6                           201  ; -----------------------------------------------------------------------------
000010A6                           202  KBDINIT
000010A6                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           204  ; INPUT    - NONE
000010A6                           205  ; OUTPUT   - NONE
000010A6                           206  ; MODIFIES - NONE
000010A6                           207  ; -----------------------------------------------------------------------------
000010A6  4239 000016CC            208              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 000016CD            209              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     211              RTS
000010BC                           212  
000010BC                           213  ; -----------------------------------------------------------------------------
000010BC                           214  KBDREAD
000010BC                           215  ; TRAP SERVICE ROUTINE.
000010BC                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           219  ; INPUT    - NONE
000010BC                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           221  ; MODIFIES - NONE
000010BC                           222  ; -----------------------------------------------------------------------------
000010BC                           223              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                224              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                225              MOVE.B  #19,D0
000010C4                           226              
000010C4  223C 50104D20            227              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     228              TRAP    #15
000010CC                           229          
000010CC  4202                     230              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                231              MOVE.W  #3,D4
000010D2                           232              
000010D2                           233  .LOOP1      
000010D2                           234       
000010D2  E189                     235              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     236              MOVE.W  SR,D3                   
000010D6  0243 0001                237              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     238              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     239              OR.B    D3,D2                   
000010DE  51CC FFF2                240              DBRA    D4,.LOOP1
000010E2                           241          
000010E2                           242              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           243              
000010E2  223C 28272625            244              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     245              TRAP    #15
000010EA                           246              
000010EA  383C 0003                247              MOVE.W  #3,D4
000010EE                           248  .LOOP2      
000010EE  E189                     249              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     250              MOVE.W  SR,D3
000010F2  0243 0001                251              ANDI.W  #$0001,D3    
000010F6  E30A                     252              LSL.B   #1,D2
000010F8  8403                     253              OR.B    D3,D2
000010FA                           254              
000010FA  51CC FFF2                255              DBRA    D4,.LOOP2
000010FE                           256              
000010FE                           257              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           258              
000010FE                           259              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 000016CC            260              MOVE.B  KBDVAL,D3
00001104  4603                     261              NOT.B   D3
00001106  13C2 000016CC            262              MOVE.B  D2,KBDVAL
0000110C  C602                     263              AND.B   D2,D3
0000110E  13C3 000016CD            264              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                265              MOVEM.L (A7)+,D0-D4
00001118  4E73                     266              RTE
0000111A                           267  
0000111A                           268  ; =============================================================================
0000111A                           269  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           270  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           271  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           272  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           273  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           274  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           275  ; =============================================================================
0000111A                           276  
0000111A                           277  ; -----------------------------------------------------------------------------
0000111A                           278  DMMINIT
0000111A                           279  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           280  ; INPUT    - NONE
0000111A                           281  ; OUTPUT   - NONE
0000111A                           282  ; MODIFIES - NONE
0000111A                           283  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                284              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001700            285              LEA     DMMDATA,A0
00001124  303C 0031                286              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                287  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            288              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                289              DBRA.W  D0,.LOOP
00001136  4CDF 0101                290              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     291              RTS
0000113C                           292  
0000113C                           293  ; -----------------------------------------------------------------------------
0000113C                           294  DMMFIRST
0000113C                           295  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           296  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           297  ; INPUT    - NONE
0000113C                           298  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           299  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           300  ; -----------------------------------------------------------------------------
0000113C  41F9 00001700            301              LEA     DMMDATA,A0
00001142  4A58                     302  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                303              BNE     DMMFRFND
00001148  D1FC 0000003E            304              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 0000237F            305  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     306              BLT     DMMFRLOP
00001156  207C 00000000            307              MOVE.L  #0,A0
0000115C  4E75                     308  DMMFRFND    RTS
0000115E                           309  
0000115E                           310  ; -----------------------------------------------------------------------------
0000115E                           311  DMMNEXT
0000115E                           312  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           313  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           314  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           315  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           316  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           317  ; -----------------------------------------------------------------------------
0000115E  2F00                     318              MOVE.L  D0,-(A7)
00001160  2008                     319              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            320              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            321              ADD.L   #DMMBSIZE,D0
0000116E  2040                     322              MOVE.L  D0,A0
00001170  201F                     323              MOVE.L  (A7)+,D0
00001172  60DA                     324              BRA     DMMFRCOM
00001174                           325  
00001174                           326  ; -----------------------------------------------------------------------------
00001174                           327  DMMFRSTO
00001174                           328  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           329  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           330  ; INPUT    - D0.W : ID TO SEARCH
00001174                           331  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           332  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           333  ; -----------------------------------------------------------------------------
00001174  41F9 00001700            334              LEA     DMMDATA,A0
0000117A  B058                     335  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                336              BEQ     DMMFFND
00001180  D1FC 0000003E            337              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 0000237F            338  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     339              BLT     DMMFLOOP
0000118E  207C 00000000            340              MOVE.L  #0,A0
00001194  4E75                     341  DMMFFND     RTS
00001196                           342  
00001196                           343  ; -----------------------------------------------------------------------------
00001196                           344  DMMNEXTO
00001196                           345  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           346  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           347  ; INPUT    - D0.W : ID TO SEARCH
00001196                           348  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           351  ; -----------------------------------------------------------------------------
00001196  2F00                     352              MOVE.L  D0,-(A7)
00001198  2008                     353              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011A6  2040                     356              MOVE.L  D0,A0
000011A8  201F                     357              MOVE.L  (A7)+,D0
000011AA  60DA                     358              BRA     DMMFCOM
000011AC                           359  
000011AC                           360  ; -----------------------------------------------------------------------------
000011AC                           361  DMMALLOC
000011AC                           362  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           363  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           364  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           367  ; -----------------------------------------------------------------------------
000011AC  3F00                     368              MOVE.W  D0,-(A7)
000011AE  4240                     369              CLR.W   D0
000011B0  4EB8 1174                370              JSR     DMMFRSTO
000011B4  301F                     371              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            372              CMP.L   #0,A0
000011BC  6700 0006                373              BEQ     .END
000011C0  3140 FFFE                374              MOVE.W  D0,-2(A0)
000011C4  4E75                     375  .END        RTS
000011C6                           376  
000011C6                           377  ; -----------------------------------------------------------------------------
000011C6                           378  DMMFREE
000011C6                           379  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           380  ; SYSTEM (0)
000011C6                           381  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           382  ; OUTPUT   - NONE
000011C6                           383  ; MODIFIES - NONE
000011C6                           384  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                385              MOVEM.L D0/A0,-(A7)
000011CA  2008                     386              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            387              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     388              MOVE.L  D0,A0
000011D4  4250                     389              CLR.W   (A0)
000011D6  4CDF 0101                390              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     391              RTS
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  
000011DC                           407  
000011DC                           408  
000011DC                           409  -------------------- end include --------------------
000011DC                           410              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           411  ; =============================================================================
000011DC                           412  ; CONSTANTS
000011DC                           413  ; =============================================================================
000011DC                           414  
000011DC                           415  ; --- PLAYER RELATED CONSTANTS ------------------------------------------------
000011DC                           416  
000011DC                           417  
000011DC                           418  
000011DC                           419  
000011DC                           420  
000011DC                           421  ;PLRINIEN    EQU     500                     ; PLAYER INITIAL ENERGY (<SCRWIDTH)
000011DC                           422  ;PLRSPEED    EQU     7                       ; PLAYER SPEED (PIXELS PER INT)
000011DC                           423  
000011DC                           424  ;PLRDMGCL    EQU     $00FFFFFF               ; PLAYER DAMAGED COLOR
000011DC                           425  ;PLRTXTCL    EQU     $00FFFFFF               ; FONT COLOR
000011DC                           426  ;PLRTXTX     EQU     65                       ; SCORE X COORDINATE
000011DC                           427  ;PLRTXTY     EQU     10                       ; SCORE Y COORDINATE
000011DC                           428  ;PLRLIFEH    EQU     20                      ; HEIGHT OF LIFE BAR
000011DC                           429  ;PLRLIFEY    EQU     SCRHEIGH-PLRLIFEH*2     ; LIFE BAR Y POS
000011DC                           430  ;PLRLIFEC    EQU     $000000FF               ; LIFE BAR COLOR
000011DC                           431  ;PLRUMDMG    EQU     %00000001               ; UPDATE DAMAGE MASK
000011DC                           432  ;PLRPMDMG    EQU     %00000010               ; PLOT DAMAGE MASK
000011DC                           433  ;PLRUBDMG    EQU     0                       ; UPDATE DAMAGE BIT
000011DC                           434  ;PLRPBDMG    EQU     1                       ; PLOT DAMAGE BIT
000011DC                           435  
000011DC                           436  
000011DC                           437  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           438  
000011DC  =0000000E                439  INTTITX     EQU     14                      ; TITLE X COORDINATE
000011DC  =00000007                440  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                441  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000020                442  INTPRSX     EQU     32                      ; PRESS FIRE X COORDINATE
000011DC  =00000052                443  INTPRSY     EQU     82                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                444  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC                           445  
000011DC                           446  
000011DC                           447  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                448  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                449  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                450  STASPACE    EQU     1                       ; ESPERA EL ESPACIO PARA DISPARAR LA BOLA 
000011DC  =00000002                451  STAPLAY     EQU     2                       ; NORMAL GAME STATE
000011DC  =00000003                452  STAGOVR     EQU     3                       ; GAME OVER STATE
000011DC                           453  ;----------------------------------------------------------------------------
000011DC                           454  
000011DC                           455  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           456  
000011DC  =00000010                457  GOVERX      EQU     16                      ; GAME OVER X COORDINATE
000011DC  =00000007                458  GOVERY      EQU     7                       ; GAME OVER Y COORDINATE
000011DC  =0000FFFF                459  GOVERC      EQU     $0000FFFF               ; GAME OVER COLOR
000011DC                           460  
000011DC                           461  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =00000200                462  SCRCTRL     EQU     512   ;
000011DC                           463  ;----------------------------------------------------------------------------
000011DC                           464  
000011DC                           465  
000011DC                           466  ; PLAYER --------------------------------------------------------------------
000011DC                           467  
000011DC  =00000040                468  PINWIDTH    EQU     64                      ; PLAYER INITIAL WIDTH (PIXELS)
000011DC  =0000000C                469  PHEIGHT     EQU     12                      ; PLAYER HEIGHT (PIXELS)
000011DC  =00ECD59D                470  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011DC  =00000003                471  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011DC  =00000008                472  PMOVE       EQU     8                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011DC  =000001D0                473  PPOSY       EQU     SCRHEIGH-PHEIGHT-4      ;POSICION DE LA PLATAFORMA Y
000011DC  =000000E0                474  PINPOSX     EQU     SCRCTRL/2-PINWIDTH/2
000011DC                           475  ; ---------------------------------------------------------------------------
000011DC                           476  
000011DC                           477  ; BALL ----------------------------------------------------------------------
000011DC  =00000008                478  BHEIGHT     EQU     8                       ;ALTURA DE LA BOLA
000011DC  =00000008                479  BWIDTH      EQU     8                       ;ANCHURA DE LA BOLA
000011DC  =000000F8                480  BINPOSX     EQU     PINPOSX+PINWIDTH/2-BWIDTH                      ;POSICION DE LA PELOTA X INICIAL
000011DC  =000001C8                481  BINPOSY     EQU     PPOSY-BHEIGHT              ;POSICION DE LA PELOTA Y INICIAL
000011DC  =00000004                482  BINSPEED    EQU     4                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011DC  =00FFFFFF                483  BINCOLOR    EQU     $00FFFFFF
000011DC                           484  
000011DC                           485  ; ---------------------------------------------------------------------------
000011DC                           486  
000011DC                           487  
000011DC                           488  ;BLOCKS-------------------------------------------------------------------------
000011DC  =00000040                489  BLWIDTH     EQU     64
000011DC  =00000010                490  BLHEIGHT     EQU     16
000011DC= 00F7E78E 004E8CF3 ...    491  COLORS      DC.L    BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE
0000120C  =0000000C                492  BLROW       EQU     12
0000120C  =00000008                493  BLCOL       EQU     8
0000120C                           494  
0000120C                           495  
0000120C                           496  ;-------------------------------------------------------------------------------
0000120C                           497  
0000120C                           498  ;COLORS-------------------------------------------------------------
0000120C  =004E8CF3                499  ORANGE      EQU     $004E8CF3
0000120C  =00F7E78E                500  BLUE        EQU     $00F7E78E
0000120C  =00FFACAC                501  PURPLE      EQU     $00FFACAC
0000120C  =0038EEF8                502  YELLOW      EQU     $0038EEF8
0000120C  =0095FF8C                503  GREEN       EQU     $0095FF8C
0000120C                           504  ;-------------------------------------------------------------------
0000120C                           505  
0000120C                           506  
0000120C                           507  
0000120C                           508  
0000120C                           509  
0000120C                           510  
0000120C                           511  
0000120C                           512  
0000120C                           513  
0000120C                           514  
0000120C                           515  
0000120C                           516  
0000120C                           517  
0000120C                           518  -------------------- end include --------------------
0000120C                           519              INCLUDE "PLAYER.X68"            ;EL JUGADOR
0000120C                           520  ; -----------------------------------------------------------------------------
0000120C                           521  ;           PLAYER
0000120C                           522  ; -----------------------------------------------------------------------------
0000120C                           523  PLRINIT
0000120C                           524  ; INITIALIZES THE PLAYER
0000120C                           525  ; INPUT    - NONE
0000120C                           526  ; OUTPUT   - NONE
0000120C                           527  ; MODIFIES - NONE
0000120C                           528  ; -----------------------------------------------------------------------------
0000120C                           529              
0000120C  33FC 00E0 00002384       530              MOVE.W  #PINPOSX,PPOSX
00001214  33FC 0040 00002386       531              MOVE.W  #PINWIDTH,PWIDTH
0000121C  33FC 0003 00002388       532              MOVE.W  #PINLIVE,PLIVES
00001224  4279 0000238A            533              CLR.W   PSCORE
0000122A                           534             
0000122A  4E75                     535              RTS
0000122C                           536  
0000122C                           537  
0000122C                           538  ; -----------------------------------------------------------------------------
0000122C                           539  
0000122C                           540  PLRUPD      
0000122C  48E7 6000                541              MOVEM.L D1-D2,-(A7)
00001230                           542              
00001230                           543              
00001230  1239 000016CC            544              MOVE.B  KBDVAL,D1  
00001236  E219                     545              ROR.B   #1,D1                   ;IZQUIERDA
00001238  6400 0016                546              BCC     .RIGHTKEY                  ;CUANDO C = 0
0000123C                           547              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
0000123C  3439 00002384            548              MOVE.W  PPOSX,D2
00001242  B47C 0000                549              CMP.W    #0,D2
00001246  6F00 0008                550              BLE     .RIGHTKEY
0000124A  5179 00002384            551              SUB.W   #PMOVE,(PPOSX)
00001250                           552  .RIGHTKEY
00001250  E209                     553              LSR.B   #1,D1                   ;NO NOS IMPORTA EL DE ARRIBA
00001252  E219                     554              ROR.B   #1,D1                   ;
00001254  6400 001C                555              BCC     .END
00001258                           556              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
00001258  3439 00002384            557              MOVE.W  PPOSX,D2
0000125E  D479 00002386            558              ADD.W   PWIDTH,D2 
00001264                           559  
00001264  B47C 0200                560              CMP.W    #SCRCTRL,D2
00001268  6C00 0008                561              BGE     .END
0000126C  5079 00002384            562              ADD.W   #PMOVE,PPOSX
00001272                           563  .END
00001272  4CDF 0006                564              MOVEM.L (A7)+,D1-D2
00001276  4E75                     565              RTS
00001278                           566  
00001278                           567  
00001278                           568  PPLOT
00001278  48E7 FC00                569              MOVEM.L  D0-D5,-(A7)
0000127C                           570              ;CONTOUR COLOR
0000127C  223C 00ECD59D            571              MOVE.L  #PCOLOR,D1  
00001282  103C 0050                572              MOVE.B  #80,D0
00001286  4E4F                     573              TRAP    #15
00001288                           574      
00001288                           575      
00001288                           576               ;FILL COLOR
00001288  C2BC 00ECD59D            577              AND.L   #PCOLOR,D1  
0000128E  103C 0051                578              MOVE.B  #81,D0
00001292  4E4F                     579              TRAP    #15
00001294                           580   
00001294                           581  
00001294                           582               ;SQUARE
00001294  3A39 00002386            583              MOVE.W  PWIDTH,D5                     
0000129A  3639 00002384            584              MOVE.W  PPOSX,D3
000012A0  383C 01DC                585              MOVE.W  #PPOSY+PHEIGHT,D4
000012A4  D645                     586              ADD.W   D5,D3
000012A6                           587      
000012A6  3239 00002384            588              MOVE.W  PPOSX,D1
000012AC  343C 01D0                589              MOVE.W  #PPOSY,D2
000012B0                           590      
000012B0  303C 0057                591              MOVE.W  #87,D0
000012B4  4E4F                     592              TRAP    #15
000012B6                           593      
000012B6  4CDF 003F                594              MOVEM.L  (A7)+,D0-D5
000012BA                           595  
000012BA  4E75                     596              RTS
000012BC                           597      
000012BC                           598  
000012BC                           599  
000012BC                           600  
000012BC                           601  
000012BC                           602  
000012BC                           603  
000012BC                           604  
000012BC                           605  
000012BC                           606  
000012BC                           607  
000012BC                           608  -------------------- end include --------------------
000012BC                           609              INCLUDE "STATES.X68"            ;
000012BC                           610  ; =============================================================================
000012BC                           611  ; GAME STATE MANAGEMENT
000012BC                           612  ; =============================================================================
000012BC                           613  
000012BC                           614  ; -----------------------------------------------------------------------------
000012BC                           615  STAINIT
000012BC                           616  ; INITALIZES THE STATE MANAGER
000012BC                           617  ; INPUT    - NONE
000012BC                           618  ; OUTPUT   - NONE
000012BC                           619  ; MODIFIES - NONE
000012BC                           620  ; -----------------------------------------------------------------------------
000012BC  33FC FFFF 00002380       621              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
000012C4                           622             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
000012C4  33FC 0000 00002382       623              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
000012CC  4E75                     624              RTS
000012CE                           625  
000012CE                           626  ; -----------------------------------------------------------------------------
000012CE                           627  STAUPD
000012CE                           628  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
000012CE                           629  ; INPUT    - NONE
000012CE                           630  ; OUTPUT   - NONE
000012CE                           631  ; MODIFIES - NONE
000012CE                           632  ; -----------------------------------------------------------------------------
000012CE  48E7 8080                633              MOVEM.L D0/A0,-(A7)
000012D2  4280                     634              CLR.L   D0
000012D4  3039 00002382            635              MOVE.W  (STANEXT),D0
000012DA  B079 00002380            636              CMP.W   (STACUR),D0
000012E0  6700 0012                637              BEQ     .DOUPD
000012E4  33C0 00002380            638              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
000012EA  E588                     639              LSL.L   #2,D0
000012EC  2040                     640              MOVE.L  D0,A0
000012EE  2068 130C                641              MOVE.L  .INITBL(A0),A0
000012F2  4E90                     642              JSR     (A0)
000012F4  4280                     643  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
000012F6  3039 00002380            644              MOVE.W  (STACUR),D0
000012FC  E588                     645              LSL.L   #2,D0
000012FE  2040                     646              MOVE.L  D0,A0
00001300  2068 1318                647              MOVE.L  .UPDTBL(A0),A0
00001304  4E90                     648              JSR     (A0)
00001306  4CDF 0101                649              MOVEM.L (A7)+,D0/A0
0000130A  4E75                     650              RTS
0000130C= 0000111A 00001356 ...    651  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTY     ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
00001318                           652                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
00001318                           653                                               ;EL 2 ES NO HACER NADA 
00001318= 000013A2 00001368 ...    654  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAGOVRU
00001328                           655                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
00001328                           656                                              ;EL 2 HACE QUE SE UPDATE 
00001328                           657  
00001328                           658  ; -----------------------------------------------------------------------------
00001328                           659  STAPLOT
00001328                           660  ; PERFORMS STATE PLOT
00001328                           661  ; INPUT    - NONE
00001328                           662  ; OUTPUT   - NONE
00001328                           663  ; MODIFIES - NONE
00001328                           664  ; -----------------------------------------------------------------------------
00001328  48E7 8080                665              MOVEM.L D0/A0,-(A7)
0000132C  4280                     666              CLR.L   D0
0000132E  3039 00002380            667              MOVE.W  (STACUR),D0
00001334  E588                     668              LSL.L   #2,D0
00001336  2040                     669              MOVE.L  D0,A0
00001338  2068 1344                670              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
0000133C  4E90                     671              JSR     (A0)
0000133E  4CDF 0101                672              MOVEM.L (A7)+,D0/A0
00001342  4E75                     673              RTS
00001344= 000013B8 0000138A ...    674  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAGOVRP
00001354                           675                                               ; EL 0 ES DIBUJAR LA PANTALLA DE INICIO
00001354                           676  
00001354                           677  ; -----------------------------------------------------------------------------
00001354                           678  STAEMPTY
00001354                           679  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
00001354                           680  ; INPUT    - NONE
00001354                           681  ; OUTPUT   - NONE
00001354                           682  ; MODIFIES - NONE
00001354                           683  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
00001354                           684  ; -----------------------------------------------------------------------------
00001354  4E75                     685              RTS
00001356                           686  
00001356                           687  ; -----------------------------------------------------------------------------
00001356                           688  STAPLAYI    
00001356                           689  ; PLAY STATE INITIALIZATION.
00001356                           690  ; INPUT    - NONE
00001356                           691  ; OUTPUT   - NONE
00001356                           692  ; MODIFIES - NONE
00001356                           693  ; NOTE     - JUST A WRAPPER FOR PLRINIT
00001356                           694  ; -----------------------------------------------------------------------------
00001356  4EB8 120C                695              JSR     PLRINIT
0000135A  4EB9 00001490            696              JSR     BINIT
00001360  4EB9 00001624            697              JSR     BLINIT
00001366  4E75                     698              RTS
00001368                           699              
00001368                           700  ; -----------------------------------------------------------------------------
00001368                           701  STASPACEU
00001368                           702  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
00001368                           703  ; INPUT    - NONE
00001368                           704  ; OUTPUT   - NONE
00001368                           705  ; MODIFIES - NONE
00001368                           706  ; -----------------------------------------------------------------------------
00001368                           707             
00001368  0839 0004 000016CD       708              BTST.B  #KBDBITF1,(KBDEDGE)
00001370  6700 000A                709              BEQ     .END
00001374  33FC 0002 00002382       710              MOVE.W  #STAPLAY,(STANEXT)
0000137C                           711  .END        
0000137C  4E75                     712              RTS
0000137E                           713                               
0000137E                           714  
0000137E                           715  ; -----------------------------------------------------------------------------
0000137E                           716  STAPLAYU
0000137E                           717  ; PLAY STATE UPDATE
0000137E                           718  ; INPUT    - NONE
0000137E                           719  ; OUTPUT   - NONE
0000137E                           720  ; MODIFIES - NONE
0000137E                           721  ; -----------------------------------------------------------------------------
0000137E  4EB8 122C                722              JSR     PLRUPD
00001382  4EB9 000014B6            723              JSR     BUPD                    
00001388  4E75                     724              RTS
0000138A                           725  ; -----------------------------------------------------------------------------
0000138A                           726  STAPLAYP
0000138A                           727  ; PLAY STATE PLOT
0000138A                           728  ; INPUT    - NONE
0000138A                           729  ; OUTPUT   - NONE
0000138A                           730  ; MODIFIES - NONE
0000138A                           731  ; -----------------------------------------------------------------------------
0000138A  4EB9 00001640            732              JSR     BLPLOT
00001390  4EB8 1278                733              JSR     PPLOT
00001394  4EB9 000015AC            734              JSR     BPLOT
0000139A  4EB9 000015EC            735              JSR     SCTRLINIT
000013A0  4E75                     736              RTS
000013A2                           737  
000013A2                           738  ; -----------------------------------------------------------------------------
000013A2  =0000111A                739  STAINTRI    EQU     DMMINIT                 ;VACIA LA MEMORIA DEL JUEGO
000013A2                           740  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
000013A2                           741  
000013A2                           742  ; INTRO STATE INIT
000013A2                           743  ; INPUT    - NONE
000013A2                           744  ; OUTPUT   - NONE
000013A2                           745  ; MODIFIES - NONE
000013A2                           746  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
000013A2                           747  ; -----------------------------------------------------------------------------
000013A2                           748  
000013A2                           749  ; -----------------------------------------------------------------------------
000013A2                           750  STAINTRU
000013A2                           751  ; INTRO STATE UPDATE
000013A2                           752  ; INPUT    - NONE
000013A2                           753  ; OUTPUT   - NONE
000013A2                           754  ; MODIFIES - NONE
000013A2                           755  ; -----------------------------------------------------------------------------
000013A2  0839 0004 000016CD       756              BTST.B  #KBDBITF1,(KBDEDGE)
000013AA  6700 000A                757              BEQ     .END
000013AE  33FC 0001 00002382       758              MOVE.W  #STASPACE,(STANEXT)
000013B6  4E75                     759  .END        RTS
000013B8                           760  
000013B8                           761  ; -----------------------------------------------------------------------------
000013B8                           762  STAINTRP
000013B8                           763  ; INTRO STATE PLOT
000013B8                           764  ; INPUT    - NONE
000013B8                           765  ; OUTPUT   - NONE
000013B8                           766  ; MODIFIES - NONE
000013B8                           767  ; -----------------------------------------------------------------------------
000013B8  48E7 C040                768              MOVEM.L A1/D0-D1,-(A7)
000013BC  323C 0E07                769              MOVE.W  #INTTITX<<8|INTTITY, D1 ;COORDENADAS DEL TEXTO TITULO
000013C0  103C 000B                770              MOVE.B  #11,D0
000013C4  4E4F                     771              TRAP    #15
000013C6                           772              
000013C6  223C 00DCAA7C            773              MOVE.L  #INTTITC,D1
000013CC  243C 00120001            774              MOVE.L  #18<<16|1,D2
000013D2  103C 0015                775              MOVE.B  #21,D0
000013D6  4E4F                     776              TRAP    #15
000013D8                           777  
000013D8  43F9 00001412            778              LEA     .TITSTR,A1              ;PONE EL TEXTO
000013DE  103C 000E                779              MOVE.B  #14,D0
000013E2  4E4F                     780              TRAP    #15
000013E4                           781  
000013E4  323C 2052                782              MOVE.W  #INTPRSX<<8|INTPRSY, D1 ;COORDENADAS DEL TEXTO START
000013E8  103C 000B                783              MOVE.B  #11,D0
000013EC  4E4F                     784              TRAP    #15
000013EE                           785              
000013EE  223C 00FFFFFF            786              MOVE.L  #INTPRSC,D1
000013F4  243C 000A0001            787              MOVE.L  #10<<16|1,D2
000013FA  103C 0015                788              MOVE.B  #21,D0
000013FE  4E4F                     789              TRAP    #15
00001400                           790              
00001400  43F9 00001422            791              LEA     .PRSSTR,A1
00001406  103C 000E                792              MOVE.B  #14,D0
0000140A  4E4F                     793              TRAP    #15
0000140C  4CDF 0203                794              MOVEM.L (A7)+,A1/D0-D1
00001410  4E75                     795              RTS
00001412                           796  
00001412= 42 72 65 61 6B 69 ...    797  .TITSTR     DC.B    'Breaking Blocks',0
00001422= 50 55 53 48 20 46 ...    798  .PRSSTR     DC.B    'PUSH FIRE TO START',0
00001436                           799              DS.W    0
00001436                           800  
00001436                           801  ; -----------------------------------------------------------------------------
00001436                           802  STAGOVRU
00001436                           803  ; GAME OVER STATE UPDATE
00001436                           804  ; INPUT    - NONE
00001436                           805  ; OUTPUT   - NONE
00001436                           806  ; MODIFIES - NONE
00001436                           807  ; -----------------------------------------------------------------------------
00001436  0839 0004 000016CD       808              BTST.B  #KBDBITF1,(KBDEDGE)
0000143E  6700 000A                809              BEQ     .END
00001442  33FC 0000 00002382       810              MOVE.W  #STAINTR,(STANEXT)
0000144A  4E75                     811  .END        RTS
0000144C                           812  
0000144C                           813  ; -----------------------------------------------------------------------------
0000144C                           814  STAGOVRP
0000144C                           815  ; GAME OVER STATE PLOT
0000144C                           816  ; INPUT    - NONE
0000144C                           817  ; OUTPUT   - NONE
0000144C                           818  ; MODIFIES - NONE
0000144C                           819  ; -----------------------------------------------------------------------------
0000144C                           820  
0000144C  48E7 C040                821              MOVEM.L A1/D0-D1,-(A7)
00001450  323C 1007                822              MOVE.W  #GOVERX<<8|GOVERY, D1 ;COORDENADAS DEL TEXTO TITULO
00001454  103C 000B                823              MOVE.B  #11,D0
00001458  4E4F                     824              TRAP    #15
0000145A                           825              
0000145A  223C 0000FFFF            826              MOVE.L  #GOVERC,D1
00001460  243C 00120001            827              MOVE.L  #18<<16|1,D2
00001466  103C 0015                828              MOVE.B  #21,D0
0000146A  4E4F                     829              TRAP    #15
0000146C                           830              
0000146C  7200                     831              MOVE.L  #$00000000,D1
0000146E  103C 0051                832              MOVE.B  #81,D0
00001472  4E4F                     833              TRAP    #15
00001474                           834  
00001474  43F9 00001486            835              LEA     .GOVSTR,A1              ;PONE EL TEXTO
0000147A  103C 000E                836              MOVE.B  #14,D0
0000147E  4E4F                     837              TRAP    #15
00001480                           838              
00001480  4CDF 0203                839              MOVEM.L (A7)+,A1/D0-D1
00001484  4E75                     840              RTS
00001486                           841  
00001486= 47 41 4D 45 20 4F ...    842  .GOVSTR     DC.B    'GAME OVER',0
00001490                           843              DS.W    0
00001490                           844  
00001490                           845  
00001490                           846  
00001490                           847  
00001490                           848  
00001490                           849  
00001490                           850  
00001490                           851  
00001490                           852  
00001490                           853  -------------------- end include --------------------
00001490                           854              INCLUDE "BALL.X68"              ;LA PELOTA
00001490                           855  ; =============================================================================
00001490                           856  ; BALL
00001490                           857  ; =============================================================================
00001490                           858  
00001490                           859  BINIT
00001490  33FC 00F8 0000238E       860              MOVE.W  #BINPOSX,BPOSX
00001498  33FC 01C6 00002390       861              MOVE.W  #BINPOSY-2,BPOSY  
000014A0  33FC 0004 00002392       862              MOVE.W  #BINSPEED,BSPEEDX
000014A8  303C 0004                863              MOVE.W  #BINSPEED,D0
000014AC  4440                     864              NEG.W   D0
000014AE  33C0 00002394            865              MOVE.W  D0,BSPEEDY
000014B4  4E75                     866              RTS
000014B6                           867              
000014B6                           868  BUPD        
000014B6  48E7 F000                869              MOVEM.L D0-D3,-(A7)
000014BA                           870              
000014BA                           871              
000014BA  3239 00002390            872  .UP         MOVE.W  BPOSY,D1
000014C0  B27C 0000                873              CMP.W   #0,D1
000014C4  6E00 0008                874              BGT     .LEFT
000014C8  4479 00002394            875              NEG.W   BSPEEDY
000014CE                           876              
000014CE  3239 0000238E            877  .LEFT       MOVE.W  BPOSX,D1                ;CHOQUE IZQUIERDA
000014D4  B27C 0000                878              CMP.W    #0,D1                 
000014D8  6E00 0008                879              BGT     .RIGHT     
000014DC  4479 00002392            880              NEG.W   BSPEEDX
000014E2                           881  
000014E2                           882  .RIGHT     
000014E2  3239 0000238E            883              MOVE.W  BPOSX,D1
000014E8  343C 0200                884              MOVE.W  #SCRCTRL,D2
000014EC  5041                     885              ADD.W   #BWIDTH,D1
000014EE  B242                     886              CMP.W    D2,D1
000014F0  6D00 0008                887              BLT     .PLRY
000014F4  4479 00002392            888              NEG.W   BSPEEDX
000014FA                           889  
000014FA                           890  .PLRY
000014FA  3239 00002390            891              MOVE.W  BPOSY,D1
00001500  5041                     892              ADD.W   #BWIDTH,D1
00001502  343C 01D0                893              MOVE.W  #PPOSY,D2               ;D2-D1
00001506  B441                     894              CMP.W   D1,D2                   ;SI LA Y SE CORRESPONDE
00001508  6E00 0084                895              BGT     .END                    ;SI LA BPOSY+WIDHT ES MAYOR QUE PPOSY,
0000150C                           896                                              ;ESPERAR A QUE CHOQUE CON ABAJO
0000150C                           897              ;MOVE.W  #BINPOSY,BPOSY
0000150C                           898  .PLRXLEFT   
0000150C                           899              
0000150C  3239 0000238E            900              MOVE.W  BPOSX,D1
00001512  5841                     901              ADD.W   #BWIDTH/2,D1
00001514  3439 00002384            902              MOVE.W  PPOSX,D2
0000151A  B441                     903              CMP.W   D1,D2                   ;MIRAMOS EL IZQUIERDO
0000151C  6C00 0058                904              BGE     .DOWN
00001520                           905              
00001520                           906  .PLRXMIDDLE 
00001520  3639 00002386            907              MOVE.W  PWIDTH,D3
00001526  E24B                     908              LSR.W   #1,D3
00001528  D443                     909              ADD.W   D3,D2
0000152A  B441                     910              CMP.W   D1,D2                   ;CENTRO - POS PEL
0000152C  6F00 001E                911              BLE     .PLRXRIGHT
00001530                           912             
00001530  4479 00002394            913              NEG.W   BSPEEDY
00001536  3239 00002392            914              MOVE.W  BSPEEDX,D1
0000153C  6B00 000E                915              BMI     .PLRXRIGHT
00001540  4479 00002392            916              NEG.W   BSPEEDX
00001546  4EF9 0000158E            917              JMP     .END
0000154C                           918              
0000154C                           919  .PLRXRIGHT 
0000154C  3239 0000238E            920              MOVE.W  BPOSX,D1           
00001552  D443                     921              ADD.W   D3,D2                   ;COMPARAMOS EL LADO IZQ DE LA PLATAFORMA
00001554  B441                     922              CMP.W   D1,D2                   ;EL DERECHO
00001556  6F00 001E                923              BLE     .DOWN                   
0000155A  4479 00002394            924              NEG.W   BSPEEDY
00001560                           925              
00001560  3239 00002392            926              MOVE.W  BSPEEDX,D1
00001566  6A00 000E                927              BPL     .DOWN              ;SI ES POSITIVO SOLO NEGAMOS Y
0000156A  4479 00002392            928              NEG.W   BSPEEDX
00001570  4EF9 0000158E            929              JMP     .END
00001576                           930  
00001576                           931  .DOWN       
00001576  3239 00002390            932              MOVE.W  BPOSY,D1
0000157C  5041                     933              ADD.W   #BHEIGHT,D1
0000157E  B27C 01E0                934              CMP.W   #SCRHEIGH,D1
00001582  6D00 000A                935              BLT     .END
00001586  33FC 0003 00002382       936              MOVE.W   #STAGOVR,(STANEXT)
0000158E                           937  .END            
0000158E                           938  
0000158E  3039 00002392            939              MOVE.W  BSPEEDX,D0
00001594  D179 0000238E            940              ADD.W   D0,BPOSX
0000159A                           941              
0000159A  3239 00002394            942              MOVE.W  BSPEEDY,D1
000015A0  D379 00002390            943              ADD.W   D1,BPOSY
000015A6                           944  
000015A6  4CDF 000F                945              MOVEM.L (A7)+,D0-D3
000015AA                           946              
000015AA  4E75                     947              RTS
000015AC                           948              
000015AC                           949  BPLOT       
000015AC  48E7 FC00                950              MOVEM.L  D0-D5,-(A7)
000015B0                           951              ;CONTOUR COLOR
000015B0  223C 00FFFFFF            952              MOVE.L  #BINCOLOR,D1  
000015B6  103C 0050                953              MOVE.B  #80,D0
000015BA  4E4F                     954              TRAP    #15
000015BC                           955      
000015BC                           956               ;FILL COLOR
000015BC  223C 00FFFFFF            957              MOVE.L   #BINCOLOR,D1  
000015C2  103C 0051                958              MOVE.B  #81,D0
000015C6  4E4F                     959              TRAP    #15
000015C8                           960   
000015C8                           961              ;CIRCLE
000015C8                           962  
000015C8  3A3C 0008                963              MOVE.W  #BWIDTH,D5 
000015CC                           964      
000015CC  3639 0000238E            965              MOVE.W  BPOSX,D3
000015D2  3839 00002390            966              MOVE.W  BPOSY,D4
000015D8  3203                     967              MOVE.W  D3,D1
000015DA  3404                     968              MOVE.W  D4,D2
000015DC                           969              
000015DC  D845                     970              ADD.W   D5,D4
000015DE  D645                     971              ADD.W   D5,D3
000015E0                           972      
000015E0                           973  
000015E0  103C 0058                974              MOVE.B  #88,D0
000015E4  4E4F                     975              TRAP    #15
000015E6                           976      
000015E6  4CDF 003F                977              MOVEM.L  (A7)+,D0-D5
000015EA                           978  
000015EA  4E75                     979              RTS
000015EC                           980  
000015EC                           981  
000015EC                           982  
000015EC                           983  
000015EC                           984  
000015EC                           985  
000015EC                           986  
000015EC                           987  
000015EC                           988  
000015EC                           989  
000015EC                           990  -------------------- end include --------------------
000015EC                           991              INCLUDE "SCTRL.X68"             ;CONTROL SCREEN
000015EC                           992  ;--------------------------------------------------------------------------
000015EC                           993  ;SCREEN CONTROL
000015EC                           994  ;--------------------------------------------------------------------------
000015EC                           995  SCTRLINIT
000015EC  48E7 F800                996              MOVEM.L D0-D4,-(A7)       
000015F0  223C 00FFFFFF            997              MOVE.L  #$00FFFFFF,D1  ;COLOR
000015F6  103C 0050                998              MOVE.B  #80,D0
000015FA  4E4F                     999              TRAP    #15
000015FC                          1000              
000015FC  C2BC 00FFFFFF           1001              AND.L   #$00FFFFFF,D1  ;COLOR
00001602  103C 0051               1002              MOVE.B  #81,D0
00001606  4E4F                    1003              TRAP    #15
00001608                          1004              
00001608  103C 0057               1005              MOVE.B  #87,D0
0000160C  323C 0200               1006              MOVE.W  #SCRCTRL,D1
00001610  363C 020A               1007              MOVE.W  #SCRCTRL+10,D3
00001614  343C 0000               1008              MOVE.W  #0,D2
00001618  383C 01E0               1009              MOVE.W  #SCRHEIGH,D4
0000161C  4E4F                    1010              TRAP    #15
0000161E                          1011              
0000161E  4CDF 001F               1012              MOVEM.L  (A7)+,D0-D4
00001622                          1013  
00001622  4E75                    1014              RTS
00001622  4E75                    1015  -------------------- end include --------------------
00001624                          1016              INCLUDE  "BLOCKS.X68"           ;BLOQUES
00001624                          1017  ;-----------------------------------------------------------
00001624                          1018  ;           BLOCKS
00001624                          1019  ;-----------------------------------------------------------
00001624                          1020    
00001624                          1021  BLINIT
00001624  48E7 8080               1022              MOVEM.L D0/A0,-(A7)
00001628  41F9 00002398           1023              LEA.L   BLMATRIX,A0
0000162E  3038 000C               1024              MOVE.W  BLROW,D0
00001632                          1025  .LOOP       
00001632  10FC 007E               1026              MOVE.B  #%01111110,(A0)+
00001636  51C8 FFFA               1027              DBRA    D0,.LOOP
0000163A  4CDF 0101               1028              MOVEM.L (A7)+,D0/A0
0000163E  4E75                    1029              RTS
00001640                          1030              
00001640                          1031  BLUPD       
00001640                          1032              
00001640                          1033              
00001640                          1034  BLPLOT
00001640  48E7 FFC0               1035              MOVEM.L D0-D7/A0-A1,-(A7)
00001644  103C 0050               1036              MOVE.B  #80,D0                  ;SET PEN COLOR
00001648  7200                    1037              MOVE.L  #0,D1
0000164A  4E4F                    1038              TRAP    #15
0000164C                          1039              
0000164C  4242                    1040              CLR.W   D2                      ;UPPER Y
0000164E  383C 0010               1041              MOVE.W  #BLHEIGHT,D4            ;DOWN Y
00001652  41F8 11DC               1042              LEA     COLORS,A0
00001656                          1043              
00001656  3A3C 000B               1044              MOVE.W  #BLROW-1,D5    ;DBRA
0000165A  227C 00000000           1045              MOVE.L  #0,A1                      ;PARA SABER CUAL PONER D6= FILA
00001660                          1046              
00001660                          1047  
00001660                          1048              
00001660                          1049  .LOOP2                                      ;BUCLE DE FILAS
00001660                          1050   
00001660  103C 0051               1051              MOVE.B  #81,D0                  ;SET COLOR
00001664  2218                    1052              MOVE.L  (A0)+,D1
00001666  4E4F                    1053              TRAP    #15
00001668                          1054                                        ;BUCLE FILAS
00001668                          1055              
00001668  363C 0040               1056              MOVE.W  #BLWIDTH,D3             ;RIGHT X
0000166C  4241                    1057              CLR.W   D1                      ;LEFT X
0000166E                          1058              
0000166E  3F05                    1059              MOVE.W  D5,-(A7)                ;GUARDO EL VALOR DEL DECREMENTO DE LOOP2
00001670  3A3C 0007               1060              MOVE.W  #BLCOL-1,D5
00001674  1C29 2398               1061              MOVE.B  BLMATRIX(A1),D6
00001678                          1062  .LOOP1                                      ; BUCLE COLUMNAS
00001678                          1063             
00001678  E31E                    1064              ROL.B   #1,D6
0000167A  6400 0008               1065              BCC     .SALTO                  ; SALTA SI CARRY = 0
0000167E                          1066              
0000167E  103C 0057               1067              MOVE.B  #87,D0                  ; DIBUJAMOS EL CUADRADO
00001682  4E4F                    1068              TRAP    #15
00001684                          1069  .SALTO
00001684  3203                    1070              MOVE.W  D3,D1
00001686  0643 0040               1071              ADD.W   #BLWIDTH, D3
0000168A  5247                    1072              ADDI.W  #1,D7
0000168C  51CD FFEA               1073              DBRA    D5,.LOOP1 
00001690  3A1F                    1074              MOVE.W  (A7)+,D5              
00001692                          1075  
00001692  5249                    1076              ADDA.W  #1,A1
00001694  3404                    1077              MOVE.W  D4,D2
00001696  0644 0010               1078              ADD.W   #BLHEIGHT,D4
0000169A  51CD FFC4               1079              DBRA    D5,.LOOP2
0000169E  4CDF 03FF               1080              MOVEM.L (A7)+,D0-D7/A0-A1
000016A2  4E75                    1081              RTS
000016A4                          1082  
000016A4                          1083  
000016A4                          1084  
000016A4                          1085  
000016A4                          1086  
000016A4                          1087  -------------------- end include --------------------
000016A4                          1088  
000016A4                          1089  ; --- INITIALIZE --------------------------------------------------------------
000016A4                          1090              
000016A4  4EB8 1000               1091  START       JSR     SYSINIT
000016A8                          1092              ; TO DO: CALL GAME INITIALIZATION CODE HERE
000016A8  4EB8 12BC               1093              JSR     STAINIT                 ;INICIA LAS PANTALLAS            
000016AC                          1094              
000016AC                          1095  ; --- UPDATE ------------------------------------------------------------------
000016AC                          1096  
000016AC  4E40                    1097  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
000016AE                          1098                                              ; UPDATE DEPENDING ON THE STATE
000016AE                          1099              ; TO DO: CALL GAME UPDATE CODE HERE
000016AE  4EB8 12CE               1100              JSR     STAUPD
000016B2                          1101  
000016B2                          1102  ; --- WAIT SYNCH --------------------------------------------------------------
000016B2                          1103  
000016B2  4A39 000016CE           1104  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
000016B8  67F8                    1105              BEQ     .WINT
000016BA                          1106              
000016BA  4239 000016CE           1107              CLR.B   (SCRINTCT)
000016C0                          1108  
000016C0                          1109  ; --- PLOT --------------------------------------------------------------------
000016C0                          1110              
000016C0                          1111              ; TO DO: CALL GAME PLOT CODE HERE
000016C0  4EB8 1328               1112              JSR     STAPLOT
000016C4                          1113  
000016C4  4E41                    1114              TRAP    #SCRTRAP                ; SHOW GRAPHICS
000016C6  60E4                    1115              BRA     .LOOP
000016C8  FFFF FFFF               1116              SIMHALT
000016CC                          1117  
000016CC                          1118  ; --- VARIABLES ---------------------------------------------------------------
000016CC                          1119  
000016CC                          1120              INCLUDE "SYSVAR.X68"
000016CC                          1121  ; =============================================================================
000016CC                          1122  ; SYSTEM VARS
000016CC                          1123  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
000016CC                          1124  ; THEY MUST NOT BE IN PROTECTED MEMORY.
000016CC                          1125  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
000016CC                          1126  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
000016CC                          1127  ; THIS IS GOOD ENOUGH.
000016CC                          1128  ; =============================================================================
000016CC                          1129  
000016CC                          1130  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
000016CC                          1131  
000016CC                          1132  KBDVAL      DS.B    1                       ; KEY PRESSED=1
000016CD                          1133  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
000016CE                          1134  
000016CE                          1135              DS.W    0
000016CE                          1136  
000016CE                          1137  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
000016CE                          1138  
000016CE                          1139  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
000016CF                          1140  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
000016D0                          1141              DS.W    0
000016D0                          1142  
000016D0                          1143  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
000016D0                          1144  
00001700                          1145              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001700                          1146  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002380                          1147              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002380                          1148  
00002380                          1149  
00002380                          1150  
00002380                          1151  -------------------- end include --------------------
00002380                          1152              INCLUDE "VAR.X68"
00002380                          1153  ; =============================================================================
00002380                          1154  ; GAME VARS
00002380                          1155  ; =============================================================================
00002380                          1156  
00002380                          1157  ; TO DO: DECLARE GAME VARIABLES HERE.
00002380                          1158  
00002380                          1159  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
00002380                          1160  
00002380                          1161  STACUR      DS.W    1                       ; CURRENT GAME STATE
00002382                          1162  STANEXT     DS.W    1                       ; NEXT GAME STATE
00002384                          1163  ;----------------------------------------------------------------------------
00002384                          1164  
00002384                          1165  ; PLAYER --------------------------------------------------------------------
00002384                          1166  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
00002386                          1167  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
00002388                          1168  PLIVES      DS.W    1                       ;LIVES LEFT
0000238A                          1169  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
0000238C                          1170  PSPEED      DS.W    1
0000238E                          1171  ;----------------------------------------------------------------------------
0000238E                          1172  
0000238E                          1173  ; BALL ----------------------------------------------------------------------
0000238E                          1174  BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
00002390                          1175  BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
00002392                          1176  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
00002394                          1177  BSPEEDY     DS.W    1
00002396                          1178  BCOLOR      DS.W    1
00002398                          1179  
00002398                          1180  ; BLOCKS --------------------------------------------------------------------
00002398                          1181  BLMATRIX    DS.B    12  ;12*8
000023A4                          1182  
000023A4                          1183  
000023A4                          1184  
000023A4                          1185  -------------------- end include --------------------
000023A4                          1186              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              2396
BHEIGHT             8
BINCOLOR            FFFFFF
BINIT               1490
BINPOSX             F8
BINPOSY             1C8
BINSPEED            4
BLCOL               8
BLHEIGHT            10
BLINIT              1624
BLINIT:LOOP         1632
BLMATRIX            2398
BLPLOT              1640
BLPLOT:LOOP1        1678
BLPLOT:LOOP2        1660
BLPLOT:SALTO        1684
BLROW               C
BLUE                F7E78E
BLUPD               1640
BLWIDTH             40
BPLOT               15AC
BPOSX               238E
BPOSY               2390
BSPEEDX             2392
BSPEEDY             2394
BUPD                14B6
BUPD:DOWN           1576
BUPD:END            158E
BUPD:LEFT           14CE
BUPD:PLRXLEFT       150C
BUPD:PLRXMIDDLE     1520
BUPD:PLRXRIGHT      154C
BUPD:PLRY           14FA
BUPD:RIGHT          14E2
BUPD:UP             14BA
BWIDTH              8
COLORS              11DC
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1700
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
GOVERC              FFFF
GOVERX              10
GOVERY              7
GREEN               95FF8C
INTPRSC             FFFFFF
INTPRSX             20
INTPRSY             52
INTTITC             DCAA7C
INTTITX             E
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             16CD
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              16CC
ORANGE              4E8CF3
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX             E0
PINWIDTH            40
PLIVES              2388
PLRINIT             120C
PLRUPD              122C
PLRUPD:END          1272
PLRUPD:RIGHTKEY     1250
PMOVE               8
PPLOT               1278
PPOSX               2384
PPOSY               1D0
PSCORE              238A
PSPEED              238C
PURPLE              FFACAC
PWIDTH              2386
SCRCTRL             200
SCRCYCCT            16CF
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            16CE
SCRIRQ              1
SCRISR              107E
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            2E4
SCTRLINIT           15EC
STACUR              2380
STAEMPTY            1354
STAGOVR             3
STAGOVRP            144C
STAGOVRP:GOVSTR     1486
STAGOVRU            1436
STAGOVRU:END        144A
STAINIT             12BC
STAINTR             0
STAINTRI            111A
STAINTRP            13B8
STAINTRP:PRSSTR     1422
STAINTRP:TITSTR     1412
STAINTRU            13A2
STAINTRU:END        13B6
STANEXT             2382
STANONE             FFFFFFFF
STAPLAY             2
STAPLAYI            1356
STAPLAYP            138A
STAPLAYU            137E
STAPLOT             1328
STAPLOT:PLTTBL      1344
START               16A4
START:LOOP          16AC
START:WINT          16B2
STASPACE            1
STASPACEU           1368
STASPACEU:END       137C
STAUPD              12CE
STAUPD:DOUPD        12F4
STAUPD:INITBL       130C
STAUPD:UPDTBL       1318
SYSINIT             1000
YELLOW              38EEF8
