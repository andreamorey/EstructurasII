000018AA Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 18/12/2019 19:14:48

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION : 
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8              
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =000002E4                 81  SCRWIDTH    EQU     740                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  
00001000                            93  -------------------- end include --------------------
00001000                            94              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            95  ; =============================================================================
00001000                            96  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            97  ; =============================================================================
00001000                            98  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101  ; INITIALIZES THE SYSTEM
00001000                           102  ; INPUT    - NONE
00001000                           103  ; OUTPUT   - NONE
00001000                           104  ; MODIFIES - NONE
00001000                           105  ; -----------------------------------------------------------------------------
00001000  205F                     106              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            107              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            108              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            109              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                110              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     111              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     112              RTS
0000101C                           113  
0000101C                           114  ; =============================================================================
0000101C                           115  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           116  ; =============================================================================
0000101C                           117  
0000101C                           118  ; -----------------------------------------------------------------------------
0000101C                           119  SCRINIT
0000101C                           120  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           121  ; INPUT    - NONE
0000101C                           122  ; OUTPUT   - NONE
0000101C                           123  ; MODIFIES - D0,D1,D2,D3
0000101C                           124  ; -----------------------------------------------------------------------------
0000101C                           125              ; TO DO:
0000101C                           126              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                127              ORI.W   #$0700,SR
00001020                           128              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           129              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       130              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           131              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                132              MOVE.B  #33,D0
0000102C  223C 02E401E0            133              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     134              TRAP    #15
00001034                           135              ; - SET WINDOWED MODE
00001034  7201                     136              MOVE.L  #1,D1
00001036  4E4F                     137              TRAP    #15
00001038                           138              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                139              MOVE.B  #11,D0
0000103C  323C FF00                140              MOVE.W  #$FF00,D1
00001040  4E4F                     141              TRAP    #15
00001042                           142              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                143              MOVE.B  #92,D0
00001046  123C 0011                144              MOVE.B  #17,D1
0000104A  4E4F                     145              TRAP    #15
0000104C                           146              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     147              MOVE.L  #11,D0
0000104E  323C FF00                148              MOVE.W  #$FF00,D1
00001052  4E4F                     149              TRAP    #15
00001054                           150              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           151              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       152              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           153              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           154              ;   TASK 32)
0000105C  103C 0020                155              MOVE.B  #32,D0
00001060  123C 0006                156              MOVE.B  #6,D1
00001064                           157         
00001064  143C 0081                158              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     159              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     160              TRAP    #15
0000106C                           161              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 000018D4            162              CLR.B   SCRINTCT
00001072  4239 000018D5            163              CLR.B   SCRCYCCT
00001078                           164              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                165              ANDI.W  #$F8FF,SR
0000107C  4E75                     166              RTS
0000107E                           167  
0000107E                           168  ; -----------------------------------------------------------------------------
0000107E                           169  SCRISR
0000107E                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           171  ; INPUT    - NONE
0000107E                           172  ; OUTPUT   - NONE
0000107E                           173  ; MODIFIES - NONE
0000107E                           174  ; -----------------------------------------------------------------------------
0000107E  5239 000018D4            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 000018D5            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     177              RTE
0000108C                           178  
0000108C                           179  ; -----------------------------------------------------------------------------
0000108C                           180  SCRUPD
0000108C                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           182  ; BUFFER FOR THE NEXT ONE.
0000108C                           183  ; INPUT    - NONE
0000108C                           184  ; OUTPUT   - NONE
0000108C                           185  ; MODIFIES - NONE
0000108C                           186  ; -----------------------------------------------------------------------------
0000108C                           187              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                188              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                189              MOVE.B  #94,D0
00001094  4E4F                     190              TRAP    #15
00001096  103C 000B                191              MOVE.B  #11,D0
0000109A  323C FF00                192              MOVE.W  #$FF00,D1
0000109E  4E4F                     193              TRAP    #15
000010A0  4CDF 0003                194              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     195              RTE
000010A6                           196  
000010A6                           197  ; =============================================================================
000010A6                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           199  ; =============================================================================
000010A6                           200  
000010A6                           201  ; -----------------------------------------------------------------------------
000010A6                           202  KBDINIT
000010A6                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           204  ; INPUT    - NONE
000010A6                           205  ; OUTPUT   - NONE
000010A6                           206  ; MODIFIES - NONE
000010A6                           207  ; -----------------------------------------------------------------------------
000010A6  4239 000018D2            208              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 000018D3            209              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     211              RTS
000010BC                           212  
000010BC                           213  ; -----------------------------------------------------------------------------
000010BC                           214  KBDREAD
000010BC                           215  ; TRAP SERVICE ROUTINE.
000010BC                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           219  ; INPUT    - NONE
000010BC                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           221  ; MODIFIES - NONE
000010BC                           222  ; -----------------------------------------------------------------------------
000010BC                           223              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                224              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                225              MOVE.B  #19,D0
000010C4                           226              
000010C4  223C 50104D20            227              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     228              TRAP    #15
000010CC                           229          
000010CC  4202                     230              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                231              MOVE.W  #3,D4
000010D2                           232              
000010D2                           233  .LOOP1      
000010D2                           234       
000010D2  E189                     235              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     236              MOVE.W  SR,D3                   
000010D6  0243 0001                237              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     238              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     239              OR.B    D3,D2                   
000010DE  51CC FFF2                240              DBRA    D4,.LOOP1
000010E2                           241          
000010E2                           242              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           243              
000010E2  223C 28272625            244              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     245              TRAP    #15
000010EA                           246              
000010EA  383C 0003                247              MOVE.W  #3,D4
000010EE                           248  .LOOP2      
000010EE  E189                     249              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     250              MOVE.W  SR,D3
000010F2  0243 0001                251              ANDI.W  #$0001,D3    
000010F6  E30A                     252              LSL.B   #1,D2
000010F8  8403                     253              OR.B    D3,D2
000010FA                           254              
000010FA  51CC FFF2                255              DBRA    D4,.LOOP2
000010FE                           256              
000010FE                           257              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           258              
000010FE                           259              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 000018D2            260              MOVE.B  KBDVAL,D3
00001104  4603                     261              NOT.B   D3
00001106  13C2 000018D2            262              MOVE.B  D2,KBDVAL
0000110C  C602                     263              AND.B   D2,D3
0000110E  13C3 000018D3            264              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                265              MOVEM.L (A7)+,D0-D4
00001118  4E73                     266              RTE
0000111A                           267  
0000111A                           268  ; =============================================================================
0000111A                           269  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           270  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           271  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           272  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           273  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           274  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           275  ; =============================================================================
0000111A                           276  
0000111A                           277  ; -----------------------------------------------------------------------------
0000111A                           278  DMMINIT
0000111A                           279  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           280  ; INPUT    - NONE
0000111A                           281  ; OUTPUT   - NONE
0000111A                           282  ; MODIFIES - NONE
0000111A                           283  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                284              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001900            285              LEA     DMMDATA,A0
00001124  303C 0031                286              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                287  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            288              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                289              DBRA.W  D0,.LOOP
00001136  4CDF 0101                290              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     291              RTS
0000113C                           292  
0000113C                           293  ; -----------------------------------------------------------------------------
0000113C                           294  DMMFIRST
0000113C                           295  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           296  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           297  ; INPUT    - NONE
0000113C                           298  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           299  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           300  ; -----------------------------------------------------------------------------
0000113C  41F9 00001900            301              LEA     DMMDATA,A0
00001142  4A58                     302  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                303              BNE     DMMFRFND
00001148  D1FC 0000003E            304              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 0000257F            305  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     306              BLT     DMMFRLOP
00001156  207C 00000000            307              MOVE.L  #0,A0
0000115C  4E75                     308  DMMFRFND    RTS
0000115E                           309  
0000115E                           310  ; -----------------------------------------------------------------------------
0000115E                           311  DMMNEXT
0000115E                           312  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           313  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           314  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           315  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           316  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           317  ; -----------------------------------------------------------------------------
0000115E  2F00                     318              MOVE.L  D0,-(A7)
00001160  2008                     319              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            320              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            321              ADD.L   #DMMBSIZE,D0
0000116E  2040                     322              MOVE.L  D0,A0
00001170  201F                     323              MOVE.L  (A7)+,D0
00001172  60DA                     324              BRA     DMMFRCOM
00001174                           325  
00001174                           326  ; -----------------------------------------------------------------------------
00001174                           327  DMMFRSTO
00001174                           328  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           329  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           330  ; INPUT    - D0.W : ID TO SEARCH
00001174                           331  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           332  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           333  ; -----------------------------------------------------------------------------
00001174  41F9 00001900            334              LEA     DMMDATA,A0
0000117A  B058                     335  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                336              BEQ     DMMFFND
00001180  D1FC 0000003E            337              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 0000257F            338  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     339              BLT     DMMFLOOP
0000118E  207C 00000000            340              MOVE.L  #0,A0
00001194  4E75                     341  DMMFFND     RTS
00001196                           342  
00001196                           343  ; -----------------------------------------------------------------------------
00001196                           344  DMMNEXTO
00001196                           345  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           346  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           347  ; INPUT    - D0.W : ID TO SEARCH
00001196                           348  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           351  ; -----------------------------------------------------------------------------
00001196  2F00                     352              MOVE.L  D0,-(A7)
00001198  2008                     353              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011A6  2040                     356              MOVE.L  D0,A0
000011A8  201F                     357              MOVE.L  (A7)+,D0
000011AA  60DA                     358              BRA     DMMFCOM
000011AC                           359  
000011AC                           360  ; -----------------------------------------------------------------------------
000011AC                           361  DMMALLOC
000011AC                           362  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           363  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           364  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           367  ; -----------------------------------------------------------------------------
000011AC  3F00                     368              MOVE.W  D0,-(A7)
000011AE  4240                     369              CLR.W   D0
000011B0  4EB8 1174                370              JSR     DMMFRSTO
000011B4  301F                     371              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            372              CMP.L   #0,A0
000011BC  6700 0006                373              BEQ     .END
000011C0  3140 FFFE                374              MOVE.W  D0,-2(A0)
000011C4  4E75                     375  .END        RTS
000011C6                           376  
000011C6                           377  ; -----------------------------------------------------------------------------
000011C6                           378  DMMFREE
000011C6                           379  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           380  ; SYSTEM (0)
000011C6                           381  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           382  ; OUTPUT   - NONE
000011C6                           383  ; MODIFIES - NONE
000011C6                           384  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                385              MOVEM.L D0/A0,-(A7)
000011CA  2008                     386              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            387              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     388              MOVE.L  D0,A0
000011D4  4250                     389              CLR.W   (A0)
000011D6  4CDF 0101                390              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     391              RTS
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  
000011DC                           407  
000011DC                           408  
000011DC                           409  
000011DC                           410  -------------------- end include --------------------
000011DC                           411              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           412  ; =============================================================================
000011DC                           413  ; CONSTANTS
000011DC                           414  ; =============================================================================
000011DC                           415  
000011DC                           416  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           417  
000011DC  =0000000E                418  INTTITX     EQU     14                      ; TITLE X COORDINATE
000011DC  =00000007                419  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                420  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000020                421  INTPRSX     EQU     32                      ; PRESS FIRE X COORDINATE
000011DC  =00000052                422  INTPRSY     EQU     82                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                423  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC                           424  
000011DC                           425  
000011DC                           426  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                427  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                428  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                429  STASPACE    EQU     1                       ; ESPERA EL ESPACIO PARA DISPARAR LA BOLA 
000011DC  =00000002                430  STAPLAY1    EQU     2                       ; NORMAL GAME STATE
000011DC  =00000003                431  STAPLAY2    EQU     3
000011DC  =00000004                432  STAPLAY3    EQU     4
000011DC  =00000005                433  STAGOVR     EQU     5                       ; GAME OVER STATE
000011DC                           434  ;----------------------------------------------------------------------------
000011DC                           435  
000011DC                           436  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           437  
000011DC  =00000012                438  GOVERX      EQU     18                      ; GAME OVER X COORDINATE
000011DC  =00000007                439  GOVERY      EQU     7                       ; GAME OVER Y COORDINATE
000011DC  =0000FFFF                440  GOVERC      EQU     $0000FFFF               ; GAME OVER COLOR
000011DC                           441  
000011DC                           442  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =00000201                443  SCRCTRL     EQU     513   
000011DC  =00000005                444  SCRLWIDTH   EQU     5
000011DC  =00000040                445  LIVEWIDTH   EQU     64
000011DC  =00000010                446  LIVEHEIGHT  EQU     16
000011DC  =000000FF                447  LIVECOLOR   EQU     $000000FF               ;ROJO
000011DC  =00000215                448  LIVEPOSX    EQU     SCRCTRL+20
000011DC  =0000001E                449  LIVEPOSY    EQU     30
000011DC                           450  
000011DC                           451  ;----------------------------------------------------------------------------
000011DC                           452  
000011DC                           453  
000011DC                           454  ; PLAYER --------------------------------------------------------------------
000011DC                           455  
000011DC  =00000040                456  PINWIDTH1    EQU     64                      ; PLAYER INITIAL WIDTH (PIXELS)
000011DC  =00000038                457  PINWIDTH2    EQU     56
000011DC  =00000030                458  PINWIDTH3    EQU     48
000011DC  =0000000C                459  PHEIGHT     EQU     12                      ; PLAYER HEIGHT (PIXELS)
000011DC  =00ECD59D                460  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011DC  =00000003                461  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011DC  =00000008                462  PMOVE       EQU     8                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011DC  =000001D0                463  PPOSY       EQU     SCRHEIGH-PHEIGHT-4      ;POSICION DE LA PLATAFORMA Y
000011DC  =000000E0                464  PINPOSX1     EQU     SCRCTRL/2-PINWIDTH1/2
000011DC  =000000E4                465  PINPOSX2     EQU     SCRCTRL/2-PINWIDTH2/2
000011DC  =000000E8                466  PINPOSX3     EQU     SCRCTRL/2-PINWIDTH3/2
000011DC  =00000032                467  PSCORETX     EQU    50                       ; SCORE X COORDINATE
000011DC  =00000004                468  PSCORETY     EQU    4                       ; SCORE Y COORDINATE
000011DC  =00FFFFFF                469  PSCORECOL   EQU     $00FFFFFF
000011DC                           470  ; ---------------------------------------------------------------------------
000011DC                           471  
000011DC                           472  ; BALL ----------------------------------------------------------------------
000011DC  =00000008                473  BHEIGHT     EQU     8                       ;ALTURA DE LA BOLA
000011DC  =00000008                474  BWIDTH      EQU     8                       ;ANCHURA DE LA BOLA
000011DC  =000000C8                475  BINPOSX     EQU     200                      ;POSICION DE LA PELOTA X INICIAL
000011DC  =000001C8                476  BINPOSY     EQU     PPOSY-BHEIGHT              ;POSICION DE LA PELOTA Y INICIAL
000011DC  =00000004                477  BINSPEED1   EQU     4                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011DC  =00000006                478  BINSPEED2   EQU     6
000011DC  =00000008                479  BINSPEED3   EQU     8
000011DC  =00FFFFFF                480  BINCOLOR    EQU     $00FFFFFF
000011DC                           481  
000011DC                           482  ; ---------------------------------------------------------------------------
000011DC                           483  
000011DC                           484  
000011DC                           485  ;BLOCKS-------------------------------------------------------------------------
000011DC  =00000040                486  BLWIDTH     EQU     64
000011DC  =00000010                487  BLHEIGHT     EQU     16
000011DC= 00F7E78E 004E8CF3 ...    488  COLORS      DC.L    BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE
0000120C  =0000000C                489  BLROW       EQU     12
0000120C  =00000008                490  BLCOL       EQU     8
0000120C                           491  
0000120C                           492  
0000120C                           493  ;-------------------------------------------------------------------------------
0000120C                           494  
0000120C                           495  ;COLORS-------------------------------------------------------------
0000120C  =004E8CF3                496  ORANGE      EQU     $004E8CF3
0000120C  =00F7E78E                497  BLUE        EQU     $00F7E78E
0000120C  =00FFACAC                498  PURPLE      EQU     $00FFACAC
0000120C  =0038EEF8                499  YELLOW      EQU     $0038EEF8
0000120C  =0095FF8C                500  GREEN       EQU     $0095FF8C
0000120C                           501  ;-------------------------------------------------------------------
0000120C                           502  
0000120C                           503  
0000120C                           504  
0000120C                           505  
0000120C                           506  
0000120C                           507  
0000120C                           508  
0000120C                           509  
0000120C                           510  
0000120C                           511  
0000120C                           512  
0000120C                           513  
0000120C                           514  
0000120C                           515  
0000120C                           516  
0000120C                           517  
0000120C                           518  
0000120C                           519  
0000120C                           520  -------------------- end include --------------------
0000120C                           521              INCLUDE "PLAYER.X68"            ;EL JUGADOR
0000120C                           522  ; -----------------------------------------------------------------------------
0000120C                           523  ;           PLAYER
0000120C                           524  ; -----------------------------------------------------------------------------
0000120C                           525  PLRINIT1
0000120C                           526  ; INITIALIZES THE PLAYER
0000120C                           527  ; INPUT    - NONE
0000120C                           528  ; OUTPUT   - NONE
0000120C                           529  ; MODIFIES - NONE
0000120C                           530  ; -----------------------------------------------------------------------------
0000120C                           531              
0000120C  33FC 00E0 00002584       532              MOVE.W  #PINPOSX1,PPOSX
00001214  33FC 0040 00002586       533              MOVE.W  #PINWIDTH1,PWIDTH
0000121C                           534            
0000121C  4E75                     535              RTS
0000121E                           536  
0000121E                           537  ; -----------------------------------------------------------------------------
0000121E                           538  PLRINIT2
0000121E                           539  ; INITIALIZES THE PLAYER
0000121E                           540  ; INPUT    - NONE
0000121E                           541  ; OUTPUT   - NONE
0000121E                           542  ; MODIFIES - NONE
0000121E                           543  ; -----------------------------------------------------------------------------
0000121E                           544              
0000121E  33FC 00E4 00002584       545              MOVE.W  #PINPOSX2,PPOSX
00001226  33FC 0038 00002586       546              MOVE.W  #PINWIDTH2,PWIDTH
0000122E                           547            
0000122E  4E75                     548              RTS
00001230                           549  ; -----------------------------------------------------------------------------
00001230                           550  PLRINIT3
00001230                           551  ; INITIALIZES THE PLAYER
00001230                           552  ; INPUT    - NONE
00001230                           553  ; OUTPUT   - NONE
00001230                           554  ; MODIFIES - NONE
00001230                           555  ; -----------------------------------------------------------------------------
00001230                           556              
00001230  33FC 00E8 00002584       557              MOVE.W  #PINPOSX3,PPOSX
00001238  33FC 0030 00002586       558              MOVE.W  #PINWIDTH3,PWIDTH
00001240                           559            
00001240  4E75                     560              RTS
00001242                           561  
00001242                           562  ; -----------------------------------------------------------------------------
00001242                           563  
00001242                           564  PLRUPD      
00001242  48E7 6000                565              MOVEM.L D1-D2,-(A7)
00001246  1239 000018D2            566              MOVE.B  KBDVAL,D1  
0000124C  E219                     567              ROR.B   #1,D1                   ;IZQUIERDA
0000124E  6400 0016                568              BCC     .RIGHTKEY               ;CUANDO C = 0
00001252                           569              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
00001252  3439 00002584            570              MOVE.W  PPOSX,D2
00001258  B47C 0000                571              CMP.W    #0,D2
0000125C  6F00 0008                572              BLE     .RIGHTKEY
00001260  5179 00002584            573              SUB.W   #PMOVE,(PPOSX)
00001266                           574  .RIGHTKEY
00001266  E209                     575              LSR.B   #1,D1                   
00001268  E219                     576              ROR.B   #1,D1                   
0000126A  6400 001C                577              BCC     .END
0000126E                           578              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
0000126E  3439 00002584            579              MOVE.W  PPOSX,D2
00001274  D479 00002586            580              ADD.W   PWIDTH,D2 
0000127A                           581  
0000127A  B47C 01FC                582              CMP.W    #SCRCTRL-SCRLWIDTH,D2
0000127E  6C00 0008                583              BGE     .END
00001282  5079 00002584            584              ADD.W   #PMOVE,PPOSX
00001288                           585  .END
00001288  4CDF 0006                586              MOVEM.L (A7)+,D1-D2
0000128C  4E75                     587              RTS
0000128E                           588  
0000128E                           589  
0000128E                           590  PPLOT
0000128E  48E7 FC00                591              MOVEM.L  D0-D5,-(A7)
00001292                           592              ;CONTOUR COLOR
00001292  223C 00ECD59D            593              MOVE.L  #PCOLOR,D1  
00001298  103C 0050                594              MOVE.B  #80,D0
0000129C  4E4F                     595              TRAP    #15
0000129E                           596      
0000129E                           597      
0000129E                           598               ;FILL COLOR
0000129E  C2BC 00ECD59D            599              AND.L   #PCOLOR,D1  
000012A4  103C 0051                600              MOVE.B  #81,D0
000012A8  4E4F                     601              TRAP    #15
000012AA                           602   
000012AA                           603  
000012AA                           604               ;SQUARE
000012AA  3A39 00002586            605              MOVE.W  PWIDTH,D5                     
000012B0  3639 00002584            606              MOVE.W  PPOSX,D3
000012B6  383C 01DC                607              MOVE.W  #PPOSY+PHEIGHT,D4
000012BA  D645                     608              ADD.W   D5,D3
000012BC                           609      
000012BC  3239 00002584            610              MOVE.W  PPOSX,D1
000012C2  343C 01D0                611              MOVE.W  #PPOSY,D2
000012C6                           612      
000012C6  303C 0057                613              MOVE.W  #87,D0
000012CA  4E4F                     614              TRAP    #15
000012CC                           615      
000012CC  4CDF 003F                616              MOVEM.L  (A7)+,D0-D5
000012D0                           617  
000012D0  4E75                     618              RTS
000012D2                           619      
000012D2                           620  
000012D2                           621  
000012D2                           622  
000012D2                           623  
000012D2                           624  
000012D2                           625  
000012D2                           626  
000012D2                           627  
000012D2                           628  
000012D2                           629  
000012D2                           630  
000012D2                           631  
000012D2                           632  
000012D2                           633  
000012D2                           634  
000012D2                           635  -------------------- end include --------------------
000012D2                           636              INCLUDE "STATES.X68"            ;
000012D2                           637  ; =============================================================================
000012D2                           638  ; GAME STATE MANAGEMENT
000012D2                           639  ; =============================================================================
000012D2                           640  
000012D2                           641  ; -----------------------------------------------------------------------------
000012D2                           642  STAINIT
000012D2                           643  ; INITALIZES THE STATE MANAGER
000012D2                           644  ; INPUT    - NONE
000012D2                           645  ; OUTPUT   - NONE
000012D2                           646  ; MODIFIES - NONE
000012D2                           647  ; -----------------------------------------------------------------------------
000012D2  33FC FFFF 00002580       648              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
000012DA                           649             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
000012DA  33FC 0000 00002582       650              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
000012E2  4E75                     651              RTS
000012E4                           652  
000012E4                           653  ; -----------------------------------------------------------------------------
000012E4                           654  STAUPD
000012E4                           655  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
000012E4                           656  ; INPUT    - NONE
000012E4                           657  ; OUTPUT   - NONE
000012E4                           658  ; MODIFIES - NONE
000012E4                           659  ; -----------------------------------------------------------------------------
000012E4  48E7 8080                660              MOVEM.L D0/A0,-(A7)
000012E8  4280                     661              CLR.L   D0
000012EA  3039 00002582            662              MOVE.W  (STANEXT),D0
000012F0  B079 00002580            663              CMP.W   (STACUR),D0
000012F6  6700 0012                664              BEQ     .DOUPD
000012FA  33C0 00002580            665              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
00001300  E588                     666              LSL.L   #2,D0
00001302  2040                     667              MOVE.L  D0,A0
00001304  2068 1322                668              MOVE.L  .INITBL(A0),A0
00001308  4E90                     669              JSR     (A0)
0000130A  4280                     670  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
0000130C  3039 00002580            671              MOVE.W  (STACUR),D0
00001312  E588                     672              LSL.L   #2,D0
00001314  2040                     673              MOVE.L  D0,A0
00001316  2068 1336                674              MOVE.L  .UPDTBL(A0),A0
0000131A  4E90                     675              JSR     (A0)
0000131C  4CDF 0101                676              MOVEM.L (A7)+,D0/A0
00001320  4E75                     677              RTS
00001322= 0000111A 00001384 ...    678  .INITBL     DC.L    STAINTRI,STAPLAYI1,STAPLAYI2,STAPLAYI3,STAEMPTY ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
00001336                           679                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
00001336                           680                                               ;EL 2 ES NO HACER NADA 
00001336= 000013EE 000013AE ...    681  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAPLAYU,STAPLAYU,STAGOVRU
0000134E                           682                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
0000134E                           683                                              ;EL 2 HACE QUE SE UPDATE 
0000134E                           684  
0000134E                           685  ; -----------------------------------------------------------------------------
0000134E                           686  STAPLOT
0000134E                           687  ; PERFORMS STATE PLOT
0000134E                           688  ; INPUT    - NONE
0000134E                           689  ; OUTPUT   - NONE
0000134E                           690  ; MODIFIES - NONE
0000134E                           691  ; -----------------------------------------------------------------------------
0000134E  48E7 8080                692              MOVEM.L D0/A0,-(A7)
00001352  4280                     693              CLR.L   D0
00001354  3039 00002580            694              MOVE.W  (STACUR),D0
0000135A  E588                     695              LSL.L   #2,D0
0000135C  2040                     696              MOVE.L  D0,A0
0000135E  2068 136A                697              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
00001362  4E90                     698              JSR     (A0)
00001364  4CDF 0101                699              MOVEM.L (A7)+,D0/A0
00001368  4E75                     700              RTS
0000136A= 00001418 000013D6 ...    701  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAPLAYP,STAPLAYP,STAGOVRP
00001382                           702                             ;SPACE      NIVEL1   NIVEL2    NIVEL3   
00001382                           703  
00001382                           704  ; -----------------------------------------------------------------------------
00001382                           705  STAEMPTY
00001382                           706  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
00001382                           707  ; INPUT    - NONE
00001382                           708  ; OUTPUT   - NONE
00001382                           709  ; MODIFIES - NONE
00001382                           710  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
00001382                           711  ; -----------------------------------------------------------------------------
00001382  4E75                     712              RTS
00001384                           713  
00001384                           714  ; -----------------------------------------------------------------------------
00001384                           715  STAPLAYI1    ;DEL NIVEL1
00001384                           716  
00001384                           717  ; PLAY STATE INITIALIZATION.
00001384                           718  ; INPUT    - NONE
00001384                           719  ; OUTPUT   - NONE
00001384                           720  ; MODIFIES - NONE
00001384                           721  ; NOTE     - JUST A WRAPPER FOR PLRINIT
00001384                           722  ; -----------------------------------------------------------------------------
00001384  4EB8 120C                723              JSR     PLRINIT1
00001388                           724              
00001388  4EB9 000014F0            725              JSR     BINIT1
0000138E  4E75                     726              RTS
00001390                           727  ; -----------------------------------------------------------------------------
00001390                           728  STAPLAYI2    ;DEL NIVEL2
00001390                           729  
00001390                           730  ; PLAY STATE INITIALIZATION.
00001390                           731  ; INPUT    - NONE
00001390                           732  ; OUTPUT   - NONE
00001390                           733  ; MODIFIES - NONE
00001390                           734  ; NOTE     - JUST A WRAPPER FOR PLRINIT
00001390                           735  ; -----------------------------------------------------------------------------
00001390  4EB9 00001794            736              JSR     BLINIT2
00001396  4EB8 121E                737              JSR     PLRINIT2
0000139A  4EB9 00001516            738              JSR     BINIT2
000013A0  4E75                     739              RTS
000013A2                           740  ; -----------------------------------------------------------------------------
000013A2                           741  STAPLAYI3    ;DEL NIVEL3
000013A2                           742  
000013A2                           743  ; PLAY STATE INITIALIZATION.
000013A2                           744  ; INPUT    - NONE
000013A2                           745  ; OUTPUT   - NONE
000013A2                           746  ; MODIFIES - NONE
000013A2                           747  ; NOTE     - JUST A WRAPPER FOR PLRINIT
000013A2                           748  ; -----------------------------------------------------------------------------
000013A2  4EB8 1230                749              JSR     PLRINIT3
000013A6  4EB9 0000153C            750              JSR     BINIT3
000013AC  4E75                     751              RTS          
000013AE                           752  
000013AE                           753  ; -----------------------------------------------------------------------------
000013AE                           754  STASPACEU
000013AE                           755  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
000013AE                           756  ; INPUT    - NONE
000013AE                           757  ; OUTPUT   - NONE
000013AE                           758  ; MODIFIES - NONE
000013AE                           759  ; -----------------------------------------------------------------------------
000013AE                           760             
000013AE  0839 0004 000018D3       761              BTST.B  #KBDBITF1,(KBDEDGE)
000013B6  6700 000A                762              BEQ     .END
000013BA  33FC 0002 00002582       763              MOVE.W  #STAPLAY1,(STANEXT)
000013C2                           764  .END        
000013C2  4E75                     765              RTS
000013C4                           766                               
000013C4                           767  
000013C4                           768  ; -----------------------------------------------------------------------------
000013C4                           769  STAPLAYU
000013C4                           770  ; PLAY STATE UPDATE
000013C4                           771  ; INPUT    - NONE
000013C4                           772  ; OUTPUT   - NONE
000013C4                           773  ; MODIFIES - NONE
000013C4                           774  ; -----------------------------------------------------------------------------
000013C4  4EB8 1242                775              JSR     PLRUPD
000013C8  4EB9 000017B4            776              JSR     BLUPD
000013CE  4EB9 00001562            777              JSR     BUPD                    
000013D4  4E75                     778              RTS
000013D6                           779  ; -----------------------------------------------------------------------------
000013D6                           780  STAPLAYP
000013D6                           781  ; PLAY STATE PLOT
000013D6                           782  ; INPUT    - NONE
000013D6                           783  ; OUTPUT   - NONE
000013D6                           784  ; MODIFIES - NONE
000013D6                           785  ; -----------------------------------------------------------------------------
000013D6  4EB9 00001846            786              JSR     BLPLOT
000013DC  4EB8 128E                787              JSR     PPLOT
000013E0  4EB9 00001672            788              JSR     BPLOT
000013E6  4EB9 000016B2            789              JSR     SCTRLPLOT
000013EC  4E75                     790              RTS
000013EE                           791  
000013EE                           792  ; -----------------------------------------------------------------------------
000013EE  =0000111A                793  STAINTRI    EQU     DMMINIT                 ;VACIA LA MEMORIA DEL JUEGO
000013EE                           794  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
000013EE                           795  
000013EE                           796  ; INTRO STATE INIT
000013EE                           797  ; INPUT    - NONE
000013EE                           798  ; OUTPUT   - NONE
000013EE                           799  ; MODIFIES - NONE
000013EE                           800  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
000013EE                           801  ; -----------------------------------------------------------------------------
000013EE                           802  
000013EE                           803  ; -----------------------------------------------------------------------------
000013EE                           804  STAINTRU
000013EE                           805  ; INTRO STATE UPDATE
000013EE                           806  ; INPUT    - NONE
000013EE                           807  ; OUTPUT   - NONE
000013EE                           808  ; MODIFIES - NONE
000013EE                           809  ; -----------------------------------------------------------------------------
000013EE  0839 0004 000018D3       810              BTST.B  #KBDBITF1,(KBDEDGE)
000013F6  6700 001E                811              BEQ     .END
000013FA  33FC 0001 00002582       812              MOVE.W  #STASPACE,(STANEXT)
00001402  33FC 0003 00002588       813              MOVE.W  #PINLIVE,PLIVES
0000140A  4279 0000258A            814              CLR.W   PSCORE
00001410  4EB9 00001770            815              JSR     BLINIT1
00001416                           816              
00001416  4E75                     817  .END        RTS
00001418                           818  
00001418                           819  ; -----------------------------------------------------------------------------
00001418                           820  STAINTRP
00001418                           821  ; INTRO STATE PLOT
00001418                           822  ; INPUT    - NONE
00001418                           823  ; OUTPUT   - NONE
00001418                           824  ; MODIFIES - NONE
00001418                           825  ; -----------------------------------------------------------------------------
00001418  48E7 C040                826              MOVEM.L A1/D0-D1,-(A7)
0000141C  323C 0E07                827              MOVE.W  #INTTITX<<8|INTTITY, D1 ;COORDENADAS DEL TEXTO TITULO
00001420  103C 000B                828              MOVE.B  #11,D0
00001424  4E4F                     829              TRAP    #15
00001426                           830              
00001426  223C 00DCAA7C            831              MOVE.L  #INTTITC,D1
0000142C  243C 00120001            832              MOVE.L  #18<<16|1,D2
00001432  103C 0015                833              MOVE.B  #21,D0
00001436  4E4F                     834              TRAP    #15
00001438                           835  
00001438  43F9 00001472            836              LEA     .TITSTR,A1              ;PONE EL TEXTO
0000143E  103C 000E                837              MOVE.B  #14,D0
00001442  4E4F                     838              TRAP    #15
00001444                           839  
00001444  323C 2052                840              MOVE.W  #INTPRSX<<8|INTPRSY, D1 ;COORDENADAS DEL TEXTO START
00001448  103C 000B                841              MOVE.B  #11,D0
0000144C  4E4F                     842              TRAP    #15
0000144E                           843              
0000144E  223C 00FFFFFF            844              MOVE.L  #INTPRSC,D1
00001454  243C 000A0001            845              MOVE.L  #10<<16|1,D2
0000145A  103C 0015                846              MOVE.B  #21,D0
0000145E  4E4F                     847              TRAP    #15
00001460                           848              
00001460  43F9 00001482            849              LEA     .PRSSTR,A1
00001466  103C 000E                850              MOVE.B  #14,D0
0000146A  4E4F                     851              TRAP    #15
0000146C  4CDF 0203                852              MOVEM.L (A7)+,A1/D0-D1
00001470  4E75                     853              RTS
00001472                           854  
00001472= 42 72 65 61 6B 69 ...    855  .TITSTR     DC.B    'Breaking Blocks',0
00001482= 50 55 53 48 20 46 ...    856  .PRSSTR     DC.B    'PUSH FIRE TO START',0
00001496                           857              DS.W    0
00001496                           858  
00001496                           859  ; -----------------------------------------------------------------------------
00001496                           860  STAGOVRU
00001496                           861  ; GAME OVER STATE UPDATE
00001496                           862  ; INPUT    - NONE
00001496                           863  ; OUTPUT   - NONE
00001496                           864  ; MODIFIES - NONE
00001496                           865  ; -----------------------------------------------------------------------------
00001496  0839 0004 000018D3       866              BTST.B  #KBDBITF1,(KBDEDGE)
0000149E  6700 000A                867              BEQ     .END
000014A2  33FC 0000 00002582       868              MOVE.W  #STAINTR,(STANEXT)
000014AA  4E75                     869  .END        RTS
000014AC                           870  
000014AC                           871  ; -----------------------------------------------------------------------------
000014AC                           872  STAGOVRP
000014AC                           873  ; GAME OVER STATE PLOT
000014AC                           874  ; INPUT    - NONE
000014AC                           875  ; OUTPUT   - NONE
000014AC                           876  ; MODIFIES - NONE
000014AC                           877  ; -----------------------------------------------------------------------------
000014AC                           878  
000014AC  48E7 C040                879              MOVEM.L A1/D0-D1,-(A7)
000014B0  323C 1207                880              MOVE.W  #GOVERX<<8|GOVERY, D1 ;COORDENADAS DEL TEXTO TITULO
000014B4  103C 000B                881              MOVE.B  #11,D0
000014B8  4E4F                     882              TRAP    #15
000014BA                           883              
000014BA  223C 0000FFFF            884              MOVE.L  #GOVERC,D1
000014C0  243C 00120001            885              MOVE.L  #18<<16|1,D2
000014C6  103C 0015                886              MOVE.B  #21,D0
000014CA  4E4F                     887              TRAP    #15
000014CC                           888              
000014CC  7200                     889              MOVE.L  #$00000000,D1
000014CE  103C 0051                890              MOVE.B  #81,D0
000014D2  4E4F                     891              TRAP    #15
000014D4                           892  
000014D4  43F9 000014E6            893              LEA     .GOVSTR,A1              ;PONE EL TEXTO
000014DA  103C 000E                894              MOVE.B  #14,D0
000014DE  4E4F                     895              TRAP    #15
000014E0                           896              
000014E0                           897  
000014E0  4CDF 0203                898              MOVEM.L (A7)+,A1/D0-D1
000014E4  4E75                     899              RTS
000014E6= 47 41 4D 45 20 4F ...    900  .GOVSTR     DC.B    'GAME OVER',0
000014F0                           901              DS.W    0
000014F0                           902  
000014F0                           903  
000014F0                           904  
000014F0                           905  
000014F0                           906  
000014F0                           907  
000014F0                           908  
000014F0                           909  
000014F0                           910  
000014F0                           911  
000014F0                           912  
000014F0                           913  
000014F0                           914  
000014F0                           915  
000014F0                           916  
000014F0                           917  
000014F0                           918  
000014F0                           919  -------------------- end include --------------------
000014F0                           920              INCLUDE "BALL.X68"              ;LA PELOTA
000014F0                           921  ; =============================================================================
000014F0                           922  ; BALL
000014F0                           923  ; =============================================================================
000014F0                           924  
000014F0                           925  BINIT1
000014F0  33FC 00C8 0000258E       926              MOVE.W  #BINPOSX,BPOSX
000014F8  33FC 01C6 00002590       927              MOVE.W  #BINPOSY-2,BPOSY  
00001500  33FC 0004 00002592       928              MOVE.W  #BINSPEED1,BSPEEDX
00001508  303C 0004                929              MOVE.W  #BINSPEED1,D0
0000150C  4440                     930              NEG.W   D0
0000150E  33C0 00002594            931              MOVE.W  D0,BSPEEDY
00001514  4E75                     932              RTS
00001516                           933  BINIT2
00001516  33FC 00C8 0000258E       934              MOVE.W  #BINPOSX,BPOSX
0000151E  33FC 01C6 00002590       935              MOVE.W  #BINPOSY-2,BPOSY  
00001526  33FC 0006 00002592       936              MOVE.W  #BINSPEED2,BSPEEDX
0000152E  303C 0006                937              MOVE.W  #BINSPEED2,D0
00001532  4440                     938              NEG.W   D0
00001534  33C0 00002594            939              MOVE.W  D0,BSPEEDY
0000153A  4E75                     940              RTS            
0000153C                           941              
0000153C                           942  BINIT3
0000153C  33FC 00C8 0000258E       943              MOVE.W  #BINPOSX,BPOSX
00001544  33FC 01C6 00002590       944              MOVE.W  #BINPOSY-2,BPOSY  
0000154C  33FC 0008 00002592       945              MOVE.W  #BINSPEED3,BSPEEDX
00001554  303C 0008                946              MOVE.W  #BINSPEED3,D0
00001558  4440                     947              NEG.W   D0
0000155A  33C0 00002594            948              MOVE.W  D0,BSPEEDY
00001560  4E75                     949              RTS            
00001562                           950              
00001562                           951              
00001562                           952              
00001562                           953              
00001562                           954  BUPD        
00001562  48E7 F000                955              MOVEM.L D0-D3,-(A7)
00001566                           956              
00001566                           957              ;COMPROBAMOS COLISIÓN CON PARED DE ARRIBA
00001566  3239 00002590            958              MOVE.W  BPOSY,D1
0000156C  B27C 0000                959              CMP.W   #0,D1
00001570  6E00 0008                960              BGT     .LEFT
00001574  4479 00002594            961              NEG.W   BSPEEDY
0000157A                           962              
0000157A                           963              ;COMPROBAMOS COLISIÓN CON LA PARED DE ABAJO
0000157A  3239 0000258E            964  .LEFT       MOVE.W  BPOSX,D1                ;CHOQUE IZQUIERDA
00001580  B27C 0000                965              CMP.W    #0,D1                 
00001584  6E00 0008                966              BGT     .RIGHT     
00001588  4479 00002592            967              NEG.W   BSPEEDX
0000158E                           968              
0000158E                           969              ;COMPROBAMOS COLISIÓN CON LA PARED DE LA DERECHA
0000158E                           970  .RIGHT     
0000158E  3239 0000258E            971              MOVE.W  BPOSX,D1
00001594  343C 0201                972              MOVE.W  #SCRCTRL,D2
00001598  5041                     973              ADD.W   #BWIDTH,D1
0000159A  B242                     974              CMP.W    D2,D1
0000159C  6D00 0008                975              BLT     .PLRY
000015A0  4479 00002592            976              NEG.W   BSPEEDX
000015A6                           977  
000015A6                           978  .PLRY
000015A6  3239 00002590            979              MOVE.W  BPOSY,D1
000015AC  5041                     980              ADD.W   #BWIDTH,D1
000015AE  343C 01D0                981              MOVE.W  #PPOSY,D2               ;D2-D1
000015B2  B441                     982              CMP.W   D1,D2                   ;SI LA Y SE CORRESPONDE
000015B4  6E00 009E                983              BGT     .END                    ;SI LA BPOSY+WIDHT ES MAYOR QUE PPOSY,
000015B8                           984              
000015B8                           985           
000015B8                           986  .PLRXLEFT   
000015B8                           987              
000015B8  3239 0000258E            988              MOVE.W  BPOSX,D1
000015BE  5041                     989              ADD.W   #BWIDTH,D1
000015C0  3439 00002584            990              MOVE.W  PPOSX,D2
000015C6  B441                     991              CMP.W   D1,D2                   ;MIRAMOS EL IZQUIERDO
000015C8  6C00 0058                992              BGE     .DOWN
000015CC                           993              
000015CC                           994  .PLRXMIDDLE 
000015CC  3639 00002586            995              MOVE.W  PWIDTH,D3
000015D2  E24B                     996              LSR.W   #1,D3
000015D4  D443                     997              ADD.W   D3,D2
000015D6  B441                     998              CMP.W   D1,D2                   ;CENTRO - POS PEL
000015D8  6F00 001E                999              BLE     .PLRXRIGHT
000015DC                          1000             
000015DC  4479 00002594           1001              NEG.W   BSPEEDY
000015E2                          1002              
000015E2  3239 00002592           1003              MOVE.W  BSPEEDX,D1
000015E8  6B00 006A               1004              BMI     .END
000015EC  4479 00002592           1005              NEG.W   BSPEEDX
000015F2  4EF9 00001654           1006              JMP     .END
000015F8                          1007              
000015F8                          1008  .PLRXRIGHT 
000015F8  3239 0000258E           1009              MOVE.W  BPOSX,D1           
000015FE  D443                    1010              ADD.W   D3,D2                   ;COMPARAMOS EL LADO IZQ DE LA PLATAFORMA
00001600  B441                    1011              CMP.W   D1,D2                   ;EL DERECHO
00001602  6F00 001E               1012              BLE     .DOWN                   
00001606  4479 00002594           1013              NEG.W   BSPEEDY
0000160C                          1014              
0000160C  3239 00002592           1015              MOVE.W  BSPEEDX,D1
00001612  6A00 000E               1016              BPL     .DOWN              ;SI ES POSITIVO SOLO NEGAMOS Y
00001616  4479 00002592           1017              NEG.W   BSPEEDX
0000161C  4EF9 00001654           1018              JMP     .END
00001622                          1019  
00001622                          1020  
00001622                          1021  .DOWN       
00001622  3239 00002590           1022              MOVE.W  BPOSY,D1
00001628  5041                    1023              ADD.W   #BHEIGHT,D1
0000162A  B27C 01E0               1024              CMP.W   #SCRHEIGH,D1
0000162E  6D00 0024               1025              BLT     .END
00001632  33FC 0001 00002582      1026              MOVE.W  #STASPACE,(STANEXT)
0000163A  3039 00002588           1027              MOVE.W  PLIVES,D0
00001640  5340                    1028              SUB.W   #1,D0
00001642  33C0 00002588           1029              MOVE.W  D0,PLIVES
00001648                          1030             
00001648  6600 000A               1031              BNE     .END
0000164C                          1032              ;UTLSND  .SOUND
0000164C  33FC 0005 00002582      1033              MOVE.W   #STAGOVR,(STANEXT)
00001654                          1034  .END            
00001654                          1035  
00001654  3039 00002592           1036              MOVE.W  BSPEEDX,D0
0000165A  D179 0000258E           1037              ADD.W   D0,BPOSX
00001660                          1038              
00001660  3239 00002594           1039              MOVE.W  BSPEEDY,D1
00001666  D379 00002590           1040              ADD.W   D1,BPOSY
0000166C                          1041  
0000166C  4CDF 000F               1042              MOVEM.L (A7)+,D0-D3
00001670                          1043              
00001670  4E75                    1044              RTS
00001672                          1045  
00001672                          1046  ;.SOUND      DC.L    'blocks.wav',0
00001672                          1047  BPLOT       
00001672  48E7 FC00               1048              MOVEM.L  D0-D5,-(A7)
00001676                          1049              ;CONTOUR COLOR
00001676  223C 00FFFFFF           1050              MOVE.L  #BINCOLOR,D1  
0000167C  103C 0050               1051              MOVE.B  #80,D0
00001680  4E4F                    1052              TRAP    #15
00001682                          1053      
00001682                          1054               ;FILL COLOR
00001682  223C 00FFFFFF           1055              MOVE.L   #BINCOLOR,D1  
00001688  103C 0051               1056              MOVE.B  #81,D0
0000168C  4E4F                    1057              TRAP    #15
0000168E                          1058   
0000168E                          1059              ;CIRCLE
0000168E                          1060  
0000168E  3A3C 0008               1061              MOVE.W  #BWIDTH,D5 
00001692                          1062      
00001692  3639 0000258E           1063              MOVE.W  BPOSX,D3
00001698  3839 00002590           1064              MOVE.W  BPOSY,D4
0000169E  3203                    1065              MOVE.W  D3,D1
000016A0  3404                    1066              MOVE.W  D4,D2
000016A2                          1067              
000016A2  D845                    1068              ADD.W   D5,D4
000016A4  D645                    1069              ADD.W   D5,D3
000016A6                          1070      
000016A6                          1071  
000016A6  103C 0058               1072              MOVE.B  #88,D0
000016AA  4E4F                    1073              TRAP    #15
000016AC                          1074      
000016AC  4CDF 003F               1075              MOVEM.L  (A7)+,D0-D5
000016B0                          1076  
000016B0  4E75                    1077              RTS
000016B2                          1078  
000016B2                          1079  
000016B2                          1080  
000016B2                          1081  
000016B2                          1082  
000016B2                          1083  
000016B2                          1084  
000016B2                          1085  
000016B2                          1086  
000016B2                          1087  
000016B2                          1088  
000016B2                          1089  
000016B2                          1090  
000016B2                          1091  
000016B2                          1092  
000016B2                          1093  
000016B2                          1094  
000016B2                          1095  -------------------- end include --------------------
000016B2                          1096              INCLUDE "SCTRL.X68"             ;CONTROL SCREEN
000016B2                          1097  ;--------------------------------------------------------------------------
000016B2                          1098  ;SCREEN CONTROL
000016B2                          1099  ;--------------------------------------------------------------------------
000016B2                          1100  
000016B2                          1101  
000016B2                          1102  SCTRLPLOT
000016B2  48E7 FC40               1103              MOVEM.L D0-D5/A1,-(A7)       
000016B6                          1104              
000016B6                          1105              ;DIBUJA LA BARRA DE SEPARACIÓN
000016B6  223C 00FFFFFF           1106              MOVE.L  #$00FFFFFF,D1  ;COLOR
000016BC  103C 0050               1107              MOVE.B  #80,D0
000016C0  4E4F                    1108              TRAP    #15
000016C2                          1109              
000016C2  C2BC 00FFFFFF           1110              AND.L   #$00FFFFFF,D1  ;COLOR
000016C8  103C 0051               1111              MOVE.B  #81,D0
000016CC  4E4F                    1112              TRAP    #15
000016CE                          1113              
000016CE  103C 0057               1114              MOVE.B  #87,D0
000016D2  323C 0201               1115              MOVE.W  #SCRCTRL,D1
000016D6  363C 0206               1116              MOVE.W  #SCRCTRL+SCRLWIDTH,D3
000016DA  4282                    1117              CLR.L   D2
000016DC  383C 01E0               1118              MOVE.W  #SCRHEIGH,D4
000016E0  4E4F                    1119              TRAP    #15
000016E2                          1120              
000016E2                          1121              ;VIDAS
000016E2                          1122              
000016E2  223C 00FFFFFF           1123              MOVE.L  #$00FFFFFF,D1  ;COLOR
000016E8  103C 0050               1124              MOVE.B  #80,D0
000016EC  4E4F                    1125              TRAP    #15
000016EE                          1126              
000016EE  C2BC 000000FF           1127              AND.L   #LIVECOLOR,D1  ;COLOR
000016F4  103C 0051               1128              MOVE.B  #81,D0
000016F8  4E4F                    1129              TRAP    #15
000016FA  3A39 00002588           1130              MOVE.W  PLIVES,D5
00001700  6700 0028               1131              BEQ     .END
00001704  5345                    1132              SUB.W   #1,D5                   ;DBRA 
00001706                          1133              
00001706  103C 0057               1134              MOVE.B  #87,D0
0000170A  323C 0215               1135              MOVE.W  #LIVEPOSX,D1
0000170E  3601                    1136              MOVE.W  D1,D3
00001710  0643 0040               1137              ADD.W   #LIVEWIDTH,D3
00001714  343C 001E               1138              MOVE.W  #LIVEPOSY,D2
00001718  3802                    1139              MOVE.W  D2,D4
0000171A  0644 0010               1140              ADD.W   #LIVEHEIGHT,D4
0000171E                          1141  .LOOP           
0000171E  4E4F                    1142              TRAP    #15
00001720  3203                    1143              MOVE.W  D3,D1
00001722  0643 0040               1144              ADD.W   #LIVEWIDTH,D3
00001726  51CD FFF6               1145              DBRA    D5,.LOOP
0000172A                          1146  .END
0000172A                          1147              ;SCORE
0000172A                          1148              
0000172A                          1149  
0000172A  323C 3204               1150              MOVE.W  #PSCORETX<<8|PSCORETY, D1 ;COORDENADAS DEL TEXTO TITULO
0000172E  103C 000B               1151              MOVE.B  #11,D0
00001732  4E4F                    1152              TRAP    #15
00001734                          1153              
00001734  223C 00FFFFFF           1154              MOVE.L  #PSCORECOL,D1           ;PENCOLOR Y TAMAÑO
0000173A  243C 00100001           1155              MOVE.L  #16<<16|1,D2
00001740  103C 0015               1156              MOVE.B  #21,D0
00001744  4E4F                    1157              TRAP    #15
00001746                          1158              
00001746  7200                    1159              MOVE.L  #$00000000,D1           ;COLOR FONDO
00001748  103C 0051               1160              MOVE.B  #81,D0
0000174C  4E4F                    1161              TRAP    #15
0000174E                          1162  
0000174E  43F9 00001768           1163              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
00001754  4281                    1164              CLR.L   D1
00001756  3239 0000258A           1165              MOVE.W  PSCORE,D1
0000175C  103C 0011               1166              MOVE.B  #17,D0
00001760  4E4F                    1167              TRAP    #15
00001762                          1168              
00001762                          1169  
00001762  4CDF 023F               1170              MOVEM.L (A7)+,D0-D5/A1
00001766  4E75                    1171              RTS   
00001768                          1172  
00001768                          1173  
00001768= 53 43 4F 52 45 3A ...   1174  .TXTSCORE   DC.B    'SCORE: ',0
00001770                          1175              DS.W    0
00001770                          1176  
00001770                          1177  -------------------- end include --------------------
00001770                          1178              INCLUDE "UTIL.X68"
00001770                          1179  ;-------------------------
00001770                          1180  ; UTIL
00001770                          1181  ;---------------------------
00001770                          1182  
00001770                          1183  
00001770                          1184  ; -----------------------------------------------------------------------------
00001770                          1185  UTLSND     MACRO
00001770                          1186  ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001770                          1187  ; INPUT    - \1 ADDRESS TO STRING WITH NAME OF THE FILE
00001770                          1188  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001770                          1189  ; MODIFIES - D0,A1
00001770                          1190  ; -----------------------------------------------------------------------------
00001770                          1191              LEA     \1, A1             ;PLAY EXPLOSION SOUND
00001770                          1192              MOVE.L  #73,D0
00001770                          1193              TRAP    #15
00001770                          1194              ENDM
00001770                          1195  -------------------- end include --------------------
00001770                          1196              INCLUDE  "BLOCKS.X68"           ;BLOQUES
00001770                          1197  ;-----------------------------------------------------------
00001770                          1198  ;           BLOCKS
00001770                          1199  ;-----------------------------------------------------------
00001770                          1200    
00001770                          1201  BLINIT1
00001770  48E7 8080               1202              MOVEM.L D0/A0,-(A7)
00001774  41F9 0000259A           1203              LEA.L   BLMATRIX,A0
0000177A  303C 000B               1204              MOVE.W  #BLROW-1,D0             ;7
0000177E                          1205  .LOOP       
0000177E  10FC 00FF               1206              MOVE.B  #%11111111,(A0)+
00001782  51C8 FFFA               1207              DBRA    D0,.LOOP
00001786  33FC 0060 00002598      1208              MOVE.W  #BLROW*BLCOL,BLCOUNTER
0000178E                          1209              
0000178E  4CDF 0101               1210              MOVEM.L (A7)+,D0/A0
00001792  4E75                    1211              RTS
00001794                          1212              
00001794                          1213              
00001794                          1214  BLINIT2
00001794  48E7 8080               1215              MOVEM.L D0/A0,-(A7)
00001798  41F9 0000259A           1216              LEA.L   BLMATRIX,A0
0000179E  303C 000A               1217              MOVE.W  #BLROW-2,D0             ;7
000017A2                          1218         
000017A2  10FC 0000               1219              MOVE.B  #%000000000,(A0)+
000017A6                          1220  .LOOP            
000017A6  10FC 00AA               1221              MOVE.B  #%010101010,(A0)+
000017AA                          1222             
000017AA  51C8 FFFA               1223              DBRA    D0,.LOOP
000017AE                          1224  
000017AE                          1225              ;MOVE.W  #BLROW*BLCOL,BLCOUNTER
000017AE                          1226              ;MOVE.W  #5,BLCOUNTER
000017AE  4CDF 0101               1227              MOVEM.L (A7)+,D0/A0
000017B2  4E75                    1228              RTS
000017B4                          1229              
000017B4                          1230              
000017B4                          1231  BLUPD       
000017B4  48E7 F080               1232              MOVEM.L D0-D3/A0,-(A7)
000017B8  3039 0000258E           1233              MOVE.W BPOSX,D0
000017BE  3239 00002590           1234              MOVE.W  BPOSY,D1
000017C4  5840                    1235              ADD.W #BWIDTH/2,D0              ;D0 -> POSICIÓN CENTRAL X DE LA BOLA
000017C6  E889                    1236              LSR.L  #4,D1                    ;BPOSY/BLHEIGHT. D1 -> FILA EN LA QUE ESTA LA BOLA
000017C8  343C 000B               1237              MOVE.W  #BLROW-1,D2
000017CC  B441                    1238              CMP.W   D1,D2                   ;SI ESTÁ POR DEBAJO DE LA ÚLTIMA FILA SALTA DIRECTO A END
000017CE  6D00 0050               1239              BLT     .END                    
000017D2  41F9 0000259A           1240              LEA.L   BLMATRIX,A0
000017D8  D1C1                    1241              ADDA.L  D1,A0                   ;CARGAMOS EN A0 LA DIRECCIÓN DEL BYTE DE LA FILA
000017DA                          1242              
000017DA                          1243                                              ;OBTENEMOS EN QUE COLUMNA ESTA
000017DA  EC88                    1244              LSR.L  #6,D0                    ;D0 -> COLUMNA EN LA QUE ESTÁ LA BOLA
000017DC  363C 0007               1245              MOVE.W  #BLCOL-1,D3             ;LAS COMPROBACIONES EMPIEZAN DESDE LA DERECHA              
000017E0  9640                    1246              SUB.W   D0,D3                   ;D3 -> COLUMNA (DESDE DRCHA) DONDE ESTÁ LA BOLA
000017E2  0710                    1247              BTST.B  D3,(A0)                 ;MIRAMOS EL BIT DONDE ESTA 
000017E4  6700 003A               1248              BEQ     .END                    ;SALTA SI EN ESA POSICION YA HABIA UN 0
000017E8  5241                    1249              ADDI.W  #1,D1
000017EA  E989                    1250              LSL.L   #4,D1
000017EC  3039 00002594           1251              MOVE.W  BSPEEDY,D0
000017F2  6B00 0006               1252              BMI     .DOWNBL
000017F6  0441 0018               1253              SUB.W   #BLHEIGHT+BHEIGHT,D1
000017FA                          1254  .DOWNBL
000017FA  33C1 00002590           1255              MOVE.W  D1,BPOSY                ;CORRECION DE LA BPOSY
00001800  4479 00002594           1256              NEG.W   BSPEEDY
00001806  0790                    1257              BCLR    D3,(A0)
00001808  5379 00002598           1258              SUB.W   #1,BLCOUNTER
0000180E                          1259m             UTLSND  .SOUND
0000180E                          1260m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000180E                          1261m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE
0000180E                          1262m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000180E                          1263m ; MODIFIES - D0,A1
0000180E                          1264m ; -----------------------------------------------------------------------------
00001818  0679 0064 0000258A      1265              ADD.W   #100,PSCORE
00001820                          1266              
00001820                          1267          
00001820                          1268              
00001820                          1269  ;;;ANDREA: EL RECTANGULO 7 ES EL 0, EL 6 EL 1, EL 5 EL 2...
00001820                          1270              
00001820                          1271  
00001820                          1272  .END        
00001820  3039 00002598           1273              MOVE.W  BLCOUNTER,D0
00001826  6600 0008               1274              BNE     .END2
0000182A                          1275              
0000182A  5279 00002582           1276              ADD.W   #1,STANEXT
00001830                          1277              
00001830                          1278  .END2            
00001830  4CDF 010F               1279              MOVEM.L (A7)+,D0-D3/A0
00001834  4E75                    1280              RTS     
00001836= 626C6F63 6B732E77 ...   1281  .SOUND      DC.L    'blocks.wav',0
00001846                          1282              
00001846                          1283  BLPLOT
00001846  48E7 FFC0               1284              MOVEM.L D0-D7/A0-A1,-(A7)
0000184A  103C 0050               1285              MOVE.B  #80,D0                  ;SET PEN COLOR
0000184E  7200                    1286              MOVE.L  #0,D1
00001850  4E4F                    1287              TRAP    #15
00001852                          1288              
00001852  4242                    1289              CLR.W   D2                      ;UPPER Y
00001854  383C 0010               1290              MOVE.W  #BLHEIGHT,D4            ;DOWN Y
00001858  41F8 11DC               1291              LEA     COLORS,A0
0000185C                          1292              
0000185C  3A3C 000B               1293              MOVE.W  #BLROW-1,D5    ;DBRA
00001860  227C 00000000           1294              MOVE.L  #0,A1                      ;PARA SABER CUAL PONER D6= FILA
00001866                          1295              
00001866                          1296  
00001866                          1297              
00001866                          1298  .LOOP2                                      ;BUCLE DE FILAS
00001866                          1299   
00001866  103C 0051               1300              MOVE.B  #81,D0                  ;SET COLOR
0000186A  2218                    1301              MOVE.L  (A0)+,D1
0000186C  4E4F                    1302              TRAP    #15
0000186E                          1303                                        ;BUCLE FILAS
0000186E                          1304              
0000186E  363C 0040               1305              MOVE.W  #BLWIDTH,D3             ;RIGHT X
00001872  4241                    1306              CLR.W   D1                      ;LEFT X
00001874                          1307              
00001874  3F05                    1308              MOVE.W  D5,-(A7)                ;GUARDO EL VALOR DEL DECREMENTO DE LOOP2
00001876  3A3C 0007               1309              MOVE.W  #BLCOL-1,D5
0000187A  1C29 259A               1310              MOVE.B  BLMATRIX(A1),D6
0000187E                          1311  .LOOP1                                      ; BUCLE COLUMNAS
0000187E                          1312             
0000187E  E31E                    1313              ROL.B   #1,D6
00001880  6400 0008               1314              BCC     .SALTO                  ; SALTA SI CARRY = 0
00001884                          1315              
00001884  103C 0057               1316              MOVE.B  #87,D0                  ; DIBUJAMOS EL CUADRADO
00001888  4E4F                    1317              TRAP    #15
0000188A                          1318  .SALTO
0000188A  3203                    1319              MOVE.W  D3,D1
0000188C  0643 0040               1320              ADD.W   #BLWIDTH, D3
00001890  5247                    1321              ADDI.W  #1,D7
00001892  51CD FFEA               1322              DBRA    D5,.LOOP1 
00001896  3A1F                    1323              MOVE.W  (A7)+,D5              
00001898                          1324  
00001898  5249                    1325              ADDA.W  #1,A1
0000189A  3404                    1326              MOVE.W  D4,D2
0000189C  0644 0010               1327              ADD.W   #BLHEIGHT,D4
000018A0  51CD FFC4               1328              DBRA    D5,.LOOP2
000018A4  4CDF 03FF               1329              MOVEM.L (A7)+,D0-D7/A0-A1
000018A8  4E75                    1330              RTS
000018AA                          1331  
000018AA                          1332  
000018AA                          1333  
000018AA                          1334  
000018AA                          1335  
000018AA                          1336  
000018AA                          1337  
000018AA                          1338  
000018AA                          1339  
000018AA                          1340  
000018AA                          1341  
000018AA                          1342  
000018AA                          1343  
000018AA                          1344  -------------------- end include --------------------
000018AA                          1345  
000018AA                          1346  ; --- INITIALIZE --------------------------------------------------------------
000018AA                          1347              
000018AA  4EB8 1000               1348  START       JSR     SYSINIT
000018AE                          1349              ; TO DO: CALL GAME INITIALIZATION CODE HERE
000018AE  4EB8 12D2               1350              JSR     STAINIT                 ;INICIA LAS PANTALLAS            
000018B2                          1351              
000018B2                          1352  ; --- UPDATE ------------------------------------------------------------------
000018B2                          1353  
000018B2  4E40                    1354  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
000018B4                          1355                                              ; UPDATE DEPENDING ON THE STATE
000018B4                          1356              ; TO DO: CALL GAME UPDATE CODE HERE
000018B4  4EB8 12E4               1357              JSR     STAUPD
000018B8                          1358  
000018B8                          1359  ; --- WAIT SYNCH --------------------------------------------------------------
000018B8                          1360  
000018B8  4A39 000018D4           1361  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
000018BE  67F8                    1362              BEQ     .WINT
000018C0                          1363              
000018C0  4239 000018D4           1364              CLR.B   (SCRINTCT)
000018C6                          1365  
000018C6                          1366  ; --- PLOT --------------------------------------------------------------------
000018C6                          1367              
000018C6                          1368              ; TO DO: CALL GAME PLOT CODE HERE
000018C6  4EB8 134E               1369              JSR     STAPLOT
000018CA                          1370  
000018CA  4E41                    1371              TRAP    #SCRTRAP                ; SHOW GRAPHICS
000018CC  60E4                    1372              BRA     .LOOP
000018CE  FFFF FFFF               1373              SIMHALT
000018D2                          1374  
000018D2                          1375  ; --- VARIABLES ---------------------------------------------------------------
000018D2                          1376  
000018D2                          1377              INCLUDE "SYSVAR.X68"
000018D2                          1378  ; =============================================================================
000018D2                          1379  ; SYSTEM VARS
000018D2                          1380  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
000018D2                          1381  ; THEY MUST NOT BE IN PROTECTED MEMORY.
000018D2                          1382  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
000018D2                          1383  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
000018D2                          1384  ; THIS IS GOOD ENOUGH.
000018D2                          1385  ; =============================================================================
000018D2                          1386  
000018D2                          1387  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
000018D2                          1388  
000018D2                          1389  KBDVAL      DS.B    1                       ; KEY PRESSED=1
000018D3                          1390  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
000018D4                          1391  
000018D4                          1392              DS.W    0
000018D4                          1393  
000018D4                          1394  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
000018D4                          1395  
000018D4                          1396  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
000018D5                          1397  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
000018D6                          1398              DS.W    0
000018D6                          1399  
000018D6                          1400  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
000018D6                          1401  
00001900                          1402              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001900                          1403  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002580                          1404              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002580                          1405  
00002580                          1406  
00002580                          1407  
00002580                          1408  -------------------- end include --------------------
00002580                          1409              INCLUDE "VAR.X68"
00002580                          1410  ; =============================================================================
00002580                          1411  ; GAME VARS
00002580                          1412  ; =============================================================================
00002580                          1413  
00002580                          1414  ; TO DO: DECLARE GAME VARIABLES HERE.
00002580                          1415  
00002580                          1416  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
00002580                          1417  
00002580                          1418  STACUR      DS.W    1                       ; CURRENT GAME STATE
00002582                          1419  STANEXT     DS.W    1                       ; NEXT GAME STATE
00002584                          1420  ;----------------------------------------------------------------------------
00002584                          1421  
00002584                          1422  ; PLAYER --------------------------------------------------------------------
00002584                          1423  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
00002586                          1424  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
00002588                          1425  PLIVES      DS.W    1                       ;LIVES LEFT
0000258A                          1426  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
0000258C                          1427  PSPEED      DS.W    1
0000258E                          1428  ;----------------------------------------------------------------------------
0000258E                          1429  
0000258E                          1430  ; BALL ----------------------------------------------------------------------
0000258E                          1431  BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
00002590                          1432  BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
00002592                          1433  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
00002594                          1434  BSPEEDY     DS.W    1
00002596                          1435  BCOLOR      DS.W    1
00002598                          1436  
00002598                          1437  ; BLOCKS --------------------------------------------------------------------
00002598                          1438  BLCOUNTER   DS.W    1
0000259A                          1439  BLMATRIX    DS.B    12  ;12*8
000025A6                          1440              DS.W    0
000025A6                          1441              
000025A6                          1442  
000025A6                          1443  
000025A6                          1444  
000025A6                          1445  
000025A6                          1446  
000025A6                          1447  -------------------- end include --------------------
000025A6                          1448              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              2596
BHEIGHT             8
BINCOLOR            FFFFFF
BINIT1              14F0
BINIT2              1516
BINIT3              153C
BINPOSX             C8
BINPOSY             1C8
BINSPEED1           4
BINSPEED2           6
BINSPEED3           8
BLCOL               8
BLCOUNTER           2598
BLHEIGHT            10
BLINIT1             1770
BLINIT1:LOOP        177E
BLINIT2             1794
BLINIT2:LOOP        17A6
BLMATRIX            259A
BLPLOT              1846
BLPLOT:LOOP1        187E
BLPLOT:LOOP2        1866
BLPLOT:SALTO        188A
BLROW               C
BLUE                F7E78E
BLUPD               17B4
BLUPD:DOWNBL        17FA
BLUPD:END           1820
BLUPD:END2          1830
BLUPD:SOUND         1836
BLWIDTH             40
BPLOT               1672
BPOSX               258E
BPOSY               2590
BSPEEDX             2592
BSPEEDY             2594
BUPD                1562
BUPD:DOWN           1622
BUPD:END            1654
BUPD:LEFT           157A
BUPD:PLRXLEFT       15B8
BUPD:PLRXMIDDLE     15CC
BUPD:PLRXRIGHT      15F8
BUPD:PLRY           15A6
BUPD:RIGHT          158E
BWIDTH              8
COLORS              11DC
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1900
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
GOVERC              FFFF
GOVERX              12
GOVERY              7
GREEN               95FF8C
INTPRSC             FFFFFF
INTPRSX             20
INTPRSY             52
INTTITC             DCAA7C
INTTITX             E
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             18D3
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              18D2
LIVECOLOR           FF
LIVEHEIGHT          10
LIVEPOSX            215
LIVEPOSY            1E
LIVEWIDTH           40
ORANGE              4E8CF3
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX1            E0
PINPOSX2            E4
PINPOSX3            E8
PINWIDTH1           40
PINWIDTH2           38
PINWIDTH3           30
PLIVES              2588
PLRINIT1            120C
PLRINIT2            121E
PLRINIT3            1230
PLRUPD              1242
PLRUPD:END          1288
PLRUPD:RIGHTKEY     1266
PMOVE               8
PPLOT               128E
PPOSX               2584
PPOSY               1D0
PSCORE              258A
PSCORECOL           FFFFFF
PSCORETX            32
PSCORETY            4
PSPEED              258C
PURPLE              FFACAC
PWIDTH              2586
SCRCTRL             201
SCRCYCCT            18D5
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            18D4
SCRIRQ              1
SCRISR              107E
SCRLWIDTH           5
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            2E4
SCTRLPLOT           16B2
SCTRLPLOT:END       172A
SCTRLPLOT:LOOP      171E
SCTRLPLOT:TXTSCORE  1768
STACUR              2580
STAEMPTY            1382
STAGOVR             5
STAGOVRP            14AC
STAGOVRP:GOVSTR     14E6
STAGOVRU            1496
STAGOVRU:END        14AA
STAINIT             12D2
STAINTR             0
STAINTRI            111A
STAINTRP            1418
STAINTRP:PRSSTR     1482
STAINTRP:TITSTR     1472
STAINTRU            13EE
STAINTRU:END        1416
STANEXT             2582
STANONE             FFFFFFFF
STAPLAY1            2
STAPLAY2            3
STAPLAY3            4
STAPLAYI1           1384
STAPLAYI2           1390
STAPLAYI3           13A2
STAPLAYP            13D6
STAPLAYU            13C4
STAPLOT             134E
STAPLOT:PLTTBL      136A
START               18AA
START:LOOP          18B2
START:WINT          18B8
STASPACE            1
STASPACEU           13AE
STASPACEU:END       13C2
STAUPD              12E4
STAUPD:DOUPD        130A
STAUPD:INITBL       1322
STAUPD:UPDTBL       1336
SYSINIT             1000
UTLSND              0
YELLOW              38EEF8
