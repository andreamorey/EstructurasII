000016F6 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 17/12/2019 2:37:15

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION : 
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8              
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =000002E4                 81  SCRWIDTH    EQU     740                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  
00001000                            93  -------------------- end include --------------------
00001000                            94              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            95  ; =============================================================================
00001000                            96  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            97  ; =============================================================================
00001000                            98  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101  ; INITIALIZES THE SYSTEM
00001000                           102  ; INPUT    - NONE
00001000                           103  ; OUTPUT   - NONE
00001000                           104  ; MODIFIES - NONE
00001000                           105  ; -----------------------------------------------------------------------------
00001000  205F                     106              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            107              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            108              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            109              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                110              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     111              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     112              RTS
0000101C                           113  
0000101C                           114  ; =============================================================================
0000101C                           115  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           116  ; =============================================================================
0000101C                           117  
0000101C                           118  ; -----------------------------------------------------------------------------
0000101C                           119  SCRINIT
0000101C                           120  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           121  ; INPUT    - NONE
0000101C                           122  ; OUTPUT   - NONE
0000101C                           123  ; MODIFIES - D0,D1,D2,D3
0000101C                           124  ; -----------------------------------------------------------------------------
0000101C                           125              ; TO DO:
0000101C                           126              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                127              ORI.W   #$0700,SR
00001020                           128              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           129              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       130              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           131              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                132              MOVE.B  #33,D0
0000102C  223C 02E401E0            133              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     134              TRAP    #15
00001034                           135              ; - SET WINDOWED MODE
00001034  7201                     136              MOVE.L  #1,D1
00001036  4E4F                     137              TRAP    #15
00001038                           138              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                139              MOVE.B  #11,D0
0000103C  323C FF00                140              MOVE.W  #$FF00,D1
00001040  4E4F                     141              TRAP    #15
00001042                           142              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                143              MOVE.B  #92,D0
00001046  123C 0011                144              MOVE.B  #17,D1
0000104A  4E4F                     145              TRAP    #15
0000104C                           146              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     147              MOVE.L  #11,D0
0000104E  323C FF00                148              MOVE.W  #$FF00,D1
00001052  4E4F                     149              TRAP    #15
00001054                           150              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           151              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       152              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           153              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           154              ;   TASK 32)
0000105C  103C 0020                155              MOVE.B  #32,D0
00001060  123C 0006                156              MOVE.B  #6,D1
00001064                           157         
00001064  143C 0081                158              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     159              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     160              TRAP    #15
0000106C                           161              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 00001720            162              CLR.B   SCRINTCT
00001072  4239 00001721            163              CLR.B   SCRCYCCT
00001078                           164              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                165              ANDI.W  #$F8FF,SR
0000107C  4E75                     166              RTS
0000107E                           167  
0000107E                           168  ; -----------------------------------------------------------------------------
0000107E                           169  SCRISR
0000107E                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           171  ; INPUT    - NONE
0000107E                           172  ; OUTPUT   - NONE
0000107E                           173  ; MODIFIES - NONE
0000107E                           174  ; -----------------------------------------------------------------------------
0000107E  5239 00001720            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 00001721            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     177              RTE
0000108C                           178  
0000108C                           179  ; -----------------------------------------------------------------------------
0000108C                           180  SCRUPD
0000108C                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           182  ; BUFFER FOR THE NEXT ONE.
0000108C                           183  ; INPUT    - NONE
0000108C                           184  ; OUTPUT   - NONE
0000108C                           185  ; MODIFIES - NONE
0000108C                           186  ; -----------------------------------------------------------------------------
0000108C                           187              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                188              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                189              MOVE.B  #94,D0
00001094  4E4F                     190              TRAP    #15
00001096  103C 000B                191              MOVE.B  #11,D0
0000109A  323C FF00                192              MOVE.W  #$FF00,D1
0000109E  4E4F                     193              TRAP    #15
000010A0  4CDF 0003                194              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     195              RTE
000010A6                           196  
000010A6                           197  ; =============================================================================
000010A6                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           199  ; =============================================================================
000010A6                           200  
000010A6                           201  ; -----------------------------------------------------------------------------
000010A6                           202  KBDINIT
000010A6                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           204  ; INPUT    - NONE
000010A6                           205  ; OUTPUT   - NONE
000010A6                           206  ; MODIFIES - NONE
000010A6                           207  ; -----------------------------------------------------------------------------
000010A6  4239 0000171E            208              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 0000171F            209              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     211              RTS
000010BC                           212  
000010BC                           213  ; -----------------------------------------------------------------------------
000010BC                           214  KBDREAD
000010BC                           215  ; TRAP SERVICE ROUTINE.
000010BC                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           219  ; INPUT    - NONE
000010BC                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           221  ; MODIFIES - NONE
000010BC                           222  ; -----------------------------------------------------------------------------
000010BC                           223              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                224              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                225              MOVE.B  #19,D0
000010C4                           226              
000010C4  223C 50104D20            227              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     228              TRAP    #15
000010CC                           229          
000010CC  4202                     230              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                231              MOVE.W  #3,D4
000010D2                           232              
000010D2                           233  .LOOP1      
000010D2                           234       
000010D2  E189                     235              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     236              MOVE.W  SR,D3                   
000010D6  0243 0001                237              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     238              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     239              OR.B    D3,D2                   
000010DE  51CC FFF2                240              DBRA    D4,.LOOP1
000010E2                           241          
000010E2                           242              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           243              
000010E2  223C 28272625            244              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     245              TRAP    #15
000010EA                           246              
000010EA  383C 0003                247              MOVE.W  #3,D4
000010EE                           248  .LOOP2      
000010EE  E189                     249              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     250              MOVE.W  SR,D3
000010F2  0243 0001                251              ANDI.W  #$0001,D3    
000010F6  E30A                     252              LSL.B   #1,D2
000010F8  8403                     253              OR.B    D3,D2
000010FA                           254              
000010FA  51CC FFF2                255              DBRA    D4,.LOOP2
000010FE                           256              
000010FE                           257              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           258              
000010FE                           259              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 0000171E            260              MOVE.B  KBDVAL,D3
00001104  4603                     261              NOT.B   D3
00001106  13C2 0000171E            262              MOVE.B  D2,KBDVAL
0000110C  C602                     263              AND.B   D2,D3
0000110E  13C3 0000171F            264              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                265              MOVEM.L (A7)+,D0-D4
00001118  4E73                     266              RTE
0000111A                           267  
0000111A                           268  ; =============================================================================
0000111A                           269  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           270  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           271  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           272  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           273  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           274  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           275  ; =============================================================================
0000111A                           276  
0000111A                           277  ; -----------------------------------------------------------------------------
0000111A                           278  DMMINIT
0000111A                           279  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           280  ; INPUT    - NONE
0000111A                           281  ; OUTPUT   - NONE
0000111A                           282  ; MODIFIES - NONE
0000111A                           283  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                284              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001740            285              LEA     DMMDATA,A0
00001124  303C 0031                286              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                287  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            288              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                289              DBRA.W  D0,.LOOP
00001136  4CDF 0101                290              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     291              RTS
0000113C                           292  
0000113C                           293  ; -----------------------------------------------------------------------------
0000113C                           294  DMMFIRST
0000113C                           295  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           296  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           297  ; INPUT    - NONE
0000113C                           298  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           299  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           300  ; -----------------------------------------------------------------------------
0000113C  41F9 00001740            301              LEA     DMMDATA,A0
00001142  4A58                     302  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                303              BNE     DMMFRFND
00001148  D1FC 0000003E            304              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 000023BF            305  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     306              BLT     DMMFRLOP
00001156  207C 00000000            307              MOVE.L  #0,A0
0000115C  4E75                     308  DMMFRFND    RTS
0000115E                           309  
0000115E                           310  ; -----------------------------------------------------------------------------
0000115E                           311  DMMNEXT
0000115E                           312  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           313  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           314  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           315  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           316  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           317  ; -----------------------------------------------------------------------------
0000115E  2F00                     318              MOVE.L  D0,-(A7)
00001160  2008                     319              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            320              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            321              ADD.L   #DMMBSIZE,D0
0000116E  2040                     322              MOVE.L  D0,A0
00001170  201F                     323              MOVE.L  (A7)+,D0
00001172  60DA                     324              BRA     DMMFRCOM
00001174                           325  
00001174                           326  ; -----------------------------------------------------------------------------
00001174                           327  DMMFRSTO
00001174                           328  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           329  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           330  ; INPUT    - D0.W : ID TO SEARCH
00001174                           331  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           332  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           333  ; -----------------------------------------------------------------------------
00001174  41F9 00001740            334              LEA     DMMDATA,A0
0000117A  B058                     335  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                336              BEQ     DMMFFND
00001180  D1FC 0000003E            337              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 000023BF            338  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     339              BLT     DMMFLOOP
0000118E  207C 00000000            340              MOVE.L  #0,A0
00001194  4E75                     341  DMMFFND     RTS
00001196                           342  
00001196                           343  ; -----------------------------------------------------------------------------
00001196                           344  DMMNEXTO
00001196                           345  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           346  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           347  ; INPUT    - D0.W : ID TO SEARCH
00001196                           348  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           351  ; -----------------------------------------------------------------------------
00001196  2F00                     352              MOVE.L  D0,-(A7)
00001198  2008                     353              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011A6  2040                     356              MOVE.L  D0,A0
000011A8  201F                     357              MOVE.L  (A7)+,D0
000011AA  60DA                     358              BRA     DMMFCOM
000011AC                           359  
000011AC                           360  ; -----------------------------------------------------------------------------
000011AC                           361  DMMALLOC
000011AC                           362  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           363  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           364  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           367  ; -----------------------------------------------------------------------------
000011AC  3F00                     368              MOVE.W  D0,-(A7)
000011AE  4240                     369              CLR.W   D0
000011B0  4EB8 1174                370              JSR     DMMFRSTO
000011B4  301F                     371              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            372              CMP.L   #0,A0
000011BC  6700 0006                373              BEQ     .END
000011C0  3140 FFFE                374              MOVE.W  D0,-2(A0)
000011C4  4E75                     375  .END        RTS
000011C6                           376  
000011C6                           377  ; -----------------------------------------------------------------------------
000011C6                           378  DMMFREE
000011C6                           379  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           380  ; SYSTEM (0)
000011C6                           381  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           382  ; OUTPUT   - NONE
000011C6                           383  ; MODIFIES - NONE
000011C6                           384  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                385              MOVEM.L D0/A0,-(A7)
000011CA  2008                     386              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            387              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     388              MOVE.L  D0,A0
000011D4  4250                     389              CLR.W   (A0)
000011D6  4CDF 0101                390              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     391              RTS
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  
000011DC                           407  
000011DC                           408  
000011DC                           409  -------------------- end include --------------------
000011DC                           410              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           411  ; =============================================================================
000011DC                           412  ; CONSTANTS
000011DC                           413  ; =============================================================================
000011DC                           414  
000011DC                           415  ; --- PLAYER RELATED CONSTANTS ------------------------------------------------
000011DC                           416  
000011DC                           417  
000011DC                           418  
000011DC                           419  
000011DC                           420  
000011DC                           421  ;PLRINIEN    EQU     500                     ; PLAYER INITIAL ENERGY (<SCRWIDTH)
000011DC                           422  ;PLRSPEED    EQU     7                       ; PLAYER SPEED (PIXELS PER INT)
000011DC                           423  
000011DC                           424  ;PLRDMGCL    EQU     $00FFFFFF               ; PLAYER DAMAGED COLOR
000011DC                           425  ;PLRTXTCL    EQU     $00FFFFFF               ; FONT COLOR
000011DC                           426  ;PLRTXTX     EQU     65                       ; SCORE X COORDINATE
000011DC                           427  ;PLRTXTY     EQU     10                       ; SCORE Y COORDINATE
000011DC                           428  ;PLRLIFEH    EQU     20                      ; HEIGHT OF LIFE BAR
000011DC                           429  ;PLRLIFEY    EQU     SCRHEIGH-PLRLIFEH*2     ; LIFE BAR Y POS
000011DC                           430  ;PLRLIFEC    EQU     $000000FF               ; LIFE BAR COLOR
000011DC                           431  ;PLRUMDMG    EQU     %00000001               ; UPDATE DAMAGE MASK
000011DC                           432  ;PLRPMDMG    EQU     %00000010               ; PLOT DAMAGE MASK
000011DC                           433  ;PLRUBDMG    EQU     0                       ; UPDATE DAMAGE BIT
000011DC                           434  ;PLRPBDMG    EQU     1                       ; PLOT DAMAGE BIT
000011DC                           435  
000011DC                           436  
000011DC                           437  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           438  
000011DC  =0000000E                439  INTTITX     EQU     14                      ; TITLE X COORDINATE
000011DC  =00000007                440  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                441  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000020                442  INTPRSX     EQU     32                      ; PRESS FIRE X COORDINATE
000011DC  =00000052                443  INTPRSY     EQU     82                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                444  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC                           445  
000011DC                           446  
000011DC                           447  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                448  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                449  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                450  STASPACE    EQU     1                       ; ESPERA EL ESPACIO PARA DISPARAR LA BOLA 
000011DC  =00000002                451  STAPLAY     EQU     2                       ; NORMAL GAME STATE
000011DC  =00000003                452  STAGOVR     EQU     3                       ; GAME OVER STATE
000011DC                           453  ;----------------------------------------------------------------------------
000011DC                           454  
000011DC                           455  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           456  
000011DC  =00000010                457  GOVERX      EQU     16                      ; GAME OVER X COORDINATE
000011DC  =00000007                458  GOVERY      EQU     7                       ; GAME OVER Y COORDINATE
000011DC  =0000FFFF                459  GOVERC      EQU     $0000FFFF               ; GAME OVER COLOR
000011DC                           460  
000011DC                           461  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =00000200                462  SCRCTRL     EQU     512   ;
000011DC                           463  ;----------------------------------------------------------------------------
000011DC                           464  
000011DC                           465  
000011DC                           466  ; PLAYER --------------------------------------------------------------------
000011DC                           467  
000011DC  =00000040                468  PINWIDTH    EQU     64                      ; PLAYER INITIAL WIDTH (PIXELS)
000011DC  =0000000C                469  PHEIGHT     EQU     12                      ; PLAYER HEIGHT (PIXELS)
000011DC  =00ECD59D                470  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011DC  =00000003                471  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011DC  =00000008                472  PMOVE       EQU     8                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011DC  =000001D0                473  PPOSY       EQU     SCRHEIGH-PHEIGHT-4      ;POSICION DE LA PLATAFORMA Y
000011DC  =000000E0                474  PINPOSX     EQU     SCRCTRL/2-PINWIDTH/2
000011DC                           475  ; ---------------------------------------------------------------------------
000011DC                           476  
000011DC                           477  ; BALL ----------------------------------------------------------------------
000011DC  =00000008                478  BHEIGHT     EQU     8                       ;ALTURA DE LA BOLA
000011DC  =00000008                479  BWIDTH      EQU     8                       ;ANCHURA DE LA BOLA
000011DC  =000000F8                480  BINPOSX     EQU     PINPOSX+PINWIDTH/2-BWIDTH                      ;POSICION DE LA PELOTA X INICIAL
000011DC  =000001C8                481  BINPOSY     EQU     PPOSY-BHEIGHT              ;POSICION DE LA PELOTA Y INICIAL
000011DC  =00000004                482  BINSPEED    EQU     4                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011DC  =00FFFFFF                483  BINCOLOR    EQU     $00FFFFFF
000011DC                           484  
000011DC                           485  ; ---------------------------------------------------------------------------
000011DC                           486  
000011DC                           487  
000011DC                           488  ;BLOCKS-------------------------------------------------------------------------
000011DC  =00000040                489  BLWIDTH     EQU     64
000011DC  =00000010                490  BLHEIGHT     EQU     16
000011DC= 00F7E78E 004E8CF3 ...    491  COLORS      DC.L    BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE
0000120C  =0000000C                492  BLROW       EQU     12
0000120C  =00000008                493  BLCOL       EQU     8
0000120C                           494  
0000120C                           495  
0000120C                           496  ;-------------------------------------------------------------------------------
0000120C                           497  
0000120C                           498  ;COLORS-------------------------------------------------------------
0000120C  =004E8CF3                499  ORANGE      EQU     $004E8CF3
0000120C  =00F7E78E                500  BLUE        EQU     $00F7E78E
0000120C  =00FFACAC                501  PURPLE      EQU     $00FFACAC
0000120C  =0038EEF8                502  YELLOW      EQU     $0038EEF8
0000120C  =0095FF8C                503  GREEN       EQU     $0095FF8C
0000120C                           504  ;-------------------------------------------------------------------
0000120C                           505  
0000120C                           506  
0000120C                           507  
0000120C                           508  
0000120C                           509  
0000120C                           510  
0000120C                           511  
0000120C                           512  
0000120C                           513  
0000120C                           514  
0000120C                           515  
0000120C                           516  
0000120C                           517  
0000120C                           518  -------------------- end include --------------------
0000120C                           519              INCLUDE "PLAYER.X68"            ;EL JUGADOR
0000120C                           520  ; -----------------------------------------------------------------------------
0000120C                           521  ;           PLAYER
0000120C                           522  ; -----------------------------------------------------------------------------
0000120C                           523  PLRINIT
0000120C                           524  ; INITIALIZES THE PLAYER
0000120C                           525  ; INPUT    - NONE
0000120C                           526  ; OUTPUT   - NONE
0000120C                           527  ; MODIFIES - NONE
0000120C                           528  ; -----------------------------------------------------------------------------
0000120C                           529              
0000120C  33FC 00E0 000023C4       530              MOVE.W  #PINPOSX,PPOSX
00001214  33FC 0040 000023C6       531              MOVE.W  #PINWIDTH,PWIDTH
0000121C  33FC 0003 000023C8       532              MOVE.W  #PINLIVE,PLIVES
00001224  4279 000023CA            533              CLR.W   PSCORE
0000122A                           534             
0000122A  4E75                     535              RTS
0000122C                           536  
0000122C                           537  
0000122C                           538  ; -----------------------------------------------------------------------------
0000122C                           539  
0000122C                           540  PLRUPD      
0000122C  48E7 6000                541              MOVEM.L D1-D2,-(A7)
00001230                           542              
00001230                           543              
00001230  1239 0000171E            544              MOVE.B  KBDVAL,D1  
00001236  E219                     545              ROR.B   #1,D1                   ;IZQUIERDA
00001238  6400 0016                546              BCC     .RIGHTKEY                  ;CUANDO C = 0
0000123C                           547              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
0000123C  3439 000023C4            548              MOVE.W  PPOSX,D2
00001242  B47C 0000                549              CMP.W    #0,D2
00001246  6F00 0008                550              BLE     .RIGHTKEY
0000124A  5179 000023C4            551              SUB.W   #PMOVE,(PPOSX)
00001250                           552  .RIGHTKEY
00001250  E209                     553              LSR.B   #1,D1                   ;NO NOS IMPORTA EL DE ARRIBA
00001252  E219                     554              ROR.B   #1,D1                   ;
00001254  6400 001C                555              BCC     .END
00001258                           556              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
00001258  3439 000023C4            557              MOVE.W  PPOSX,D2
0000125E  D479 000023C6            558              ADD.W   PWIDTH,D2 
00001264                           559  
00001264  B47C 0200                560              CMP.W    #SCRCTRL,D2
00001268  6C00 0008                561              BGE     .END
0000126C  5079 000023C4            562              ADD.W   #PMOVE,PPOSX
00001272                           563  .END
00001272  4CDF 0006                564              MOVEM.L (A7)+,D1-D2
00001276  4E75                     565              RTS
00001278                           566  
00001278                           567  
00001278                           568  PPLOT
00001278  48E7 FC00                569              MOVEM.L  D0-D5,-(A7)
0000127C                           570              ;CONTOUR COLOR
0000127C  223C 00ECD59D            571              MOVE.L  #PCOLOR,D1  
00001282  103C 0050                572              MOVE.B  #80,D0
00001286  4E4F                     573              TRAP    #15
00001288                           574      
00001288                           575      
00001288                           576               ;FILL COLOR
00001288  C2BC 00ECD59D            577              AND.L   #PCOLOR,D1  
0000128E  103C 0051                578              MOVE.B  #81,D0
00001292  4E4F                     579              TRAP    #15
00001294                           580   
00001294                           581  
00001294                           582               ;SQUARE
00001294  3A39 000023C6            583              MOVE.W  PWIDTH,D5                     
0000129A  3639 000023C4            584              MOVE.W  PPOSX,D3
000012A0  383C 01DC                585              MOVE.W  #PPOSY+PHEIGHT,D4
000012A4  D645                     586              ADD.W   D5,D3
000012A6                           587      
000012A6  3239 000023C4            588              MOVE.W  PPOSX,D1
000012AC  343C 01D0                589              MOVE.W  #PPOSY,D2
000012B0                           590      
000012B0  303C 0057                591              MOVE.W  #87,D0
000012B4  4E4F                     592              TRAP    #15
000012B6                           593      
000012B6  4CDF 003F                594              MOVEM.L  (A7)+,D0-D5
000012BA                           595  
000012BA  4E75                     596              RTS
000012BC                           597      
000012BC                           598  
000012BC                           599  
000012BC                           600  
000012BC                           601  
000012BC                           602  
000012BC                           603  
000012BC                           604  
000012BC                           605  
000012BC                           606  
000012BC                           607  
000012BC                           608  -------------------- end include --------------------
000012BC                           609              INCLUDE "STATES.X68"            ;
000012BC                           610  ; =============================================================================
000012BC                           611  ; GAME STATE MANAGEMENT
000012BC                           612  ; =============================================================================
000012BC                           613  
000012BC                           614  ; -----------------------------------------------------------------------------
000012BC                           615  STAINIT
000012BC                           616  ; INITALIZES THE STATE MANAGER
000012BC                           617  ; INPUT    - NONE
000012BC                           618  ; OUTPUT   - NONE
000012BC                           619  ; MODIFIES - NONE
000012BC                           620  ; -----------------------------------------------------------------------------
000012BC  33FC FFFF 000023C0       621              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
000012C4                           622             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
000012C4  33FC 0000 000023C2       623              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
000012CC  4E75                     624              RTS
000012CE                           625  
000012CE                           626  ; -----------------------------------------------------------------------------
000012CE                           627  STAUPD
000012CE                           628  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
000012CE                           629  ; INPUT    - NONE
000012CE                           630  ; OUTPUT   - NONE
000012CE                           631  ; MODIFIES - NONE
000012CE                           632  ; -----------------------------------------------------------------------------
000012CE  48E7 8080                633              MOVEM.L D0/A0,-(A7)
000012D2  4280                     634              CLR.L   D0
000012D4  3039 000023C2            635              MOVE.W  (STANEXT),D0
000012DA  B079 000023C0            636              CMP.W   (STACUR),D0
000012E0  6700 0012                637              BEQ     .DOUPD
000012E4  33C0 000023C0            638              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
000012EA  E588                     639              LSL.L   #2,D0
000012EC  2040                     640              MOVE.L  D0,A0
000012EE  2068 130C                641              MOVE.L  .INITBL(A0),A0
000012F2  4E90                     642              JSR     (A0)
000012F4  4280                     643  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
000012F6  3039 000023C0            644              MOVE.W  (STACUR),D0
000012FC  E588                     645              LSL.L   #2,D0
000012FE  2040                     646              MOVE.L  D0,A0
00001300  2068 1318                647              MOVE.L  .UPDTBL(A0),A0
00001304  4E90                     648              JSR     (A0)
00001306  4CDF 0101                649              MOVEM.L (A7)+,D0/A0
0000130A  4E75                     650              RTS
0000130C= 0000111A 00001356 ...    651  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTY     ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
00001318                           652                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
00001318                           653                                               ;EL 2 ES NO HACER NADA 
00001318= 000013A8 00001368 ...    654  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAGOVRU
00001328                           655                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
00001328                           656                                              ;EL 2 HACE QUE SE UPDATE 
00001328                           657  
00001328                           658  ; -----------------------------------------------------------------------------
00001328                           659  STAPLOT
00001328                           660  ; PERFORMS STATE PLOT
00001328                           661  ; INPUT    - NONE
00001328                           662  ; OUTPUT   - NONE
00001328                           663  ; MODIFIES - NONE
00001328                           664  ; -----------------------------------------------------------------------------
00001328  48E7 8080                665              MOVEM.L D0/A0,-(A7)
0000132C  4280                     666              CLR.L   D0
0000132E  3039 000023C0            667              MOVE.W  (STACUR),D0
00001334  E588                     668              LSL.L   #2,D0
00001336  2040                     669              MOVE.L  D0,A0
00001338  2068 1344                670              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
0000133C  4E90                     671              JSR     (A0)
0000133E  4CDF 0101                672              MOVEM.L (A7)+,D0/A0
00001342  4E75                     673              RTS
00001344= 000013BE 00001390 ...    674  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAGOVRP
00001354                           675                                               ; EL 0 ES DIBUJAR LA PANTALLA DE INICIO
00001354                           676  
00001354                           677  ; -----------------------------------------------------------------------------
00001354                           678  STAEMPTY
00001354                           679  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
00001354                           680  ; INPUT    - NONE
00001354                           681  ; OUTPUT   - NONE
00001354                           682  ; MODIFIES - NONE
00001354                           683  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
00001354                           684  ; -----------------------------------------------------------------------------
00001354  4E75                     685              RTS
00001356                           686  
00001356                           687  ; -----------------------------------------------------------------------------
00001356                           688  STAPLAYI    
00001356                           689  ; PLAY STATE INITIALIZATION.
00001356                           690  ; INPUT    - NONE
00001356                           691  ; OUTPUT   - NONE
00001356                           692  ; MODIFIES - NONE
00001356                           693  ; NOTE     - JUST A WRAPPER FOR PLRINIT
00001356                           694  ; -----------------------------------------------------------------------------
00001356  4EB8 120C                695              JSR     PLRINIT
0000135A  4EB9 00001496            696              JSR     BINIT
00001360  4EB9 00001630            697              JSR     BLINIT
00001366  4E75                     698              RTS
00001368                           699              
00001368                           700  ; -----------------------------------------------------------------------------
00001368                           701  STASPACEU
00001368                           702  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
00001368                           703  ; INPUT    - NONE
00001368                           704  ; OUTPUT   - NONE
00001368                           705  ; MODIFIES - NONE
00001368                           706  ; -----------------------------------------------------------------------------
00001368                           707             
00001368  0839 0004 0000171F       708              BTST.B  #KBDBITF1,(KBDEDGE)
00001370  6700 000A                709              BEQ     .END
00001374  33FC 0002 000023C2       710              MOVE.W  #STAPLAY,(STANEXT)
0000137C                           711  .END        
0000137C  4E75                     712              RTS
0000137E                           713                               
0000137E                           714  
0000137E                           715  ; -----------------------------------------------------------------------------
0000137E                           716  STAPLAYU
0000137E                           717  ; PLAY STATE UPDATE
0000137E                           718  ; INPUT    - NONE
0000137E                           719  ; OUTPUT   - NONE
0000137E                           720  ; MODIFIES - NONE
0000137E                           721  ; -----------------------------------------------------------------------------
0000137E  4EB8 122C                722              JSR     PLRUPD
00001382  4EB9 0000164C            723              JSR     BLUPD
00001388  4EB9 000014C2            724              JSR     BUPD                    
0000138E  4E75                     725              RTS
00001390                           726  ; -----------------------------------------------------------------------------
00001390                           727  STAPLAYP
00001390                           728  ; PLAY STATE PLOT
00001390                           729  ; INPUT    - NONE
00001390                           730  ; OUTPUT   - NONE
00001390                           731  ; MODIFIES - NONE
00001390                           732  ; -----------------------------------------------------------------------------
00001390  4EB9 00001692            733              JSR     BLPLOT
00001396  4EB8 1278                734              JSR     PPLOT
0000139A  4EB9 000015B8            735              JSR     BPLOT
000013A0  4EB9 000015F8            736              JSR     SCTRLINIT
000013A6  4E75                     737              RTS
000013A8                           738  
000013A8                           739  ; -----------------------------------------------------------------------------
000013A8  =0000111A                740  STAINTRI    EQU     DMMINIT                 ;VACIA LA MEMORIA DEL JUEGO
000013A8                           741  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
000013A8                           742  
000013A8                           743  ; INTRO STATE INIT
000013A8                           744  ; INPUT    - NONE
000013A8                           745  ; OUTPUT   - NONE
000013A8                           746  ; MODIFIES - NONE
000013A8                           747  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
000013A8                           748  ; -----------------------------------------------------------------------------
000013A8                           749  
000013A8                           750  ; -----------------------------------------------------------------------------
000013A8                           751  STAINTRU
000013A8                           752  ; INTRO STATE UPDATE
000013A8                           753  ; INPUT    - NONE
000013A8                           754  ; OUTPUT   - NONE
000013A8                           755  ; MODIFIES - NONE
000013A8                           756  ; -----------------------------------------------------------------------------
000013A8  0839 0004 0000171F       757              BTST.B  #KBDBITF1,(KBDEDGE)
000013B0  6700 000A                758              BEQ     .END
000013B4  33FC 0001 000023C2       759              MOVE.W  #STASPACE,(STANEXT)
000013BC  4E75                     760  .END        RTS
000013BE                           761  
000013BE                           762  ; -----------------------------------------------------------------------------
000013BE                           763  STAINTRP
000013BE                           764  ; INTRO STATE PLOT
000013BE                           765  ; INPUT    - NONE
000013BE                           766  ; OUTPUT   - NONE
000013BE                           767  ; MODIFIES - NONE
000013BE                           768  ; -----------------------------------------------------------------------------
000013BE  48E7 C040                769              MOVEM.L A1/D0-D1,-(A7)
000013C2  323C 0E07                770              MOVE.W  #INTTITX<<8|INTTITY, D1 ;COORDENADAS DEL TEXTO TITULO
000013C6  103C 000B                771              MOVE.B  #11,D0
000013CA  4E4F                     772              TRAP    #15
000013CC                           773              
000013CC  223C 00DCAA7C            774              MOVE.L  #INTTITC,D1
000013D2  243C 00120001            775              MOVE.L  #18<<16|1,D2
000013D8  103C 0015                776              MOVE.B  #21,D0
000013DC  4E4F                     777              TRAP    #15
000013DE                           778  
000013DE  43F9 00001418            779              LEA     .TITSTR,A1              ;PONE EL TEXTO
000013E4  103C 000E                780              MOVE.B  #14,D0
000013E8  4E4F                     781              TRAP    #15
000013EA                           782  
000013EA  323C 2052                783              MOVE.W  #INTPRSX<<8|INTPRSY, D1 ;COORDENADAS DEL TEXTO START
000013EE  103C 000B                784              MOVE.B  #11,D0
000013F2  4E4F                     785              TRAP    #15
000013F4                           786              
000013F4  223C 00FFFFFF            787              MOVE.L  #INTPRSC,D1
000013FA  243C 000A0001            788              MOVE.L  #10<<16|1,D2
00001400  103C 0015                789              MOVE.B  #21,D0
00001404  4E4F                     790              TRAP    #15
00001406                           791              
00001406  43F9 00001428            792              LEA     .PRSSTR,A1
0000140C  103C 000E                793              MOVE.B  #14,D0
00001410  4E4F                     794              TRAP    #15
00001412  4CDF 0203                795              MOVEM.L (A7)+,A1/D0-D1
00001416  4E75                     796              RTS
00001418                           797  
00001418= 42 72 65 61 6B 69 ...    798  .TITSTR     DC.B    'Breaking Blocks',0
00001428= 50 55 53 48 20 46 ...    799  .PRSSTR     DC.B    'PUSH FIRE TO START',0
0000143C                           800              DS.W    0
0000143C                           801  
0000143C                           802  ; -----------------------------------------------------------------------------
0000143C                           803  STAGOVRU
0000143C                           804  ; GAME OVER STATE UPDATE
0000143C                           805  ; INPUT    - NONE
0000143C                           806  ; OUTPUT   - NONE
0000143C                           807  ; MODIFIES - NONE
0000143C                           808  ; -----------------------------------------------------------------------------
0000143C  0839 0004 0000171F       809              BTST.B  #KBDBITF1,(KBDEDGE)
00001444  6700 000A                810              BEQ     .END
00001448  33FC 0000 000023C2       811              MOVE.W  #STAINTR,(STANEXT)
00001450  4E75                     812  .END        RTS
00001452                           813  
00001452                           814  ; -----------------------------------------------------------------------------
00001452                           815  STAGOVRP
00001452                           816  ; GAME OVER STATE PLOT
00001452                           817  ; INPUT    - NONE
00001452                           818  ; OUTPUT   - NONE
00001452                           819  ; MODIFIES - NONE
00001452                           820  ; -----------------------------------------------------------------------------
00001452                           821  
00001452  48E7 C040                822              MOVEM.L A1/D0-D1,-(A7)
00001456  323C 1007                823              MOVE.W  #GOVERX<<8|GOVERY, D1 ;COORDENADAS DEL TEXTO TITULO
0000145A  103C 000B                824              MOVE.B  #11,D0
0000145E  4E4F                     825              TRAP    #15
00001460                           826              
00001460  223C 0000FFFF            827              MOVE.L  #GOVERC,D1
00001466  243C 00120001            828              MOVE.L  #18<<16|1,D2
0000146C  103C 0015                829              MOVE.B  #21,D0
00001470  4E4F                     830              TRAP    #15
00001472                           831              
00001472  7200                     832              MOVE.L  #$00000000,D1
00001474  103C 0051                833              MOVE.B  #81,D0
00001478  4E4F                     834              TRAP    #15
0000147A                           835  
0000147A  43F9 0000148C            836              LEA     .GOVSTR,A1              ;PONE EL TEXTO
00001480  103C 000E                837              MOVE.B  #14,D0
00001484  4E4F                     838              TRAP    #15
00001486                           839              
00001486  4CDF 0203                840              MOVEM.L (A7)+,A1/D0-D1
0000148A  4E75                     841              RTS
0000148C                           842  
0000148C= 47 41 4D 45 20 4F ...    843  .GOVSTR     DC.B    'GAME OVER',0
00001496                           844              DS.W    0
00001496                           845  
00001496                           846  
00001496                           847  
00001496                           848  
00001496                           849  
00001496                           850  
00001496                           851  
00001496                           852  
00001496                           853  
00001496                           854  
00001496                           855  -------------------- end include --------------------
00001496                           856              INCLUDE "BALL.X68"              ;LA PELOTA
00001496                           857  ; =============================================================================
00001496                           858  ; BALL
00001496                           859  ; =============================================================================
00001496                           860  
00001496                           861  BINIT
00001496  33FC 00F8 000023CE       862              MOVE.W  #BINPOSX,BPOSX
0000149E  33FC 01C6 000023D0       863              MOVE.W  #BINPOSY-2,BPOSY  
000014A6  33FC 0004 000023D2       864              MOVE.W  #BINSPEED,BSPEEDX
000014AE  303C 0004                865              MOVE.W  #BINSPEED,D0
000014B2  4440                     866              NEG.W   D0
000014B4  33C0 000023D4            867              MOVE.W  D0,BSPEEDY
000014BA  33C0 000023D2            868              MOVE.W  D0,BSPEEDX
000014C0  4E75                     869              RTS
000014C2                           870              
000014C2                           871  BUPD        
000014C2  48E7 F000                872              MOVEM.L D0-D3,-(A7)
000014C6                           873              
000014C6                           874              
000014C6  3239 000023D0            875  .UP         MOVE.W  BPOSY,D1
000014CC  B27C 0000                876              CMP.W   #0,D1
000014D0  6E00 0008                877              BGT     .LEFT
000014D4  4479 000023D4            878              NEG.W   BSPEEDY
000014DA                           879              
000014DA  3239 000023CE            880  .LEFT       MOVE.W  BPOSX,D1                ;CHOQUE IZQUIERDA
000014E0  B27C 0000                881              CMP.W    #0,D1                 
000014E4  6E00 0008                882              BGT     .RIGHT     
000014E8  4479 000023D2            883              NEG.W   BSPEEDX
000014EE                           884  
000014EE                           885  .RIGHT     
000014EE  3239 000023CE            886              MOVE.W  BPOSX,D1
000014F4  343C 0200                887              MOVE.W  #SCRCTRL,D2
000014F8  5041                     888              ADD.W   #BWIDTH,D1
000014FA  B242                     889              CMP.W    D2,D1
000014FC  6D00 0008                890              BLT     .PLRY
00001500  4479 000023D2            891              NEG.W   BSPEEDX
00001506                           892  
00001506                           893  .PLRY
00001506  3239 000023D0            894              MOVE.W  BPOSY,D1
0000150C  5041                     895              ADD.W   #BWIDTH,D1
0000150E  343C 01D0                896              MOVE.W  #PPOSY,D2               ;D2-D1
00001512  B441                     897              CMP.W   D1,D2                   ;SI LA Y SE CORRESPONDE
00001514  6E00 0084                898              BGT     .END                    ;SI LA BPOSY+WIDHT ES MAYOR QUE PPOSY,
00001518                           899                                              ;ESPERAR A QUE CHOQUE CON ABAJO
00001518                           900              ;MOVE.W  #BINPOSY,BPOSY
00001518                           901  .PLRXLEFT   
00001518                           902              
00001518  3239 000023CE            903              MOVE.W  BPOSX,D1
0000151E  5841                     904              ADD.W   #BWIDTH/2,D1
00001520  3439 000023C4            905              MOVE.W  PPOSX,D2
00001526  B441                     906              CMP.W   D1,D2                   ;MIRAMOS EL IZQUIERDO
00001528  6C00 0058                907              BGE     .DOWN
0000152C                           908              
0000152C                           909  .PLRXMIDDLE 
0000152C  3639 000023C6            910              MOVE.W  PWIDTH,D3
00001532  E24B                     911              LSR.W   #1,D3
00001534  D443                     912              ADD.W   D3,D2
00001536  B441                     913              CMP.W   D1,D2                   ;CENTRO - POS PEL
00001538  6F00 001E                914              BLE     .PLRXRIGHT
0000153C                           915             
0000153C  4479 000023D4            916              NEG.W   BSPEEDY
00001542  3239 000023D2            917              MOVE.W  BSPEEDX,D1
00001548  6B00 000E                918              BMI     .PLRXRIGHT
0000154C  4479 000023D2            919              NEG.W   BSPEEDX
00001552  4EF9 0000159A            920              JMP     .END
00001558                           921              
00001558                           922  .PLRXRIGHT 
00001558  3239 000023CE            923              MOVE.W  BPOSX,D1           
0000155E  D443                     924              ADD.W   D3,D2                   ;COMPARAMOS EL LADO IZQ DE LA PLATAFORMA
00001560  B441                     925              CMP.W   D1,D2                   ;EL DERECHO
00001562  6F00 001E                926              BLE     .DOWN                   
00001566  4479 000023D4            927              NEG.W   BSPEEDY
0000156C                           928              
0000156C  3239 000023D2            929              MOVE.W  BSPEEDX,D1
00001572  6A00 000E                930              BPL     .DOWN              ;SI ES POSITIVO SOLO NEGAMOS Y
00001576  4479 000023D2            931              NEG.W   BSPEEDX
0000157C  4EF9 0000159A            932              JMP     .END
00001582                           933  
00001582                           934  .DOWN       
00001582  3239 000023D0            935              MOVE.W  BPOSY,D1
00001588  5041                     936              ADD.W   #BHEIGHT,D1
0000158A  B27C 01E0                937              CMP.W   #SCRHEIGH,D1
0000158E  6D00 000A                938              BLT     .END
00001592  33FC 0003 000023C2       939              MOVE.W   #STAGOVR,(STANEXT)
0000159A                           940  .END            
0000159A                           941  
0000159A  3039 000023D2            942              MOVE.W  BSPEEDX,D0
000015A0  D179 000023CE            943              ADD.W   D0,BPOSX
000015A6                           944              
000015A6  3239 000023D4            945              MOVE.W  BSPEEDY,D1
000015AC  D379 000023D0            946              ADD.W   D1,BPOSY
000015B2                           947  
000015B2  4CDF 000F                948              MOVEM.L (A7)+,D0-D3
000015B6                           949              
000015B6  4E75                     950              RTS
000015B8                           951              
000015B8                           952  BPLOT       
000015B8  48E7 FC00                953              MOVEM.L  D0-D5,-(A7)
000015BC                           954              ;CONTOUR COLOR
000015BC  223C 00FFFFFF            955              MOVE.L  #BINCOLOR,D1  
000015C2  103C 0050                956              MOVE.B  #80,D0
000015C6  4E4F                     957              TRAP    #15
000015C8                           958      
000015C8                           959               ;FILL COLOR
000015C8  223C 00FFFFFF            960              MOVE.L   #BINCOLOR,D1  
000015CE  103C 0051                961              MOVE.B  #81,D0
000015D2  4E4F                     962              TRAP    #15
000015D4                           963   
000015D4                           964              ;CIRCLE
000015D4                           965  
000015D4  3A3C 0008                966              MOVE.W  #BWIDTH,D5 
000015D8                           967      
000015D8  3639 000023CE            968              MOVE.W  BPOSX,D3
000015DE  3839 000023D0            969              MOVE.W  BPOSY,D4
000015E4  3203                     970              MOVE.W  D3,D1
000015E6  3404                     971              MOVE.W  D4,D2
000015E8                           972              
000015E8  D845                     973              ADD.W   D5,D4
000015EA  D645                     974              ADD.W   D5,D3
000015EC                           975      
000015EC                           976  
000015EC  103C 0058                977              MOVE.B  #88,D0
000015F0  4E4F                     978              TRAP    #15
000015F2                           979      
000015F2  4CDF 003F                980              MOVEM.L  (A7)+,D0-D5
000015F6                           981  
000015F6  4E75                     982              RTS
000015F8                           983  
000015F8                           984  
000015F8                           985  
000015F8                           986  
000015F8                           987  
000015F8                           988  
000015F8                           989  
000015F8                           990  
000015F8                           991  
000015F8                           992  
000015F8                           993  
000015F8                           994  -------------------- end include --------------------
000015F8                           995              INCLUDE "SCTRL.X68"             ;CONTROL SCREEN
000015F8                           996  ;--------------------------------------------------------------------------
000015F8                           997  ;SCREEN CONTROL
000015F8                           998  ;--------------------------------------------------------------------------
000015F8                           999  SCTRLINIT
000015F8  48E7 F800               1000              MOVEM.L D0-D4,-(A7)       
000015FC  223C 00FFFFFF           1001              MOVE.L  #$00FFFFFF,D1  ;COLOR
00001602  103C 0050               1002              MOVE.B  #80,D0
00001606  4E4F                    1003              TRAP    #15
00001608                          1004              
00001608  C2BC 00FFFFFF           1005              AND.L   #$00FFFFFF,D1  ;COLOR
0000160E  103C 0051               1006              MOVE.B  #81,D0
00001612  4E4F                    1007              TRAP    #15
00001614                          1008              
00001614  103C 0057               1009              MOVE.B  #87,D0
00001618  323C 0200               1010              MOVE.W  #SCRCTRL,D1
0000161C  363C 020A               1011              MOVE.W  #SCRCTRL+10,D3
00001620  343C 0000               1012              MOVE.W  #0,D2
00001624  383C 01E0               1013              MOVE.W  #SCRHEIGH,D4
00001628  4E4F                    1014              TRAP    #15
0000162A                          1015              
0000162A  4CDF 001F               1016              MOVEM.L  (A7)+,D0-D4
0000162E                          1017  
0000162E  4E75                    1018              RTS
0000162E  4E75                    1019  -------------------- end include --------------------
00001630                          1020              INCLUDE  "BLOCKS.X68"           ;BLOQUES
00001630                          1021  ;-----------------------------------------------------------
00001630                          1022  ;           BLOCKS
00001630                          1023  ;-----------------------------------------------------------
00001630                          1024    
00001630                          1025  BLINIT
00001630  48E7 8080               1026              MOVEM.L D0/A0,-(A7)
00001634  41F9 000023D8           1027              LEA.L   BLMATRIX,A0
0000163A  3038 000C               1028              MOVE.W  BLROW,D0
0000163E                          1029  .LOOP       
0000163E  10FC 00FF               1030              MOVE.B  #%11111111,(A0)+
00001642  51C8 FFFA               1031              DBRA    D0,.LOOP
00001646  4CDF 0101               1032              MOVEM.L (A7)+,D0/A0
0000164A  4E75                    1033              RTS
0000164C                          1034              
0000164C                          1035  BLUPD       
0000164C  48E7 E080               1036              MOVEM.L D0-D2/A0,-(A7)
00001650  3039 000023CE           1037              MOVE.W BPOSX,D0
00001656  5840                    1038              ADD.W #BWIDTH/2,D0              ;POSICIÓN CENTRAL X DE LA BOLA
00001658  323C 00C0               1039              MOVE.W #BLROW*BLHEIGHT,D1       ;PARTE INFERIOR DEL BLOQUE ÚLTIMA FILA
0000165C  3439 000023D0           1040              MOVE.W BPOSY,D2
00001662  B441                    1041              CMP.W D1,D2                     ;MIRAMOS SI SON IGUALES LA Y DE LA BOLA CON EL BLOQUE
00001664  6E00 0026               1042              BGT .END
00001668  4479 000023D4           1043              NEG.W BSPEEDY
0000166E  33C1 000023D0           1044              MOVE.W D1,BPOSY
00001674  80FC 0040               1045              DIVU.W #BLWIDTH,D0                     ;DIVIDIR ENTRE 32 ES DESPLAZAR 5 A LA DERECHA
00001678                          1046                                              ;COLUMNA DEL BLOQUE QUE HA COLISIONADO
00001678                          1047              
00001678  41F9 000023D8           1048              LEA.L   BLMATRIX,A0
0000167E  D1FC 0000000B           1049              ADDA.L  #BLROW-1,A0             ;LE PASAMOS LA DIRECCIÓN DE LA ÚLTIMA FILA 
00001684  323C 0007               1050              MOVE.W  #BLCOL-1,D1                   
00001688  9240                    1051              SUB.W   D0,D1
0000168A  0390                    1052              BCLR    D1,(A0)
0000168C                          1053  ;;;ANDREA: EL RECTANGULO 7 ES EL 0, EL 6 EL 1, EL 5 EL 2...
0000168C                          1054              
0000168C                          1055  
0000168C  4CDF 0107               1056  .END        MOVEM.L (A7)+,D0-D2/A0
00001690  4E75                    1057              RTS     
00001692                          1058              
00001692                          1059              
00001692                          1060  BLPLOT
00001692  48E7 FFC0               1061              MOVEM.L D0-D7/A0-A1,-(A7)
00001696  103C 0050               1062              MOVE.B  #80,D0                  ;SET PEN COLOR
0000169A  7200                    1063              MOVE.L  #0,D1
0000169C  4E4F                    1064              TRAP    #15
0000169E                          1065              
0000169E  4242                    1066              CLR.W   D2                      ;UPPER Y
000016A0  383C 0010               1067              MOVE.W  #BLHEIGHT,D4            ;DOWN Y
000016A4  41F8 11DC               1068              LEA     COLORS,A0
000016A8                          1069              
000016A8  3A3C 000B               1070              MOVE.W  #BLROW-1,D5    ;DBRA
000016AC  227C 00000000           1071              MOVE.L  #0,A1                      ;PARA SABER CUAL PONER D6= FILA
000016B2                          1072              
000016B2                          1073  
000016B2                          1074              
000016B2                          1075  .LOOP2                                      ;BUCLE DE FILAS
000016B2                          1076   
000016B2  103C 0051               1077              MOVE.B  #81,D0                  ;SET COLOR
000016B6  2218                    1078              MOVE.L  (A0)+,D1
000016B8  4E4F                    1079              TRAP    #15
000016BA                          1080                                        ;BUCLE FILAS
000016BA                          1081              
000016BA  363C 0040               1082              MOVE.W  #BLWIDTH,D3             ;RIGHT X
000016BE  4241                    1083              CLR.W   D1                      ;LEFT X
000016C0                          1084              
000016C0  3F05                    1085              MOVE.W  D5,-(A7)                ;GUARDO EL VALOR DEL DECREMENTO DE LOOP2
000016C2  3A3C 0007               1086              MOVE.W  #BLCOL-1,D5
000016C6  1C29 23D8               1087              MOVE.B  BLMATRIX(A1),D6
000016CA                          1088  .LOOP1                                      ; BUCLE COLUMNAS
000016CA                          1089             
000016CA  E31E                    1090              ROL.B   #1,D6
000016CC  6400 0008               1091              BCC     .SALTO                  ; SALTA SI CARRY = 0
000016D0                          1092              
000016D0  103C 0057               1093              MOVE.B  #87,D0                  ; DIBUJAMOS EL CUADRADO
000016D4  4E4F                    1094              TRAP    #15
000016D6                          1095  .SALTO
000016D6  3203                    1096              MOVE.W  D3,D1
000016D8  0643 0040               1097              ADD.W   #BLWIDTH, D3
000016DC  5247                    1098              ADDI.W  #1,D7
000016DE  51CD FFEA               1099              DBRA    D5,.LOOP1 
000016E2  3A1F                    1100              MOVE.W  (A7)+,D5              
000016E4                          1101  
000016E4  5249                    1102              ADDA.W  #1,A1
000016E6  3404                    1103              MOVE.W  D4,D2
000016E8  0644 0010               1104              ADD.W   #BLHEIGHT,D4
000016EC  51CD FFC4               1105              DBRA    D5,.LOOP2
000016F0  4CDF 03FF               1106              MOVEM.L (A7)+,D0-D7/A0-A1
000016F4  4E75                    1107              RTS
000016F6                          1108  
000016F6                          1109  
000016F6                          1110  
000016F6                          1111  
000016F6                          1112  
000016F6                          1113  
000016F6                          1114  -------------------- end include --------------------
000016F6                          1115  
000016F6                          1116  ; --- INITIALIZE --------------------------------------------------------------
000016F6                          1117              
000016F6  4EB8 1000               1118  START       JSR     SYSINIT
000016FA                          1119              ; TO DO: CALL GAME INITIALIZATION CODE HERE
000016FA  4EB8 12BC               1120              JSR     STAINIT                 ;INICIA LAS PANTALLAS            
000016FE                          1121              
000016FE                          1122  ; --- UPDATE ------------------------------------------------------------------
000016FE                          1123  
000016FE  4E40                    1124  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
00001700                          1125                                              ; UPDATE DEPENDING ON THE STATE
00001700                          1126              ; TO DO: CALL GAME UPDATE CODE HERE
00001700  4EB8 12CE               1127              JSR     STAUPD
00001704                          1128  
00001704                          1129  ; --- WAIT SYNCH --------------------------------------------------------------
00001704                          1130  
00001704  4A39 00001720           1131  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
0000170A  67F8                    1132              BEQ     .WINT
0000170C                          1133              
0000170C  4239 00001720           1134              CLR.B   (SCRINTCT)
00001712                          1135  
00001712                          1136  ; --- PLOT --------------------------------------------------------------------
00001712                          1137              
00001712                          1138              ; TO DO: CALL GAME PLOT CODE HERE
00001712  4EB8 1328               1139              JSR     STAPLOT
00001716                          1140  
00001716  4E41                    1141              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001718  60E4                    1142              BRA     .LOOP
0000171A  FFFF FFFF               1143              SIMHALT
0000171E                          1144  
0000171E                          1145  ; --- VARIABLES ---------------------------------------------------------------
0000171E                          1146  
0000171E                          1147              INCLUDE "SYSVAR.X68"
0000171E                          1148  ; =============================================================================
0000171E                          1149  ; SYSTEM VARS
0000171E                          1150  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
0000171E                          1151  ; THEY MUST NOT BE IN PROTECTED MEMORY.
0000171E                          1152  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
0000171E                          1153  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
0000171E                          1154  ; THIS IS GOOD ENOUGH.
0000171E                          1155  ; =============================================================================
0000171E                          1156  
0000171E                          1157  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
0000171E                          1158  
0000171E                          1159  KBDVAL      DS.B    1                       ; KEY PRESSED=1
0000171F                          1160  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001720                          1161  
00001720                          1162              DS.W    0
00001720                          1163  
00001720                          1164  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001720                          1165  
00001720                          1166  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001721                          1167  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001722                          1168              DS.W    0
00001722                          1169  
00001722                          1170  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001722                          1171  
00001740                          1172              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001740                          1173  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
000023C0                          1174              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
000023C0                          1175  
000023C0                          1176  
000023C0                          1177  
000023C0                          1178  -------------------- end include --------------------
000023C0                          1179              INCLUDE "VAR.X68"
000023C0                          1180  ; =============================================================================
000023C0                          1181  ; GAME VARS
000023C0                          1182  ; =============================================================================
000023C0                          1183  
000023C0                          1184  ; TO DO: DECLARE GAME VARIABLES HERE.
000023C0                          1185  
000023C0                          1186  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
000023C0                          1187  
000023C0                          1188  STACUR      DS.W    1                       ; CURRENT GAME STATE
000023C2                          1189  STANEXT     DS.W    1                       ; NEXT GAME STATE
000023C4                          1190  ;----------------------------------------------------------------------------
000023C4                          1191  
000023C4                          1192  ; PLAYER --------------------------------------------------------------------
000023C4                          1193  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
000023C6                          1194  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
000023C8                          1195  PLIVES      DS.W    1                       ;LIVES LEFT
000023CA                          1196  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
000023CC                          1197  PSPEED      DS.W    1
000023CE                          1198  ;----------------------------------------------------------------------------
000023CE                          1199  
000023CE                          1200  ; BALL ----------------------------------------------------------------------
000023CE                          1201  BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
000023D0                          1202  BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
000023D2                          1203  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
000023D4                          1204  BSPEEDY     DS.W    1
000023D6                          1205  BCOLOR      DS.W    1
000023D8                          1206  
000023D8                          1207  ; BLOCKS --------------------------------------------------------------------
000023D8                          1208  BLMATRIX    DS.B    12  ;12*8
000023E4                          1209  
000023E4                          1210  
000023E4                          1211  
000023E4                          1212  -------------------- end include --------------------
000023E4                          1213              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              23D6
BHEIGHT             8
BINCOLOR            FFFFFF
BINIT               1496
BINPOSX             F8
BINPOSY             1C8
BINSPEED            4
BLCOL               8
BLHEIGHT            10
BLINIT              1630
BLINIT:LOOP         163E
BLMATRIX            23D8
BLPLOT              1692
BLPLOT:LOOP1        16CA
BLPLOT:LOOP2        16B2
BLPLOT:SALTO        16D6
BLROW               C
BLUE                F7E78E
BLUPD               164C
BLUPD:END           168C
BLWIDTH             40
BPLOT               15B8
BPOSX               23CE
BPOSY               23D0
BSPEEDX             23D2
BSPEEDY             23D4
BUPD                14C2
BUPD:DOWN           1582
BUPD:END            159A
BUPD:LEFT           14DA
BUPD:PLRXLEFT       1518
BUPD:PLRXMIDDLE     152C
BUPD:PLRXRIGHT      1558
BUPD:PLRY           1506
BUPD:RIGHT          14EE
BUPD:UP             14C6
BWIDTH              8
COLORS              11DC
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1740
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
GOVERC              FFFF
GOVERX              10
GOVERY              7
GREEN               95FF8C
INTPRSC             FFFFFF
INTPRSX             20
INTPRSY             52
INTTITC             DCAA7C
INTTITX             E
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             171F
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              171E
ORANGE              4E8CF3
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX             E0
PINWIDTH            40
PLIVES              23C8
PLRINIT             120C
PLRUPD              122C
PLRUPD:END          1272
PLRUPD:RIGHTKEY     1250
PMOVE               8
PPLOT               1278
PPOSX               23C4
PPOSY               1D0
PSCORE              23CA
PSPEED              23CC
PURPLE              FFACAC
PWIDTH              23C6
SCRCTRL             200
SCRCYCCT            1721
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1720
SCRIRQ              1
SCRISR              107E
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            2E4
SCTRLINIT           15F8
STACUR              23C0
STAEMPTY            1354
STAGOVR             3
STAGOVRP            1452
STAGOVRP:GOVSTR     148C
STAGOVRU            143C
STAGOVRU:END        1450
STAINIT             12BC
STAINTR             0
STAINTRI            111A
STAINTRP            13BE
STAINTRP:PRSSTR     1428
STAINTRP:TITSTR     1418
STAINTRU            13A8
STAINTRU:END        13BC
STANEXT             23C2
STANONE             FFFFFFFF
STAPLAY             2
STAPLAYI            1356
STAPLAYP            1390
STAPLAYU            137E
STAPLOT             1328
STAPLOT:PLTTBL      1344
START               16F6
START:LOOP          16FE
START:WINT          1704
STASPACE            1
STASPACEU           1368
STASPACEU:END       137C
STAUPD              12CE
STAUPD:DOUPD        12F4
STAUPD:INITBL       130C
STAUPD:UPDTBL       1318
SYSINIT             1000
YELLOW              38EEF8
