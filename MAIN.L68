00001534 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 06/12/2019 13:35:20

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION :
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8  
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =00000280                 81  SCRWIDTH    EQU     640                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  -------------------- end include --------------------
00001000                            93              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            94  ; =============================================================================
00001000                            95  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            96  ; =============================================================================
00001000                            97  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            98  ; -----------------------------------------------------------------------------
00001000                            99  SYSINIT
00001000                           100  ; INITIALIZES THE SYSTEM
00001000                           101  ; INPUT    - NONE
00001000                           102  ; OUTPUT   - NONE
00001000                           103  ; MODIFIES - NONE
00001000                           104  ; -----------------------------------------------------------------------------
00001000  205F                     105              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            106              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            107              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            108              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                109              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     110              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     111              RTS
0000101C                           112  
0000101C                           113  ; =============================================================================
0000101C                           114  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           115  ; =============================================================================
0000101C                           116  
0000101C                           117  ; -----------------------------------------------------------------------------
0000101C                           118  SCRINIT
0000101C                           119  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           120  ; INPUT    - NONE
0000101C                           121  ; OUTPUT   - NONE
0000101C                           122  ; MODIFIES - D0,D1,D2,D3
0000101C                           123  ; -----------------------------------------------------------------------------
0000101C                           124              ; TO DO:
0000101C                           125              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                126              ORI.W   #$0700,SR
00001020                           127              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           128              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       129              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           130              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                131              MOVE.B  #33,D0
0000102C  223C 028001E0            132              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     133              TRAP    #15
00001034                           134              ; - SET WINDOWED MODE
00001034  7201                     135              MOVE.L  #1,D1
00001036  4E4F                     136              TRAP    #15
00001038                           137              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                138              MOVE.B  #11,D0
0000103C  323C FF00                139              MOVE.W  #$FF00,D1
00001040  4E4F                     140              TRAP    #15
00001042                           141              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                142              MOVE.B  #92,D0
00001046  123C 0011                143              MOVE.B  #17,D1
0000104A  4E4F                     144              TRAP    #15
0000104C                           145              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     146              MOVE.L  #11,D0
0000104E  323C FF00                147              MOVE.W  #$FF00,D1
00001052  4E4F                     148              TRAP    #15
00001054                           149              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           150              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       151              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           152              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           153              ;   TASK 32)
0000105C  103C 0020                154              MOVE.B  #32,D0
00001060  123C 0006                155              MOVE.B  #6,D1
00001064                           156              ;MOVE.B  #%10000001,D2
00001064  143C 0081                157              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     158              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     159              TRAP    #15
0000106C                           160              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 0000155E            161              CLR.B   SCRINTCT
00001072  4239 0000155F            162              CLR.B   SCRCYCCT
00001078                           163              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                164              ANDI.W  #$F8FF,SR
0000107C  4E75                     165              RTS
0000107E                           166  
0000107E                           167  ; -----------------------------------------------------------------------------
0000107E                           168  SCRISR
0000107E                           169  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           170  ; INPUT    - NONE
0000107E                           171  ; OUTPUT   - NONE
0000107E                           172  ; MODIFIES - NONE
0000107E                           173  ; -----------------------------------------------------------------------------
0000107E  5239 0000155E            174              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 0000155F            175              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     176              RTE
0000108C                           177  
0000108C                           178  ; -----------------------------------------------------------------------------
0000108C                           179  SCRUPD
0000108C                           180  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           181  ; BUFFER FOR THE NEXT ONE.
0000108C                           182  ; INPUT    - NONE
0000108C                           183  ; OUTPUT   - NONE
0000108C                           184  ; MODIFIES - NONE
0000108C                           185  ; -----------------------------------------------------------------------------
0000108C                           186              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                187              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                188              MOVE.B  #94,D0
00001094  4E4F                     189              TRAP    #15
00001096  103C 000B                190              MOVE.B  #11,D0
0000109A  323C FF00                191              MOVE.W  #$FF00,D1
0000109E  4E4F                     192              TRAP    #15
000010A0  4CDF 0003                193              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     194              RTE
000010A6                           195  
000010A6                           196  ; =============================================================================
000010A6                           197  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           198  ; =============================================================================
000010A6                           199  
000010A6                           200  ; -----------------------------------------------------------------------------
000010A6                           201  KBDINIT
000010A6                           202  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           203  ; INPUT    - NONE
000010A6                           204  ; OUTPUT   - NONE
000010A6                           205  ; MODIFIES - NONE
000010A6                           206  ; -----------------------------------------------------------------------------
000010A6  4239 0000155C            207              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 0000155D            208              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       209              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     210              RTS
000010BC                           211  
000010BC                           212  ; -----------------------------------------------------------------------------
000010BC                           213  KBDREAD
000010BC                           214  ; TRAP SERVICE ROUTINE.
000010BC                           215  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           216  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           217  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           218  ; INPUT    - NONE
000010BC                           219  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           220  ; MODIFIES - NONE
000010BC                           221  ; -----------------------------------------------------------------------------
000010BC                           222              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                223              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                224              MOVE.B  #19,D0
000010C4                           225              
000010C4  223C 50104D20            226              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     227              TRAP    #15
000010CC                           228          
000010CC  4202                     229              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                230              MOVE.W  #3,D4
000010D2                           231              
000010D2                           232  .LOOP1      
000010D2                           233       
000010D2  E189                     234              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     235              MOVE.W  SR,D3                   
000010D6  0243 0001                236              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     237              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     238              OR.B    D3,D2                   
000010DE  51CC FFF2                239              DBRA    D4,.LOOP1
000010E2                           240          
000010E2                           241              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           242              
000010E2  223C 28272625            243              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     244              TRAP    #15
000010EA                           245              
000010EA  383C 0003                246              MOVE.W  #3,D4
000010EE                           247  .LOOP2      
000010EE  E189                     248              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     249              MOVE.W  SR,D3
000010F2  0243 0001                250              ANDI.W  #$0001,D3    
000010F6  E30A                     251              LSL.B   #1,D2
000010F8  8403                     252              OR.B    D3,D2
000010FA                           253              
000010FA  51CC FFF2                254              DBRA    D4,.LOOP2
000010FE                           255              
000010FE                           256              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           257              
000010FE                           258              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 0000155C            259              MOVE.B  KBDVAL,D3
00001104  4603                     260              NOT.B   D3
00001106  13C2 0000155C            261              MOVE.B  D2,KBDVAL
0000110C  C602                     262              AND.B   D2,D3
0000110E  13C3 0000155D            263              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                264              MOVEM.L (A7)+,D0-D4
00001118  4E73                     265              RTE
0000111A                           266  
0000111A                           267  ; =============================================================================
0000111A                           268  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           269  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           270  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           271  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           272  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           273  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           274  ; =============================================================================
0000111A                           275  
0000111A                           276  ; -----------------------------------------------------------------------------
0000111A                           277  DMMINIT
0000111A                           278  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           279  ; INPUT    - NONE
0000111A                           280  ; OUTPUT   - NONE
0000111A                           281  ; MODIFIES - NONE
0000111A                           282  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                283              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001580            284              LEA     DMMDATA,A0
00001124  303C 0031                285              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                286  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            287              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                288              DBRA.W  D0,.LOOP
00001136  4CDF 0101                289              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     290              RTS
0000113C                           291  
0000113C                           292  ; -----------------------------------------------------------------------------
0000113C                           293  DMMFIRST
0000113C                           294  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           295  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           296  ; INPUT    - NONE
0000113C                           297  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           298  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           299  ; -----------------------------------------------------------------------------
0000113C  41F9 00001580            300              LEA     DMMDATA,A0
00001142  4A58                     301  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                302              BNE     DMMFRFND
00001148  D1FC 0000003E            303              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 000021FF            304  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     305              BLT     DMMFRLOP
00001156  207C 00000000            306              MOVE.L  #0,A0
0000115C  4E75                     307  DMMFRFND    RTS
0000115E                           308  
0000115E                           309  ; -----------------------------------------------------------------------------
0000115E                           310  DMMNEXT
0000115E                           311  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           312  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           313  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           314  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           315  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           316  ; -----------------------------------------------------------------------------
0000115E  2F00                     317              MOVE.L  D0,-(A7)
00001160  2008                     318              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            319              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            320              ADD.L   #DMMBSIZE,D0
0000116E  2040                     321              MOVE.L  D0,A0
00001170  201F                     322              MOVE.L  (A7)+,D0
00001172  60DA                     323              BRA     DMMFRCOM
00001174                           324  
00001174                           325  ; -----------------------------------------------------------------------------
00001174                           326  DMMFRSTO
00001174                           327  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           328  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           329  ; INPUT    - D0.W : ID TO SEARCH
00001174                           330  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           331  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           332  ; -----------------------------------------------------------------------------
00001174  41F9 00001580            333              LEA     DMMDATA,A0
0000117A  B058                     334  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                335              BEQ     DMMFFND
00001180  D1FC 0000003E            336              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 000021FF            337  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     338              BLT     DMMFLOOP
0000118E  207C 00000000            339              MOVE.L  #0,A0
00001194  4E75                     340  DMMFFND     RTS
00001196                           341  
00001196                           342  ; -----------------------------------------------------------------------------
00001196                           343  DMMNEXTO
00001196                           344  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           345  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           346  ; INPUT    - D0.W : ID TO SEARCH
00001196                           347  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           348  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           349  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           350  ; -----------------------------------------------------------------------------
00001196  2F00                     351              MOVE.L  D0,-(A7)
00001198  2008                     352              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            353              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            354              ADD.L   #DMMBSIZE,D0
000011A6  2040                     355              MOVE.L  D0,A0
000011A8  201F                     356              MOVE.L  (A7)+,D0
000011AA  60DA                     357              BRA     DMMFCOM
000011AC                           358  
000011AC                           359  ; -----------------------------------------------------------------------------
000011AC                           360  DMMALLOC
000011AC                           361  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           362  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           363  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           364  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           365  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           366  ; -----------------------------------------------------------------------------
000011AC  3F00                     367              MOVE.W  D0,-(A7)
000011AE  4240                     368              CLR.W   D0
000011B0  4EB8 1174                369              JSR     DMMFRSTO
000011B4  301F                     370              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            371              CMP.L   #0,A0
000011BC  6700 0006                372              BEQ     .END
000011C0  3140 FFFE                373              MOVE.W  D0,-2(A0)
000011C4  4E75                     374  .END        RTS
000011C6                           375  
000011C6                           376  ; -----------------------------------------------------------------------------
000011C6                           377  DMMFREE
000011C6                           378  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           379  ; SYSTEM (0)
000011C6                           380  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           381  ; OUTPUT   - NONE
000011C6                           382  ; MODIFIES - NONE
000011C6                           383  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                384              MOVEM.L D0/A0,-(A7)
000011CA  2008                     385              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            386              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     387              MOVE.L  D0,A0
000011D4  4250                     388              CLR.W   (A0)
000011D6  4CDF 0101                389              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     390              RTS
000011DC                           391  
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  -------------------- end include --------------------
000011DC                           403              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           404  ; =============================================================================
000011DC                           405  ; CONSTANTS
000011DC                           406  ; =============================================================================
000011DC                           407  
000011DC                           408  ; --- PLAYER RELATED CONSTANTS ------------------------------------------------
000011DC                           409  
000011DC                           410  
000011DC                           411  
000011DC                           412  
000011DC                           413  
000011DC                           414  ;PLRINIEN    EQU     500                     ; PLAYER INITIAL ENERGY (<SCRWIDTH)
000011DC                           415  ;PLRSPEED    EQU     7                       ; PLAYER SPEED (PIXELS PER INT)
000011DC                           416  
000011DC                           417  ;PLRDMGCL    EQU     $00FFFFFF               ; PLAYER DAMAGED COLOR
000011DC                           418  ;PLRTXTCL    EQU     $00FFFFFF               ; FONT COLOR
000011DC                           419  ;PLRTXTX     EQU     65                       ; SCORE X COORDINATE
000011DC                           420  ;PLRTXTY     EQU     10                       ; SCORE Y COORDINATE
000011DC                           421  ;PLRLIFEH    EQU     20                      ; HEIGHT OF LIFE BAR
000011DC                           422  ;PLRLIFEY    EQU     SCRHEIGH-PLRLIFEH*2     ; LIFE BAR Y POS
000011DC                           423  ;PLRLIFEC    EQU     $000000FF               ; LIFE BAR COLOR
000011DC                           424  ;PLRUMDMG    EQU     %00000001               ; UPDATE DAMAGE MASK
000011DC                           425  ;PLRPMDMG    EQU     %00000010               ; PLOT DAMAGE MASK
000011DC                           426  ;PLRUBDMG    EQU     0                       ; UPDATE DAMAGE BIT
000011DC                           427  ;PLRPBDMG    EQU     1                       ; PLOT DAMAGE BIT
000011DC                           428  
000011DC                           429  
000011DC                           430  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           431  
000011DC  =00000008                432  INTTITX     EQU     8                      ; TITLE X COORDINATE
000011DC  =00000007                433  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                434  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000017                435  INTPRSX     EQU     23                      ; PRESS FIRE X COORDINATE
000011DC  =00000032                436  INTPRSY     EQU     50                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                437  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC                           438  
000011DC                           439  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                440  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                441  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                442  STAPLAY     EQU     1                       ; NORMAL GAME STATE
000011DC  =00000002                443  STAGOVR     EQU     2                       ; GAME OVER STATE
000011DC                           444  ;----------------------------------------------------------------------------
000011DC                           445  
000011DC                           446  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           447  
000011DC  =00000023                448  GOVSTRX     EQU     35                      ; TITLE X COORDINATE
000011DC  =0000000F                449  GOVSTRY     EQU     15                      ; TITLE Y COORDINATE
000011DC  =00FFFFFF                450  GOVSTRC     EQU     $00FFFFFF               ; TITLE COLOR
000011DC                           451  
000011DC                           452  
000011DC                           453  
000011DC                           454  
000011DC                           455  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =000001AA                456  SCRCTRL     EQU     SCRWIDTH/2+SCRWIDTH/6   ;
000011DC                           457  ;----------------------------------------------------------------------------
000011DC                           458  
000011DC                           459  
000011DC                           460  ; PLAYER --------------------------------------------------------------------
000011DC                           461  
000011DC  =00000064                462  PINWIDTH    EQU     100                      ; PLAYER INITIAL WIDTH (PIXELS)
000011DC  =00000014                463  PHEIGHT     EQU     20                      ; PLAYER HEIGHT (PIXELS)
000011DC  =00ECD59D                464  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011DC  =00000003                465  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011DC  =0000000F                466  PMOVE       EQU     15                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011DC  =000001C2                467  PPOSY       EQU     SCRHEIGH-PHEIGHT-10      ;POSICION DE LA PLATAFORMA Y
000011DC  =000000A3                468  PINPOSX     EQU     SCRCTRL/2-PINWIDTH/2
000011DC                           469  ; ---------------------------------------------------------------------------
000011DC                           470  
000011DC                           471  ; BALL ----------------------------------------------------------------------
000011DC  =00000005                472  BHEIGHT     EQU     5                       ;ALTURA DE LA BOLA
000011DC  =00000005                473  BWIDTH      EQU     5                       ;ANCHURA DE LA BOLA
000011DC  =000000D0                474  BINPOSX     EQU     PINPOSX+PINWIDTH/2-BWIDTH                      ;POSICION DE LA PELOTA X INICIAL
000011DC  =000001AE                475  BINPOSY     EQU     PPOSY-PHEIGHT              ;POSICION DE LA PELOTA Y INICIAL
000011DC  =00000005                476  BINSPEED    EQU     5                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011DC  =0FFFFFFF                477  BINCOLOR    EQU     $00FFFFFFF
000011DC                           478  ; ---------------------------------------------------------------------------
000011DC                           479  
000011DC                           480  
000011DC                           481  
000011DC                           482  
000011DC                           483  
000011DC                           484  -------------------- end include --------------------
000011DC                           485              INCLUDE "PLAYER.X68"            ;EL JUGADOR
000011DC                           486  ; -----------------------------------------------------------------------------
000011DC                           487  ;           PLAYER
000011DC                           488  ; -----------------------------------------------------------------------------
000011DC                           489  PLRINIT
000011DC                           490  ; INITIALIZES THE PLAYER
000011DC                           491  ; INPUT    - NONE
000011DC                           492  ; OUTPUT   - NONE
000011DC                           493  ; MODIFIES - NONE
000011DC                           494  ; -----------------------------------------------------------------------------
000011DC                           495       ;       JSR     BINIT
000011DC  33FC 00A3 00002204       496              MOVE.W  #PINPOSX,PPOSX
000011E4  33FC 0064 00002206       497              MOVE.W  #PINWIDTH,PWIDTH
000011EC  33FC 0003 00002208       498              MOVE.W  #PINLIVE,PLIVES
000011F4  4279 0000220A            499              CLR.W   PSCORE
000011FA                           500             
000011FA  4E75                     501              RTS
000011FC                           502  
000011FC                           503  
000011FC                           504  ; -----------------------------------------------------------------------------
000011FC                           505  
000011FC                           506  PLRUPD      
000011FC  48E7 6000                507              MOVEM.L D1-D2,-(A7)
00001200                           508              
00001200                           509              
00001200  1239 0000155C            510              MOVE.B  (KBDVAL),D1  
00001206  E219                     511              ROR.B   #1,D1                   ;IZQUIERDA
00001208  6400 0018                512              BCC     .RIGHTKEY                  ;CUANDO C = 0
0000120C                           513              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
0000120C  3439 00002204            514              MOVE.W  (PPOSX),D2
00001212  B47C 0000                515              CMP.W    #0,D2
00001216  6F00 000A                516              BLE     .RIGHTKEY
0000121A  0479 000F 00002204       517              SUB.W   #PMOVE,(PPOSX)
00001222                           518  .RIGHTKEY
00001222  E209                     519              LSR.B   #1,D1                   ;NO NOS IMPORTA EL DE ARRIBA
00001224  E219                     520              ROR.B   #1,D1                   ;
00001226  6400 0022                521              BCC     .END
0000122A                           522              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
0000122A  3439 00002204            523              MOVE.W  (PPOSX),D2
00001230  D479 00002206            524              ADD.W   (PWIDTH),D2 
00001236  0642 000F                525              ADD.W   #PMOVE,D2 
0000123A  B47C 01AA                526              CMP.W    #SCRCTRL,D2
0000123E  6C00 000A                527              BGE     .END
00001242  0679 000F 00002204       528              ADD.W   #PMOVE,(PPOSX)
0000124A                           529  .END
0000124A  4CDF 0006                530              MOVEM.L (A7)+,D1-D2
0000124E  4E75                     531              RTS
00001250                           532  
00001250                           533  
00001250                           534  
00001250                           535  
00001250                           536  
00001250                           537  -------------------- end include --------------------
00001250                           538              INCLUDE "PLOT.X68"              ;REPINTAR
00001250                           539  ;------------------------------------------------------------------
00001250                           540  ;           PLOT
00001250                           541  ;------------------------------------------------------------------
00001250                           542  
00001250                           543  PLOTP
00001250                           544  
00001250                           545  
00001250  48E7 FC00                546              MOVEM.L  D0-D5,-(A7)
00001254                           547              ;CONTOUR COLOR
00001254  223C 00ECD59D            548              MOVE.L  #PCOLOR,D1  
0000125A  103C 0050                549              MOVE.B  #80,D0
0000125E  4E4F                     550              TRAP    #15
00001260                           551      
00001260                           552      
00001260                           553               ;FILL COLOR
00001260  C2BC 00ECD59D            554              AND.L   #PCOLOR,D1  
00001266  103C 0051                555              MOVE.B  #81,D0
0000126A  4E4F                     556              TRAP    #15
0000126C                           557   
0000126C                           558  
0000126C                           559          ;SQUARE
0000126C  3A39 00002206            560              MOVE.W  (PWIDTH),D5                     
00001272                           561       
00001272  0645 000F                562              ADD.W   #PMOVE,D5
00001276                           563      
00001276  3639 00002204            564              MOVE.W  (PPOSX),D3
0000127C  383C 01D6                565              MOVE.W  #PPOSY+PHEIGHT,D4
00001280  D645                     566              ADD.W   D5,D3
00001282                           567      
00001282  3239 00002204            568              MOVE.W  (PPOSX),D1
00001288  343C 01C2                569              MOVE.W  #PPOSY,D2
0000128C                           570             
0000128C                           571              ;ADD.W   D5,D2
0000128C                           572      
0000128C  303C 0057                573              MOVE.W  #87,D0
00001290  4E4F                     574              TRAP    #15
00001292                           575      
00001292  4CDF 003F                576              MOVEM.L  (A7)+,D0-D5
00001296                           577  
00001296  4E75                     578              RTS
00001298                           579      
00001298                           580  PLOTSCR
00001298  48E7 F800                581              MOVEM.L  D0-D4,-(A7)
0000129C                           582              
0000129C  223C 00FFFFFF            583              MOVE.L  #$00FFFFFF,D1  
000012A2  103C 0050                584              MOVE.B  #80,D0
000012A6  4E4F                     585              TRAP    #15
000012A8                           586              
000012A8  103C 0054                587              MOVE.B  #84,D0
000012AC  323C 01AA                588              MOVE.W  #SCRCTRL,D1
000012B0  363C 01AA                589              MOVE.W  #SCRCTRL,D3
000012B4  343C 0000                590              MOVE.W  #0,D2
000012B8  383C 01E0                591              MOVE.W  #SCRHEIGH,D4
000012BC  4E4F                     592              TRAP    #15
000012BE                           593              
000012BE  4CDF 001F                594              MOVEM.L  (A7)+,D0-D4
000012C2  4E75                     595              RTS
000012C4                           596  
000012C4                           597  PLOTB       
000012C4  48E7 FC00                598              MOVEM.L  D0-D5,-(A7)
000012C8                           599              ;CONTOUR COLOR
000012C8  223C 0FFFFFFF            600              MOVE.L  #BINCOLOR,D1  
000012CE  103C 0050                601              MOVE.B  #80,D0
000012D2  4E4F                     602              TRAP    #15
000012D4                           603      
000012D4                           604               ;FILL COLOR
000012D4  C2BC 0FFFFFFF            605              AND.L   #BINCOLOR,D1  
000012DA  103C 0051                606              MOVE.B  #81,D0
000012DE  4E4F                     607              TRAP    #15
000012E0                           608   
000012E0                           609              ;CIRCLE
000012E0                           610              
000012E0  3A3C 0005                611              MOVE.W  #BWIDTH,D5 
000012E4  DA79 00002212            612              ADD.W   (BSPEEDX),D5
000012EA                           613      
000012EA  3639 0000220E            614              MOVE.W  BPOSX,D3
000012F0  3839 00002215            615              MOVE.W  (BPOSY)+BHEIGHT,D4
000012F6  D645                     616              ADD.W   D5,D3
000012F8                           617      
000012F8  3239 0000220E            618              MOVE.W  BPOSX,D1
000012FE  3439 00002210            619              MOVE.W  BPOSY,D2
00001304                           620      
00001304  303C 0058                621              MOVE.W  #88,D0
00001308  4E4F                     622              TRAP    #15
0000130A                           623      
0000130A  4CDF 003F                624              MOVEM.L  (A7)+,D0-D5
0000130E                           625  
0000130E  4E75                     626              RTS
00001310                           627  
00001310                           628  
00001310                           629  
00001310                           630  
00001310                           631  
00001310                           632  
00001310                           633  
00001310                           634  -------------------- end include --------------------
00001310                           635              INCLUDE "STATES.X68"            ;
00001310                           636  ; =============================================================================
00001310                           637  ; GAME STATE MANAGEMENT
00001310                           638  ; =============================================================================
00001310                           639  
00001310                           640  ; -----------------------------------------------------------------------------
00001310                           641  STAINIT
00001310                           642  ; INITALIZES THE STATE MANAGER
00001310                           643  ; INPUT    - NONE
00001310                           644  ; OUTPUT   - NONE
00001310                           645  ; MODIFIES - NONE
00001310                           646  ; -----------------------------------------------------------------------------
00001310  33FC FFFF 00002200       647              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
00001318                           648             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
00001318  33FC 0000 00002202       649              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
00001320  4E75                     650              RTS
00001322                           651  
00001322                           652  ; -----------------------------------------------------------------------------
00001322                           653  STAUPD
00001322                           654  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
00001322                           655  ; INPUT    - NONE
00001322                           656  ; OUTPUT   - NONE
00001322                           657  ; MODIFIES - NONE
00001322                           658  ; -----------------------------------------------------------------------------
00001322  48E7 8080                659              MOVEM.L D0/A0,-(A7)
00001326  4280                     660              CLR.L   D0
00001328  3039 00002202            661              MOVE.W  (STANEXT),D0
0000132E  B079 00002200            662              CMP.W   (STACUR),D0
00001334  6700 0012                663              BEQ     .DOUPD
00001338  33C0 00002200            664              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
0000133E  E588                     665              LSL.L   #2,D0
00001340  2040                     666              MOVE.L  D0,A0
00001342  2068 1360                667              MOVE.L  .INITBL(A0),A0
00001346  4E90                     668              JSR     (A0)
00001348  4280                     669  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
0000134A  3039 00002200            670              MOVE.W  (STACUR),D0
00001350  E588                     671              LSL.L   #2,D0
00001352  2040                     672              MOVE.L  D0,A0
00001354  2068 136C                673              MOVE.L  .UPDTBL(A0),A0
00001358  4E90                     674              JSR     (A0)
0000135A  4CDF 0101                675              MOVEM.L (A7)+,D0/A0
0000135E  4E75                     676              RTS
00001360= 0000111A 000011DC ...    677  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTY     ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
0000136C                           678                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
0000136C                           679                                               ;EL 2 ES NO HACER NADA 
0000136C= 000013AE 000013A2 ...    680  .UPDTBL     DC.L    STAINTRU,STAPLAYU,STAGOVRU
00001378                           681                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
00001378                           682                                              ;EL 2 HACE QUE SE UPDATE 
00001378                           683  
00001378                           684  ; -----------------------------------------------------------------------------
00001378                           685  STAPLOT
00001378                           686  ; PERFORMS STATE PLOT
00001378                           687  ; INPUT    - NONE
00001378                           688  ; OUTPUT   - NONE
00001378                           689  ; MODIFIES - NONE
00001378                           690  ; -----------------------------------------------------------------------------
00001378  48E7 8080                691              MOVEM.L D0/A0,-(A7)
0000137C  4280                     692              CLR.L   D0
0000137E  3039 00002200            693              MOVE.W  (STACUR),D0
00001384  E588                     694              LSL.L   #2,D0
00001386  2040                     695              MOVE.L  D0,A0
00001388  2068 1394                696              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
0000138C  4E90                     697              JSR     (A0)
0000138E  4CDF 0101                698              MOVEM.L (A7)+,D0/A0
00001392  4E75                     699              RTS
00001394= 000013C4 000013A6 ...    700  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAGOVRP
000013A0                           701                                               ; EL 0 ES DIBUJAR LA PANTALLA DE INICIO
000013A0                           702  
000013A0                           703  ; -----------------------------------------------------------------------------
000013A0                           704  STAEMPTY
000013A0                           705  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
000013A0                           706  ; INPUT    - NONE
000013A0                           707  ; OUTPUT   - NONE
000013A0                           708  ; MODIFIES - NONE
000013A0                           709  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
000013A0                           710  ; -----------------------------------------------------------------------------
000013A0  4E75                     711              RTS
000013A2                           712  
000013A2                           713  ; -----------------------------------------------------------------------------
000013A2  =000011DC                714  STAPLAYI    EQU     PLRINIT
000013A2                           715  ; PLAY STATE INITIALIZATION.
000013A2                           716  ; INPUT    - NONE
000013A2                           717  ; OUTPUT   - NONE
000013A2                           718  ; MODIFIES - NONE
000013A2                           719  ; NOTE     - JUST A WRAPPER FOR PLRINIT
000013A2                           720  ; -----------------------------------------------------------------------------
000013A2                           721  
000013A2                           722  ; -----------------------------------------------------------------------------
000013A2                           723  STAPLAYU
000013A2                           724  ; PLAY STATE UPDATE
000013A2                           725  ; INPUT    - NONE
000013A2                           726  ; OUTPUT   - NONE
000013A2                           727  ; MODIFIES - NONE
000013A2                           728  ; -----------------------------------------------------------------------------
000013A2  4EB8 11FC                729              JSR     PLRUPD
000013A6                           730              ;JSR     BUPD
000013A6                           731  
000013A6                           732  
000013A6                           733  ; -----------------------------------------------------------------------------
000013A6                           734  STAPLAYP
000013A6                           735  ; PLAY STATE PLOT
000013A6                           736  ; INPUT    - NONE
000013A6                           737  ; OUTPUT   - NONE
000013A6                           738  ; MODIFIES - NONE
000013A6                           739  ; -----------------------------------------------------------------------------
000013A6                           740  
000013A6  4EB8 1250                741              JSR     PLOTP
000013AA                           742           ;   JSR     PLOTB
000013AA  4EB8 1298                743              JSR     PLOTSCR
000013AE                           744  ;            BRA     PLRPLOT
000013AE                           745  
000013AE                           746  ; -----------------------------------------------------------------------------
000013AE  =0000111A                747  STAINTRI    EQU     DMMINIT                 ;VACIA LA MEMORIA DEL JUEGO
000013AE                           748  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
000013AE                           749  
000013AE                           750  ; INTRO STATE INIT
000013AE                           751  ; INPUT    - NONE
000013AE                           752  ; OUTPUT   - NONE
000013AE                           753  ; MODIFIES - NONE
000013AE                           754  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
000013AE                           755  ; -----------------------------------------------------------------------------
000013AE                           756  
000013AE                           757  ; -----------------------------------------------------------------------------
000013AE                           758  STAINTRU
000013AE                           759  ; INTRO STATE UPDATE
000013AE                           760  ; INPUT    - NONE
000013AE                           761  ; OUTPUT   - NONE
000013AE                           762  ; MODIFIES - NONE
000013AE                           763  ; -----------------------------------------------------------------------------
000013AE  0839 0004 0000155D       764              BTST.B  #KBDBITF1,(KBDEDGE)
000013B6  6700 000A                765              BEQ     .END
000013BA  33FC 0001 00002202       766              MOVE.W  #STAPLAY,(STANEXT)
000013C2  4E75                     767  .END        RTS
000013C4                           768  
000013C4                           769  ; -----------------------------------------------------------------------------
000013C4                           770  STAINTRP
000013C4                           771  ; INTRO STATE PLOT
000013C4                           772  ; INPUT    - NONE
000013C4                           773  ; OUTPUT   - NONE
000013C4                           774  ; MODIFIES - NONE
000013C4                           775  ; -----------------------------------------------------------------------------
000013C4  48E7 C040                776              MOVEM.L A1/D0-D1,-(A7)
000013C8  323C 0807                777              MOVE.W  #INTTITX<<8|INTTITY, D1 ;COORDENADAS DEL TEXTO TITULO
000013CC  103C 000B                778              MOVE.B  #11,D0
000013D0  4E4F                     779              TRAP    #15
000013D2                           780              
000013D2  223C 00DCAA7C            781              MOVE.L  #INTTITC,D1
000013D8  243C 00120001            782              MOVE.L  #18<<16|1,D2
000013DE  103C 0015                783              MOVE.B  #21,D0
000013E2  4E4F                     784              TRAP    #15
000013E4                           785  
000013E4  43F9 0000141E            786              LEA     .TITSTR,A1              ;PONE EL TEXTO
000013EA  103C 000E                787              MOVE.B  #14,D0
000013EE  4E4F                     788              TRAP    #15
000013F0                           789  
000013F0  323C 1732                790              MOVE.W  #INTPRSX<<8|INTPRSY, D1 ;COORDENADAS DEL TEXTO START
000013F4  103C 000B                791              MOVE.B  #11,D0
000013F8  4E4F                     792              TRAP    #15
000013FA                           793              
000013FA  223C 00FFFFFF            794              MOVE.L  #INTPRSC,D1
00001400  243C 000A0001            795              MOVE.L  #10<<16|1,D2
00001406  103C 0015                796              MOVE.B  #21,D0
0000140A  4E4F                     797              TRAP    #15
0000140C                           798              
0000140C  43F9 00001434            799              LEA     .PRSSTR,A1
00001412  103C 000E                800              MOVE.B  #14,D0
00001416  4E4F                     801              TRAP    #15
00001418  4CDF 0203                802              MOVEM.L (A7)+,A1/D0-D1
0000141C  4E75                     803              RTS
0000141E                           804  
0000141E= 20 20 20 42 72 65 ...    805  .TITSTR     DC.B    '   Breaking Blocks   ',0
00001434= 20 50 55 53 48 20 ...    806  .PRSSTR     DC.B    ' PUSH FIRE TO START ',0
0000144A                           807              DS.W    0
0000144A                           808  
0000144A                           809  ; -----------------------------------------------------------------------------
0000144A                           810  STAGOVRU
0000144A                           811  ; GAME OVER STATE UPDATE
0000144A                           812  ; INPUT    - NONE
0000144A                           813  ; OUTPUT   - NONE
0000144A                           814  ; MODIFIES - NONE
0000144A                           815  ; -----------------------------------------------------------------------------
0000144A  0839 0004 0000155D       816              BTST.B  #KBDBITF1,(KBDEDGE)
00001452  6700 000A                817              BEQ     .END
00001456  33FC 0000 00002202       818              MOVE.W  #STAINTR,(STANEXT)
0000145E  4E75                     819  .END        RTS
00001460                           820  
00001460                           821  ; -----------------------------------------------------------------------------
00001460                           822  STAGOVRP
00001460                           823  ; GAME OVER STATE PLOT
00001460                           824  ; INPUT    - NONE
00001460                           825  ; OUTPUT   - NONE
00001460                           826  ; MODIFIES - NONE
00001460                           827  ; -----------------------------------------------------------------------------
00001460  48E7 C040                828              MOVEM.L A1/D0-D1,-(A7)
00001464  323C 230F                829              MOVE.W  #GOVSTRX<<8|GOVSTRY, D1 ;COORDENADAS DEL TEXTO TITULO
00001468  103C 000B                830              MOVE.B  #11,D0
0000146C  4E4F                     831              TRAP    #15
0000146E                           832              
0000146E  103C 0050                833              MOVE.B  #80,D0                  ;DEFINIMOS COLOR DE TITULO
00001472  223C 00FFFFFF            834              MOVE.L  #GOVSTRC,D1
00001478  4E4F                     835              TRAP    #15
0000147A                           836              
0000147A  103C 0051                837              MOVE.B  #81,D0                  ;RELLENA COLOR 
0000147E  223C 00FF0000            838              MOVE.L  #$00FF0000,D1
00001484  4E4F                     839              TRAP    #15
00001486                           840              
00001486  43F9 00001498            841              LEA     .GOVSTR,A1
0000148C  103C 000E                842              MOVE.B  #14,D0
00001490  4E4F                     843              TRAP    #15
00001492  4CDF 0203                844              MOVEM.L (A7)+,A1/D0-D1
00001496  4E75                     845              RTS
00001498                           846  
00001498= 47 41 4D 45 20 20 ...    847  .GOVSTR     DC.B    'GAME  OVER',0
000014A4                           848              DS.W    0
000014A4                           849  
000014A4                           850  
000014A4                           851  
000014A4                           852  -------------------- end include --------------------
000014A4                           853              INCLUDE "BALL.X68"              ;LA PELOTA
000014A4                           854  ; =============================================================================
000014A4                           855  ; BALL
000014A4                           856  ; =============================================================================
000014A4                           857  
000014A4                           858  BINIT
000014A4  33FC 00D0 0000220E       859              MOVE.W  #BINPOSX,BPOSX
000014AC  33FC 01AE 00002210       860              MOVE.W  #BINPOSY,BPOSY
000014B4  33FC 0005 00002212       861              MOVE.W  #BINSPEED,BSPEEDX
000014BC  33FC 0005 00002214       862              MOVE.W  #BINSPEED,BSPEEDY
000014C4  4E75                     863              RTS
000014C6                           864              
000014C6                           865  BUPD        
000014C6  48E7 6000                866              MOVEM.L D1-D2,-(A7)
000014CA                           867              
000014CA  3239 0000220E            868  .LEFT       MOVE.W  BPOSX,D1
000014D0  B27C 0000                869              CMP.W    #0,D1                  ;CHOCA
000014D4  6E00 0012                870              BGT     .RIGHT                  ;SALTA SI CHOCA
000014D8  3439 00002212            871              MOVE.W  BSPEEDX,D2
000014DE  C5FC FFFF                872              MULS.W  #$FFFF,D2
000014E2  33C2 00002212            873              MOVE.W  D2,BSPEEDX
000014E8                           874  .RIGHT       
000014E8  D579 0000220E            875              ADD.W   D2,BPOSX
000014EE  3439 00002214            876              MOVE.W  BSPEEDY,D2
000014F4  D579 00002210            877              ADD.W   D2,BPOSY
000014FA                           878              
000014FA  3239 0000220E            879              MOVE.W  BPOSX,D1
00001500  3438 01AA                880              MOVE.W  SCRCTRL,D2
00001504  5B42                     881              SUB.W   #BWIDTH,D2
00001506  B242                     882              CMP.W    D2,D1
00001508  6D00 0012                883              BLT     .END
0000150C  3439 00002212            884              MOVE.W  BSPEEDX,D2
00001512  C5FC FFFF                885              MULS.W  #$FFFF,D2
00001516  33C2 00002212            886              MOVE.W  D2,BSPEEDX
0000151C                           887  .END            
0000151C  D579 0000220E            888              ADD.W   D2,BPOSX
00001522  3439 00002214            889              MOVE.W  BSPEEDY,D2
00001528  D579 00002210            890              ADD.W   D2,BPOSY
0000152E                           891              
0000152E  4CDF 0006                892              MOVEM.L (A7)+,D1-D2
00001532                           893              
00001532  4E75                     894              RTS
00001534                           895  
00001534                           896  -------------------- end include --------------------
00001534                           897              ; TO DO: PUT YOUR GAME-RELATED INCLUDES HERE
00001534                           898  
00001534                           899  ; --- INITIALIZE --------------------------------------------------------------
00001534                           900              
00001534  4EB8 1000                901  START       JSR     SYSINIT
00001538                           902              ; TO DO: CALL GAME INITIALIZATION CODE HERE
00001538  4EB8 1310                903              JSR     STAINIT                 ;INICIA LAS PANTALLAS
0000153C                           904              ;JSR     PLRINIT
0000153C                           905              
0000153C                           906              
0000153C                           907  ; --- UPDATE ------------------------------------------------------------------
0000153C                           908  
0000153C  4E40                     909  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
0000153E                           910              ;JSR     PLRUPD                      
0000153E  4EB8 1322                911              JSR     STAUPD                  ; UPDATE DEPENDING ON THE STATE
00001542                           912              ;JSR     BUPD
00001542                           913              ; TO DO: CALL GAME UPDATE CODE HERE
00001542                           914  
00001542                           915  ; --- WAIT SYNCH --------------------------------------------------------------
00001542                           916  
00001542  4A39 0000155E            917  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001548  67F8                     918              BEQ     .WINT
0000154A                           919              
0000154A  4239 0000155E            920              CLR.B   (SCRINTCT)
00001550                           921  
00001550                           922  ; --- PLOT --------------------------------------------------------------------
00001550                           923              
00001550                           924              ; TO DO: CALL GAME PLOT CODE HERE
00001550  4EB8 1378                925              JSR     STAPLOT
00001554                           926              ;JSR     PLOTSCR
00001554                           927              ;JSR     PLOTP
00001554                           928              ;JSR     PLOTB
00001554                           929  
00001554  4E41                     930              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001556  60E4                     931              BRA     .LOOP
00001558  FFFF FFFF                932              SIMHALT
0000155C                           933  
0000155C                           934  ; --- VARIABLES ---------------------------------------------------------------
0000155C                           935  
0000155C                           936              INCLUDE "SYSVAR.X68"
0000155C                           937  ; =============================================================================
0000155C                           938  ; SYSTEM VARS
0000155C                           939  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
0000155C                           940  ; THEY MUST NOT BE IN PROTECTED MEMORY.
0000155C                           941  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
0000155C                           942  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
0000155C                           943  ; THIS IS GOOD ENOUGH.
0000155C                           944  ; =============================================================================
0000155C                           945  
0000155C                           946  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
0000155C                           947  
0000155C                           948  KBDVAL      DS.B    1                       ; KEY PRESSED=1
0000155D                           949  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
0000155E                           950  
0000155E                           951              DS.W    0
0000155E                           952  
0000155E                           953  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
0000155E                           954  
0000155E                           955  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
0000155F                           956  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001560                           957              DS.W    0
00001560                           958  
00001560                           959  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001560                           960  
00001580                           961              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001580                           962  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002200                           963              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002200                           964  
00002200                           965  
00002200                           966  
00002200                           967  -------------------- end include --------------------
00002200                           968              INCLUDE "VAR.X68"
00002200                           969  ; =============================================================================
00002200                           970  ; GAME VARS
00002200                           971  ; =============================================================================
00002200                           972  
00002200                           973  ; TO DO: DECLARE GAME VARIABLES HERE.
00002200                           974  
00002200                           975  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
00002200                           976  
00002200                           977  STACUR      DS.W    1                       ; CURRENT GAME STATE
00002202                           978  STANEXT     DS.W    1                       ; NEXT GAME STATE
00002204                           979  ;----------------------------------------------------------------------------
00002204                           980  
00002204                           981  ; PLAYER --------------------------------------------------------------------
00002204                           982  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
00002206                           983  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
00002208                           984  PLIVES      DS.W    1                       ;LIVES LEFT
0000220A                           985  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
0000220C                           986  PSPEED      DS.W    1
0000220E                           987  ;----------------------------------------------------------------------------
0000220E                           988  
0000220E                           989  ; BALL ----------------------------------------------------------------------
0000220E                           990  BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
00002210                           991  BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
00002212                           992  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
00002214                           993  BSPEEDY     DS.W    1
00002216                           994  BCOLOR      DS.W    1
00002218                           995  
00002218                           996  
00002218                           997  
00002218                           998  
00002218                           999  -------------------- end include --------------------
00002218                          1000              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              2216
BHEIGHT             5
BINCOLOR            FFFFFFF
BINIT               14A4
BINPOSX             D0
BINPOSY             1AE
BINSPEED            5
BPOSX               220E
BPOSY               2210
BSPEEDX             2212
BSPEEDY             2214
BUPD                14C6
BUPD:END            151C
BUPD:LEFT           14CA
BUPD:RIGHT          14E8
BWIDTH              5
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1580
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
GOVSTRC             FFFFFF
GOVSTRX             23
GOVSTRY             F
INTPRSC             FFFFFF
INTPRSX             17
INTPRSY             32
INTTITC             DCAA7C
INTTITX             8
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             155D
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              155C
PCOLOR              ECD59D
PHEIGHT             14
PINLIVE             3
PINPOSX             A3
PINWIDTH            64
PLIVES              2208
PLOTB               12C4
PLOTP               1250
PLOTSCR             1298
PLRINIT             11DC
PLRUPD              11FC
PLRUPD:END          124A
PLRUPD:RIGHTKEY     1222
PMOVE               F
PPOSX               2204
PPOSY               1C2
PSCORE              220A
PSPEED              220C
PWIDTH              2206
SCRCTRL             1AA
SCRCYCCT            155F
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            155E
SCRIRQ              1
SCRISR              107E
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            280
STACUR              2200
STAEMPTY            13A0
STAGOVR             2
STAGOVRP            1460
STAGOVRP:GOVSTR     1498
STAGOVRU            144A
STAGOVRU:END        145E
STAINIT             1310
STAINTR             0
STAINTRI            111A
STAINTRP            13C4
STAINTRP:PRSSTR     1434
STAINTRP:TITSTR     141E
STAINTRU            13AE
STAINTRU:END        13C2
STANEXT             2202
STANONE             FFFFFFFF
STAPLAY             1
STAPLAYI            11DC
STAPLAYP            13A6
STAPLAYU            13A2
STAPLOT             1378
STAPLOT:PLTTBL      1394
START               1534
START:LOOP          153C
START:WINT          1542
STAUPD              1322
STAUPD:DOUPD        1348
STAUPD:INITBL       1360
STAUPD:UPDTBL       136C
SYSINIT             1000
