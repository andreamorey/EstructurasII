00001D24 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 29/12/2019 21:33:35

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION : 
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8              
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =000002E4                 81  SCRWIDTH    EQU     740                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  
00001000                            93  -------------------- end include --------------------
00001000                            94              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            95  ; =============================================================================
00001000                            96  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            97  ; =============================================================================
00001000                            98  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101  ; INITIALIZES THE SYSTEM
00001000                           102  ; INPUT    - NONE
00001000                           103  ; OUTPUT   - NONE
00001000                           104  ; MODIFIES - NONE
00001000                           105  ; -----------------------------------------------------------------------------
00001000  205F                     106              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            107              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            108              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            109              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                110              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     111              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     112              RTS
0000101C                           113  
0000101C                           114  ; =============================================================================
0000101C                           115  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           116  ; =============================================================================
0000101C                           117  
0000101C                           118  ; -----------------------------------------------------------------------------
0000101C                           119  SCRINIT
0000101C                           120  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           121  ; INPUT    - NONE
0000101C                           122  ; OUTPUT   - NONE
0000101C                           123  ; MODIFIES - D0,D1,D2,D3
0000101C                           124  ; -----------------------------------------------------------------------------
0000101C                           125              ; TO DO:
0000101C                           126              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                127              ORI.W   #$0700,SR
00001020                           128              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           129              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       130              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           131              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                132              MOVE.B  #33,D0
0000102C  223C 02E401E0            133              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     134              TRAP    #15
00001034                           135              ; - SET WINDOWED MODE
00001034  7201                     136              MOVE.L  #1,D1
00001036  4E4F                     137              TRAP    #15
00001038                           138              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                139              MOVE.B  #11,D0
0000103C  323C FF00                140              MOVE.W  #$FF00,D1
00001040  4E4F                     141              TRAP    #15
00001042                           142              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                143              MOVE.B  #92,D0
00001046  123C 0011                144              MOVE.B  #17,D1
0000104A  4E4F                     145              TRAP    #15
0000104C                           146              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     147              MOVE.L  #11,D0
0000104E  323C FF00                148              MOVE.W  #$FF00,D1
00001052  4E4F                     149              TRAP    #15
00001054                           150              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           151              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       152              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           153              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           154              ;   TASK 32)
0000105C  103C 0020                155              MOVE.B  #32,D0
00001060  123C 0006                156              MOVE.B  #6,D1
00001064                           157         
00001064  143C 0081                158              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     159              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     160              TRAP    #15
0000106C                           161              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 00001D4E            162              CLR.B   SCRINTCT
00001072  4239 00001D4F            163              CLR.B   SCRCYCCT
00001078                           164              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                165              ANDI.W  #$F8FF,SR
0000107C  4E75                     166              RTS
0000107E                           167  
0000107E                           168  ; -----------------------------------------------------------------------------
0000107E                           169  SCRISR
0000107E                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           171  ; INPUT    - NONE
0000107E                           172  ; OUTPUT   - NONE
0000107E                           173  ; MODIFIES - NONE
0000107E                           174  ; -----------------------------------------------------------------------------
0000107E  5239 00001D4E            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 00001D4F            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     177              RTE
0000108C                           178  
0000108C                           179  ; -----------------------------------------------------------------------------
0000108C                           180  SCRUPD
0000108C                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           182  ; BUFFER FOR THE NEXT ONE.
0000108C                           183  ; INPUT    - NONE
0000108C                           184  ; OUTPUT   - NONE
0000108C                           185  ; MODIFIES - NONE
0000108C                           186  ; -----------------------------------------------------------------------------
0000108C                           187              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                188              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                189              MOVE.B  #94,D0
00001094  4E4F                     190              TRAP    #15
00001096  103C 000B                191              MOVE.B  #11,D0
0000109A  323C FF00                192              MOVE.W  #$FF00,D1
0000109E  4E4F                     193              TRAP    #15
000010A0  4CDF 0003                194              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     195              RTE
000010A6                           196  
000010A6                           197  ; =============================================================================
000010A6                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           199  ; =============================================================================
000010A6                           200  
000010A6                           201  ; -----------------------------------------------------------------------------
000010A6                           202  KBDINIT
000010A6                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           204  ; INPUT    - NONE
000010A6                           205  ; OUTPUT   - NONE
000010A6                           206  ; MODIFIES - NONE
000010A6                           207  ; -----------------------------------------------------------------------------
000010A6  4239 00001D4C            208              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 00001D4D            209              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     211              RTS
000010BC                           212  
000010BC                           213  ; -----------------------------------------------------------------------------
000010BC                           214  KBDREAD
000010BC                           215  ; TRAP SERVICE ROUTINE.
000010BC                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           219  ; INPUT    - NONE
000010BC                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           221  ; MODIFIES - NONE
000010BC                           222  ; -----------------------------------------------------------------------------
000010BC                           223              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                224              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                225              MOVE.B  #19,D0
000010C4                           226              
000010C4  223C 50104D20            227              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     228              TRAP    #15
000010CC                           229          
000010CC  4202                     230              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                231              MOVE.W  #3,D4
000010D2                           232              
000010D2                           233  .LOOP1      
000010D2                           234       
000010D2  E189                     235              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     236              MOVE.W  SR,D3                   
000010D6  0243 0001                237              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     238              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     239              OR.B    D3,D2                   
000010DE  51CC FFF2                240              DBRA    D4,.LOOP1
000010E2                           241          
000010E2                           242              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           243              
000010E2  223C 28272625            244              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     245              TRAP    #15
000010EA                           246              
000010EA  383C 0003                247              MOVE.W  #3,D4
000010EE                           248  .LOOP2      
000010EE  E189                     249              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     250              MOVE.W  SR,D3
000010F2  0243 0001                251              ANDI.W  #$0001,D3    
000010F6  E30A                     252              LSL.B   #1,D2
000010F8  8403                     253              OR.B    D3,D2
000010FA                           254              
000010FA  51CC FFF2                255              DBRA    D4,.LOOP2
000010FE                           256              
000010FE                           257              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           258              
000010FE                           259              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 00001D4C            260              MOVE.B  KBDVAL,D3
00001104  4603                     261              NOT.B   D3
00001106  13C2 00001D4C            262              MOVE.B  D2,KBDVAL
0000110C  C602                     263              AND.B   D2,D3
0000110E  13C3 00001D4D            264              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                265              MOVEM.L (A7)+,D0-D4
00001118  4E73                     266              RTE
0000111A                           267  
0000111A                           268  ; =============================================================================
0000111A                           269  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           270  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           271  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           272  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           273  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           274  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           275  ; =============================================================================
0000111A                           276  
0000111A                           277  ; -----------------------------------------------------------------------------
0000111A                           278  DMMINIT
0000111A                           279  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           280  ; INPUT    - NONE
0000111A                           281  ; OUTPUT   - NONE
0000111A                           282  ; MODIFIES - NONE
0000111A                           283  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                284              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001D80            285              LEA     DMMDATA,A0
00001124  303C 0031                286              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                287  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            288              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                289              DBRA.W  D0,.LOOP
00001136  4CDF 0101                290              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     291              RTS
0000113C                           292  
0000113C                           293  ; -----------------------------------------------------------------------------
0000113C                           294  DMMFIRST
0000113C                           295  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           296  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           297  ; INPUT    - NONE
0000113C                           298  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           299  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           300  ; -----------------------------------------------------------------------------
0000113C  41F9 00001D80            301              LEA     DMMDATA,A0
00001142  4A58                     302  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                303              BNE     DMMFRFND
00001148  D1FC 0000003E            304              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 000029FF            305  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     306              BLT     DMMFRLOP
00001156  207C 00000000            307              MOVE.L  #0,A0
0000115C  4E75                     308  DMMFRFND    RTS
0000115E                           309  
0000115E                           310  ; -----------------------------------------------------------------------------
0000115E                           311  DMMNEXT
0000115E                           312  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           313  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           314  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           315  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           316  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           317  ; -----------------------------------------------------------------------------
0000115E  2F00                     318              MOVE.L  D0,-(A7)
00001160  2008                     319              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            320              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            321              ADD.L   #DMMBSIZE,D0
0000116E  2040                     322              MOVE.L  D0,A0
00001170  201F                     323              MOVE.L  (A7)+,D0
00001172  60DA                     324              BRA     DMMFRCOM
00001174                           325  
00001174                           326  ; -----------------------------------------------------------------------------
00001174                           327  DMMFRSTO
00001174                           328  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           329  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           330  ; INPUT    - D0.W : ID TO SEARCH
00001174                           331  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           332  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           333  ; -----------------------------------------------------------------------------
00001174  41F9 00001D80            334              LEA     DMMDATA,A0
0000117A  B058                     335  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                336              BEQ     DMMFFND
00001180  D1FC 0000003E            337              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 000029FF            338  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     339              BLT     DMMFLOOP
0000118E  207C 00000000            340              MOVE.L  #0,A0
00001194  4E75                     341  DMMFFND     RTS
00001196                           342  
00001196                           343  ; -----------------------------------------------------------------------------
00001196                           344  DMMNEXTO
00001196                           345  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           346  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           347  ; INPUT    - D0.W : ID TO SEARCH
00001196                           348  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           351  ; -----------------------------------------------------------------------------
00001196  2F00                     352              MOVE.L  D0,-(A7)
00001198  2008                     353              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011A6  2040                     356              MOVE.L  D0,A0
000011A8  201F                     357              MOVE.L  (A7)+,D0
000011AA  60DA                     358              BRA     DMMFCOM
000011AC                           359  
000011AC                           360  ; -----------------------------------------------------------------------------
000011AC                           361  DMMALLOC
000011AC                           362  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           363  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           364  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           367  ; -----------------------------------------------------------------------------
000011AC  3F00                     368              MOVE.W  D0,-(A7)
000011AE  4240                     369              CLR.W   D0
000011B0  4EB8 1174                370              JSR     DMMFRSTO
000011B4  301F                     371              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            372              CMP.L   #0,A0
000011BC  6700 0006                373              BEQ     .END
000011C0  3140 FFFE                374              MOVE.W  D0,-2(A0)
000011C4  4E75                     375  .END        RTS
000011C6                           376  
000011C6                           377  ; -----------------------------------------------------------------------------
000011C6                           378  DMMFREE
000011C6                           379  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           380  ; SYSTEM (0)
000011C6                           381  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           382  ; OUTPUT   - NONE
000011C6                           383  ; MODIFIES - NONE
000011C6                           384  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                385              MOVEM.L D0/A0,-(A7)
000011CA  2008                     386              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            387              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     388              MOVE.L  D0,A0
000011D4  4250                     389              CLR.W   (A0)
000011D6  4CDF 0101                390              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     391              RTS
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  
000011DC                           407  
000011DC                           408  
000011DC                           409  
000011DC                           410  
000011DC                           411  
000011DC                           412  
000011DC                           413  -------------------- end include --------------------
000011DC                           414              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           415  ; =============================================================================
000011DC                           416  ; CONSTANTS
000011DC                           417  ; =============================================================================
000011DC                           418  
000011DC                           419  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           420  
000011DC  =0000000E                421  INTTITX     EQU     14                      ; TITLE X COORDINATE
000011DC  =00000007                422  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                423  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000020                424  INTPRSX     EQU     32                      ; PRESS FIRE X COORDINATE
000011DC  =00000052                425  INTPRSY     EQU     82                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                426  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC  =00000012                427  TXBSIZE     EQU     18                      ;BIG SIZE LETTERS
000011DC  =00000010                428  TXMSIZE     EQU     16                      ;MEDIUM SIZE LETTERS
000011DC  =0000000A                429  TXSSIZE     EQU     10                      ;SMALL SIZE LETTERS
000011DC                           430  
000011DC                           431  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                432  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                433  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                434  STASPACE    EQU     1                       ; ESPERA EL ESPACIO PARA DISPARAR LA BOLA 
000011DC  =00000002                435  STAPLAY    EQU     2                       ; NORMAL GAME STATE
000011DC                           436  ;STAPLAY2    EQU     3
000011DC                           437  ;STAPLAY3    EQU     4
000011DC  =00000003                438  STAGOVR     EQU     3                       ; GAME OVER STATE
000011DC                           439  ;----------------------------------------------------------------------------
000011DC                           440  
000011DC                           441  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           442  
000011DC  =00000012                443  GOVERX      EQU     18                      ; GAME OVER X COORDINATE
000011DC  =00000007                444  GOVERY      EQU     7                       ; GAME OVER Y COORDINATE
000011DC  =0000FFFF                445  GOVERC      EQU     $0000FFFF               ; GAME OVER COLOR
000011DC                           446  
000011DC                           447  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =00000201                448  SCRCTRL     EQU     513   
000011DC  =00000005                449  SCRLWIDTH   EQU     5
000011DC  =00000040                450  LIVEWIDTH   EQU     64
000011DC  =00000010                451  LIVEHEIGHT  EQU     16
000011DC  =000000FF                452  LIVECOLOR   EQU     $000000FF               ;ROJO
000011DC  =00000215                453  LIVEPOSX    EQU     SCRCTRL+20
000011DC  =0000001E                454  LIVEPOSY    EQU     30
000011DC= 73 63 6F 72 65 2E ...    455  FILE        DC.B    'score.txt',0
000011E6                           456  ;----------------------------------------------------------------------------
000011E6                           457  
000011E6                           458  
000011E6                           459  ; PLAYER --------------------------------------------------------------------
000011E6                           460  
000011E6  =00000040                461  PINWIDTH1    EQU     64                      ; PLAYER INITIAL WIDTH (PIXELS)
000011E6  =00000038                462  PINWIDTH2    EQU     56
000011E6  =00000030                463  PINWIDTH3    EQU     48
000011E6  =0000000C                464  PHEIGHT     EQU     12                      ; PLAYER HEIGHT (PIXELS)
000011E6  =00ECD59D                465  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011E6  =00000003                466  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011E6  =00000008                467  PMOVE       EQU     8                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011E6  =000001D0                468  PPOSY       EQU     SCRHEIGH-PHEIGHT-4      ;POSICION DE LA PLATAFORMA Y
000011E6  =000000E0                469  PINPOSX1     EQU     SCRCTRL/2-PINWIDTH1/2
000011E6  =000000E4                470  PINPOSX2     EQU     SCRCTRL/2-PINWIDTH2/2
000011E6  =000000E8                471  PINPOSX3     EQU     SCRCTRL/2-PINWIDTH3/2
000011E6  =00000032                472  PSCORETX     EQU    50                       ; SCORE X COORDINATE
000011E6  =00000004                473  PSCORETY     EQU    4                       ; SCORE Y COORDINATE
000011E6  =00FFFFFF                474  PSCORECOL   EQU     $00FFFFFF
000011E6                           475  ; ---------------------------------------------------------------------------
000011E6                           476  
000011E6                           477  ; BALL ----------------------------------------------------------------------
000011E6  =0000000A                478  BDIAMET     EQU     10                       ;ANCHURA DE LA BOLA
000011E6  =000000FB                479  BINPOSX     EQU     SCRCTRL/2-BDIAMET/2     ;POSICION DE LA PELOTA X INICIAL
000011E6  =000001CE                480  BINPOSY     EQU     PPOSY-2                 ;POSICION DE LA PELOTA Y INICIAL
000011E6  =FFFFFFFD                481  BINSPEED    EQU     -3                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011E6                           482  
000011E6  =00FFFFFF                483  BINCOLOR    EQU     $00FFFFFF
000011E6                           484  
000011E6                           485  ; ---------------------------------------------------------------------------
000011E6                           486  
000011E6                           487  
000011E6                           488  ;BLOCKS-------------------------------------------------------------------------
000011E6  =00000040                489  BLWIDTH     EQU     64
000011E6  =00000010                490  BLHEIGHT     EQU     16
000011E6= 00F7E78E 004E8CF3 ...    491  COLORS      DC.L    BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE
00001216  =0000000C                492  BLROW       EQU     12
00001216  =00000008                493  BLCOL       EQU     8
00001216                           494  
00001216                           495  
00001216                           496  ;-------------------------------------------------------------------------------
00001216                           497  
00001216                           498  ;COLORS-------------------------------------------------------------
00001216  =004E8CF3                499  ORANGE      EQU     $004E8CF3
00001216  =00F7E78E                500  BLUE        EQU     $00F7E78E
00001216  =00FFACAC                501  PURPLE      EQU     $00FFACAC
00001216  =0038EEF8                502  YELLOW      EQU     $0038EEF8
00001216  =0095FF8C                503  GREEN       EQU     $0095FF8C
00001216                           504  ;-------------------------------------------------------------------
00001216                           505  
00001216                           506  
00001216                           507  
00001216                           508  
00001216                           509  
00001216                           510  
00001216                           511  
00001216                           512  
00001216                           513  
00001216                           514  
00001216                           515  
00001216                           516  
00001216                           517  
00001216                           518  
00001216                           519  
00001216                           520  
00001216                           521  
00001216                           522  
00001216                           523  
00001216                           524  
00001216                           525  
00001216                           526  
00001216                           527  
00001216                           528  
00001216                           529  
00001216                           530  
00001216                           531  
00001216                           532  -------------------- end include --------------------
00001216                           533              INCLUDE "UTIL.X68"
00001216                           534  ; =============================================================================
00001216                           535  ; UTILITY MACROS
00001216                           536  ; =============================================================================
00001216                           537  
00001216                           538  UTLSPEN     MACRO
00001216                           539  ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001216                           540  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
00001216                           541  ; OUTPUT   - NONE
00001216                           542  ; MODIFIES - D0,D1
00001216                           543  ; -----------------------------------------------------------------------------
00001216                           544              MOVE.B  #80,D0
00001216                           545              MOVE.L  \1,D1
00001216                           546              TRAP    #15
00001216                           547              ENDM
00001216                           548  
00001216                           549  ; -----------------------------------------------------------------------------
00001216                           550  UTLSIZC     MACRO
00001216                           551  ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001216                           552  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR \2 SIZE (8, 9, 10, 12, 14, 16, 18))
00001216                           553  ; OUTPUT   - NONE
00001216                           554  ; MODIFIES - D0,D1
00001216                           555  ; -----------------------------------------------------------------------------
00001216                           556              MOVE.L  \1,D1
00001216                           557              MOVE.L  #\2<<16|1,D2
00001216                           558              MOVE.B  #21,D0
00001216                           559              TRAP    #15
00001216                           560              ENDM
00001216                           561  ; -----------------------------------------------------------------------------
00001216                           562  UTLSFIL     MACRO
00001216                           563  ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001216                           564  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
00001216                           565  ; OUTPUT   - NONE
00001216                           566  ; MODIFIES - D0,D1
00001216                           567  ; -----------------------------------------------------------------------------
00001216                           568              MOVE.B  #81,D0
00001216                           569              MOVE.L  \1,D1
00001216                           570              TRAP    #15
00001216                           571              ENDM
00001216                           572              
00001216                           573  ; -----------------------------------------------------------------------------
00001216                           574  UTLLOCT     MACRO
00001216                           575  ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001216                           576  ; INPUT    - \1 X, \2 Y
00001216                           577  ; OUTPUT   - NONE
00001216                           578  ; MODIFIES - D0,D1
00001216                           579  ; -----------------------------------------------------------------------------
00001216                           580              MOVE.W  #\1<<8|\2, D1
00001216                           581              MOVE.B  #11,D0
00001216                           582              TRAP    #15
00001216                           583              ENDM
00001216                           584     
00001216                           585  ; -----------------------------------------------------------------------------
00001216                           586  UTLSNDS     MACRO
00001216                           587  ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001216                           588  ; INPUT    - \1 ADDRESS TO STRING WITH NAME OF THE FILE, \2 NUM SOUNDS, 
00001216                           589  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001216                           590  ; MODIFIES - D0,A1
00001216                           591  ; -----------------------------------------------------------------------------
00001216                           592              LEA     \1, A1             ;PLAY EXPLOSION SOUND
00001216                           593              MOVE.W  \2,D1
00001216                           594              MOVE.B  #71,D0
00001216                           595              TRAP    #15
00001216                           596              MOVE.B  #72,D0
00001216                           597              TRAP    #15
00001216                           598              
00001216                           599              ENDM
00001216                           600              
00001216                           601  ; -----------------------------------------------------------------------------
00001216                           602  UTLSNDST     MACRO
00001216                           603  ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001216                           604  ; INPUT    - NONE 
00001216                           605  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001216                           606  ; MODIFIES - D0,A1
00001216                           607  ; -----------------------------------------------------------------------------
00001216                           608              MOVE.L  #3,D2
00001216                           609              MOVE.B  #76,D0
00001216                           610              TRAP    #15
00001216                           611              
00001216                           612              ENDM
00001216                           613  ; -----------------------------------------------------------------------------            
00001216                           614  UTLSVNAME  MACRO
00001216                           615  ;SAVES THE NAME OS THE PLAYER
00001216                           616  ;MAX CARACTERS: 20
00001216                           617  ; -----------------------------------------------------------------------------
00001216                           618              LEA.L   .INSTRUCT,A1            ;hacer que escriba
00001216                           619              MOVE.B  #14,D0
00001216                           620              TRAP    #15
00001216                           621              
00001216                           622              LEA.L   PNAME,A1                ;GUARDAMOS EL NOMBRE
00001216                           623              MOVE.B  #2,D0
00001216                           624              TRAP    #15                     ;(A1) = PNAME
00001216                           625              MOVE.W  D1,PLSIZE
00001216                           626              RTS
00001216                           627  .INSTRUCT   DC.B    'ENTER YOUR NAME: ',0
00001216                           628              
00001216                           629              ENDM
00001216                           630  
00001216                           631  ; -----------------------------------------------------------------------------
00001216                           632  UTLADDPL   
00001216                           633  ;AÑADE AL JUGADOR AL FICHERO (POR AHORA SIN PUNTOS)
00001216                           634  ; -----------------------------------------------------------------------------
00001216  103C 0032                635              MOVE.B  #50,D0  ;CERRAMOS TODOS LOS FICHERO
0000121A  4E4F                     636              TRAP    #15
0000121C                           637              
0000121C  43F8 11DC                638              LEA.L   FILE,A1                 ;ABRE NUESTRO FICHERO
00001220  103C 0033                639              MOVE.B  #51,D0                  
00001224  4E4F                     640              TRAP    #15                     ;DEVUELVE EL ID DE FICHERO EN D1
00001226                           641              
00001226  43F9 00002A10            642              LEA.L   PNAME,A1                ;escribimos en el fichero 
0000122C                           643              ;D1 YA TINENE EL ID DEL FICHERO
0000122C  4282                     644              CLR.L   D2
0000122E  3439 00002ACE            645              MOVE.W  PLSIZE,D2              
00001234  5242                     646              ADD.W   #1,D2                   ;5 + 1 
00001236  103C 0036                647              MOVE.B  #54,D0
0000123A  4E4F                     648              TRAP    #15
0000123C                           649             
0000123C  103C 0038                650              MOVE.B  #56,D0                  ;cerramos fichero
00001240  4E4F                     651              TRAP    #15
00001242  4E75                     652              RTS
00001244                           653              
00001244                           654  
00001244                           655  ; =============================================================================
00001244                           656  ; UTILITY SUBROUTINES
00001244                           657  ; =============================================================================
00001244                           658  ; -----------------------------------------------------------------------------
00001244                           659  UTLCHCOLW
00001244                           660  ; CHECKS COLLISION WITH WALL
00001244                           661  ; INPUT    - D0.W BPOSX1
00001244                           662  ;            D1.W BPOSY1
00001244                           663  ;            D2.W BPOSX2
00001244                           664  ;            D3.W BPOSY2
00001244                           665  ; OUTPUT   - 
00001244                           666  ; MODIFIES - 
00001244                           667  ; -----------------------------------------------------------------------------
00001244  48E7 F080                668              MOVEM.L D0-D3/A0,-(A7)
00001248  41F9 00001326            669              LEA.L   .COLLISIONS,A0
0000124E  B258                     670              CMP.W   (A0)+,D1      ;UP
00001250  6E00 001C                671              BGT     .LEFT
00001254                           672  
00001254  4479 00002A62            673              NEG.W   BSPEEDY
0000125A  4279 00002A6C            674              CLR.W   BPOSY1
00001260  33FC 000A 00002A6E       675              MOVE.W  #BDIAMET,BPOSY2
00001268  4EF9 00001320            676              JMP     .END 
0000126E                           677  .LEFT        
0000126E  B058                     678              CMP.W   (A0)+,D0
00001270  6E00 001C                679              BGT     .RIGHT
00001274  4479 00002A60            680              NEG.W   BSPEEDX
0000127A  4279 00002A68            681              CLR.W   BPOSX1
00001280  33FC 000A 00002A6A       682              MOVE.W  #BDIAMET,BPOSX2
00001288  4EF9 00001320            683              JMP     .END
0000128E                           684  .RIGHT      
0000128E                           685              
0000128E  B458                     686              CMP.W   (A0)+,D2
00001290  6D00 001E                687              BLT     .DOWN
00001294  4479 00002A60            688              NEG.W   BSPEEDX
0000129A  33FC 0201 00002A6A       689              MOVE.W  #SCRCTRL,BPOSX2
000012A2  33FC 01F7 00002A68       690              MOVE.W  #SCRCTRL-BDIAMET,BPOSX1
000012AA  4EF9 00001320            691              JMP     .END
000012B0                           692  .DOWN       
000012B0  B658                     693              CMP.W   (A0)+,D3         
000012B2  6E00 0008                694              BGT     .MINLIVE                  
000012B6  4EF9 00001320            695              JMP     .END  
000012BC                           696  .MINLIVE       
000012BC                           697m             UTLSNDS .SOUNDL,#1
000012BC                           698m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000012BC                           699m ; INPUT    - .SOUNDL ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000012BC                           700m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012BC                           701m ; MODIFIES - D0,A1
000012BC                           702m ; -----------------------------------------------------------------------------
000012D2  33FC 01E0 00002A6E       703              MOVE.W  #SCRHEIGH,BPOSY2
000012DA  33FC 01D6 00002A6C       704              MOVE.W  #SCRHEIGH-BDIAMET,BPOSY1 
000012E2  5379 00002A08            705              SUB.W   #1,PLIVES                
000012E8  6600 002E                706              BNE     .RESET               ;SALTA SI NO SE HAN AGOTADO LAS VIDAS              
000012EC                           707m             UTLSNDST
000012EC                           708m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
000012EC                           709m ; INPUT    - NONE 
000012EC                           710m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012EC                           711m ; MODIFIES - D0,A1
000012EC                           712m ; -----------------------------------------------------------------------------
000012F4                           713m             UTLSNDS .SOUNDG,#1
000012F4                           714m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000012F4                           715m ; INPUT    - .SOUNDG ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000012F4                           716m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012F4                           717m ; MODIFIES - D0,A1
000012F4                           718m ; -----------------------------------------------------------------------------
0000130A  33FC 0003 00002A02       719              MOVE.W  #STAGOVR,(STANEXT)
00001312  4EF9 00001320            720              JMP     .END
00001318                           721  .RESET     
00001318                           722              
00001318  33FC 0001 00002A02       723              MOVE.W  #STASPACE,(STANEXT) 
00001320                           724             
00001320                           725  .END        
00001320  4CDF 010F                726              MOVEM.L (A7)+,D0-D3/A0
00001324  4E75                     727              RTS
00001326= 0000 0000 0201 01E0      728  .COLLISIONS DC.W    0,0,SCRCTRL,SCRHEIGH
0000132E= 67616D65 206F7665 ...    729  .SOUNDG      DC.L    'game over.wav',0
00001342= 6C6F7365 206C6966 ...    730  .SOUNDL     DC.L    'lose life.wav',0
00001356                           731  ; -----------------------------------------------------------------------------
00001356                           732  UTLCHCOLP
00001356                           733  ; CHECKS COLLISION WITH PLATAFORM
00001356                           734  ; INPUT    - D0.W BPOSX1
00001356                           735  ;            D1.W BPOSY1
00001356                           736  ;            D2.W PPOSX2
00001356                           737  ;            D3.W PPOSY2
00001356                           738  ; OUTPUT   
00001356                           739  ;           
00001356                           740  ; MODIFIES - D4,D5
00001356                           741  ; -----------------------------------------------------------------------------
00001356  48E7 0C00                742              MOVEM.L D4-D5,-(A7)
0000135A  383C 01D0                743              MOVE.W  #PPOSY,D4
0000135E  B644                     744              CMP.W   D4,D3
00001360  6D00 0086                745              BLT     .END                    ;SI ESTÁ MÁS A ARRIBA DE LA PLATAFORMA NO HAY COLISIÓN
00001364  3839 00002A04            746              MOVE.W  PPOSX,D4
0000136A  B444                     747              CMP.W   D4,D2
0000136C  6D00 007A                748              BLT     .END                    ;SI ESTÁ MÁS A LA IZQUIERDA DE LA PLATAFORMA NO HAY COLISIÓN
00001370  D879 00002A06            749              ADD.W   PWIDTH,D4
00001376  B044                     750              CMP.W    D4,D0
00001378  6E00 006E                751              BGT     .END                    ;SI ESTÁ MÁS A LA DERECHA NO HAY COLISIÓN
0000137C                           752              ;AQUÍ HAY COLISIÓN, TENEMOS QUE DETECTAR CUAL
0000137C  383C 01D0                753              MOVE.W  #PPOSY,D4
00001380  B244                     754              CMP.W   D4,D1
00001382  6E00 005E                755              BGT     .LADOS
00001386  4479 00002A62            756              NEG.W   BSPEEDY                 ;COLISIÓN CON LA PARTE DE ARRIBA
0000138C  33C4 00002A6E            757              MOVE.W  D4,BPOSY2
00001392  0444 000A                758              SUB.W   #BDIAMET,D4
00001396  33C4 00002A6C            759              MOVE.W  D4,BPOSY1       
0000139C                           760  .PLRXMIDDLE 
0000139C  3839 00002A06            761              MOVE.W  PWIDTH,D4
000013A2  E24C                     762              LSR.W   #1,D4
000013A4  3A39 00002A04            763              MOVE.W  PPOSX,D5 
000013AA  DA44                     764              ADD.W   D4,D5                   ;D5 = CENTRO PLATAFORMA
000013AC  BA42                     765              CMP.W   D2,D5                   ;CENTRO - POS PEL
000013AE  6B00 001A                766              BMI     .PLRXRIGHT
000013B2  3839 00002A60            767              MOVE.W  BSPEEDX,D4
000013B8  6B00 002E                768              BMI     .END
000013BC                           769                                           
000013BC  4444                     770              NEG.W   D4
000013BE  33C4 00002A60            771              MOVE.W  D4,BSPEEDX
000013C4  4EF9 000013E8            772              JMP     .END
000013CA                           773              
000013CA                           774  .PLRXRIGHT             
000013CA  3839 00002A60            775              MOVE.W  BSPEEDX,D4
000013D0  6A00 0016                776              BPL     .END              ;SI ES POSITIVO SOLO NEGAMOS Y
000013D4  4444                     777              NEG.W   D4
000013D6  33C4 00002A60            778              MOVE.W  D4,BSPEEDX
000013DC  4EF9 000013E8            779              JMP     .END
000013E2                           780  
000013E2  4479 00002A60            781  .LADOS      NEG.W   BSPEEDX                 ;COLISIÓN CON LOS LADOS
000013E8  4CDF 0030                782  .END        MOVEM.L (A7)+,D4-D5 
000013EC  4E75                     783              RTS
000013EE                           784  
000013EE                           785  
000013EE                           786  ; -----------------------------------------------------------------------------
000013EE                           787  UTLCOLBL   
000013EE                           788  ; CHECKS COLLISION WITH BLOCKS
000013EE                           789  ; INPUT    - POSITION BALL \1 X \2 Y TO CHECK COLLISION WITH BLOCK
000013EE                           790  ; OUTPUT   
000013EE                           791  ;           
000013EE                           792  ; MODIFIES - NONE
000013EE                           793  ; -----------------------------------------------------------------------------
000013EE  E849                     794              LSR.W   #4,D1           ;POSY/BLHEIGHT. D1 -> FILA
000013F0  343C 000B                795              MOVE.W  #BLROW-1,D2
000013F4  B441                     796              CMP.W   D1,D2           ;SI ESTÁ POR DEBAJO DE LA ÚLTIMA FILA SALTA DIRECTO A END
000013F6  6D00 00CA                797              BLT     .ENDNOCOLISION                    
000013FA  41F9 00002A72            798              LEA.L   BLMATRIX,A0
00001400  D1C1                     799              ADDA.L  D1,A0           ;CARGAMOS EN A0 LA DIRECCIÓN DEL BYTE DE LA FILA
00001402                           800                                          
00001402  EC48                     801              LSR.W   #6,D0           ;D0 -> COLUMNA 
00001404  363C 0007                802              MOVE.W  #BLCOL-1,D3                           
00001408  9640                     803              SUB.W   D0,D3           ;D3 -> COLUMNA (DESDE DRCHA) DONDE ESTÁ LA BOLA
0000140A  3E03                     804              MOVE.W  D3,D7
0000140C  6A00 0004                805              BPL     .TEST  
00001410  4283                     806              CLR.L   D3              ;POR SI SALE NEGATIVO LA REAJUSTAMOS
00001412                           807  .TEST
00001412  0710                     808              BTST.B  D3,(A0)         ;MIRAMOS EL BIT DONDE ESTA 
00001414  6700 00AC                809              BEQ     .ENDNOCOLISION  ; SALTA SI EN ESA POSICION YA HABIA UN 0
00001418                           810  
00001418                           811  .IZQ        
00001418  EC4D                     812              LSR.W   #6,D5           ;D5 -> COLUMNA
0000141A  343C 0007                813              MOVE.W  #BLCOL-1,D2
0000141E  9445                     814              SUB.W   D5,D2           ;D2 -> COLUMNA (DESDE DERECHA) DONDE ESTA EL PUNTO CONTRARIO (SI 1 ENTONCES 2)
00001420  B443                     815              CMP     D3,D2                  
00001422  6F00 000E                816              BLE     .CHOQUEDOBLE
00001426  4479 00002A60            817              NEG.W   BSPEEDX
0000142C                           818              
0000142C  4EF9 0000148A            819              JMP     .ENDCOLISION    ;  (|)______|  COLISION DELADO IZQUIERDO COLISIONANDO POR LA IZQ DEL NLOQUE 
00001432                           820              
00001432                           821  
00001432                           822  
00001432                           823  
00001432                           824  .CHOQUEDOBLE                        ;SI ESTA EN MEDIO DEL BLOQUE  |___()___| COLISION EN MEDIO
00001432                           825                                      ;COMPARAMOS SI LE HA DADO A DOS A LA VEZ |______(|)______|
00001432  B443                     826              CMP     D3,D2
00001434  6700 0036                827              BEQ     .ENMEDIO
00001438                           828              
00001438  5A40                     829              ADDI.W  #BDIAMET/2,D0
0000143A  EC48                     830              LSR.W   #6,D0
0000143C  3A3C 0007                831              MOVE.W  #BLCOL-1,D5     ;D1 -> COLUMNA DONDE SE ENCUENTRA EL PUNTO MEDIO DE LA BOLA                         
00001440                           832              
00001440  9A40                     833              SUB.W   D0,D5
00001442  6A00 0004                834              BPL     .TEST2  
00001446  4285                     835              CLR.L   D5              ;POR SI SALE NEGATIVO LA REAJUSTAMOS
00001448                           836  .TEST2
00001448                           837              
00001448  0B10                     838              BTST.B  D5,(A0)         ;MIRAMOS EL BIT DONDE ESTA 
0000144A  6700 0020                839              BEQ     .ENMEDIO
0000144E  BE45                     840              CMP     D5,D7
00001450  6700 000E                841              BEQ     .CHOQUEDOBLEIZQ
00001454  4479 00002A62            842              NEG.W   BSPEEDY
0000145A  4EF9 0000148A            843              JMP     .ENDCOLISION
00001460                           844  .CHOQUEDOBLEIZQ
00001460  4479 00002A60            845              NEG.W   BSPEEDX
00001466  4EF9 0000148A            846              JMP     .ENDCOLISION
0000146C                           847  
0000146C                           848              
0000146C                           849  .ENMEDIO            
0000146C                           850              ;COMPARAMOS SI LA PARTE CONTRARIA ESTA DENTO DEL BLOQUE O FUERA
0000146C  B443                     851              CMP     D3,D2
0000146E  6D00 000E                852              BLT     .DERECHA
00001472  4479 00002A62            853              NEG.W   BSPEEDY
00001478  4EF9 0000148A            854              JMP     .ENDCOLISION
0000147E                           855  .DERECHA
0000147E  4479 00002A60            856              NEG.W   BSPEEDX
00001484  4EF9 0000148A            857              JMP     .ENDCOLISION
0000148A                           858              
0000148A                           859  
0000148A                           860  .ENDCOLISION
0000148A  383C 0001                861              MOVE.W  #1,D4
0000148E  0790                     862              BCLR    D3,(A0)
00001490  5379 00002A70            863              SUB.W   #1,BLCOUNTER       
00001496  0679 0064 00002A0A       864              ADD.W   #100,PSCORE
0000149E                           865m             UTLSNDST
0000149E                           866m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
0000149E                           867m ; INPUT    - NONE 
0000149E                           868m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000149E                           869m ; MODIFIES - D0,A1
0000149E                           870m ; -----------------------------------------------------------------------------
000014A6                           871m             UTLSNDS  .SOUND,#1
000014A6                           872m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000014A6                           873m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000014A6                           874m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000014A6                           875m ; MODIFIES - D0,A1
000014A6                           876m ; -----------------------------------------------------------------------------
000014BC  5379 00002A70            877              SUB.W   #1,BLCOUNTER
000014C2                           878  .ENDNOCOLISION
000014C2  4E75                     879              RTS
000014C4= 626C6F63 6B732E77 ...    880  .SOUND      DC.L    'blocks.wav',0
000014D4                           881  ; -----------------------------------------------------------------------------
000014D4                           882  UTLCHCOL
000014D4                           883  ; CHECKS COLLISION
000014D4                           884  ; INPUT    - D0.W X0 COORDINATE ball
000014D4                           885  ;            D1.W Y0 COORDINATE ball
000014D4                           886  ;            D2.W X1 COORDINATE plataforma
000014D4                           887  ;            D3.W Y1 COORDINATE plataforma
000014D4                           888  ;            D4.W WIDTH 0      ball
000014D4                           889  ;            D5.W WIDTH 1      plataforma 
000014D4                           890  ;            D6.W HEIGHT 0     ball
000014D4                           891  ;            D7.W HEIGHT 1     plataforma
000014D4                           892  ; OUTPUT   - D0.B=FF - COLLISION, =0 - NO COLLISION
000014D4                           893  ; MODIFIES - NONE
000014D4                           894  ; -----------------------------------------------------------------------------
000014D4  48A7 0F00                895              MOVEM.W D4-D7,-(A7)
000014D8  D840                     896              ADD.W   D0,D4
000014DA  B842                     897              CMP.W   D2,D4
000014DC  6F00 0022                898              BLE     .NOCOL
000014E0  DA42                     899              ADD.W   D2,D5
000014E2  BA40                     900              CMP.W   D0,D5
000014E4  6F00 001A                901              BLE     .NOCOL
000014E8  DC41                     902              ADD.W   D1,D6
000014EA  BC43                     903              CMP.W   D3,D6
000014EC  6F00 0012                904              BLE     .NOCOL
000014F0  DE43                     905              ADD.W   D3,D7
000014F2  BE41                     906              CMP.W   D1,D7
000014F4  6F00 000A                907              BLE     .NOCOL
000014F8  103C 00FF                908              MOVE.B  #$FF,D0
000014FC  6000 0004                909              BRA     .END
00001500  4200                     910  .NOCOL      CLR.B   D0
00001502  4C9F 00F0                911  .END        MOVEM.W (A7)+,D4-D7
00001506  4E75                     912              RTS
00001508                           913  
00001508                           914  
00001508                           915  
00001508                           916  UTLSCTRLP
00001508  48E7 FC40                917              MOVEM.L D0-D5/A1,-(A7)    
0000150C                           918              ;DIBUJA LA BARRA DE SEPARACIÓN
0000150C  223C 00FFFFFF            919              MOVE.L  #$00FFFFFF,D1  ;COLOR
00001512  103C 0050                920              MOVE.B  #80,D0
00001516  4E4F                     921              TRAP    #15
00001518                           922              
00001518  C2BC 00FFFFFF            923              AND.L   #$00FFFFFF,D1  ;COLOR
0000151E  103C 0051                924              MOVE.B  #81,D0
00001522  4E4F                     925              TRAP    #15
00001524                           926              
00001524  103C 0057                927              MOVE.B  #87,D0
00001528  323C 0201                928              MOVE.W  #SCRCTRL,D1
0000152C  363C 0206                929              MOVE.W  #SCRCTRL+SCRLWIDTH,D3
00001530  4282                     930              CLR.L   D2
00001532  383C 01E0                931              MOVE.W  #SCRHEIGH,D4
00001536  4E4F                     932              TRAP    #15
00001538                           933              
00001538                           934              ;SCORE
00001538                           935m             UTLLOCT PSCORETX,PSCORETY            
00001538                           936m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001538                           937m ; INPUT    - PSCORETX X, PSCORETY Y
00001538                           938m ; OUTPUT   - NONE
00001538                           939m ; MODIFIES - D0,D1
00001538                           940m ; -----------------------------------------------------------------------------
00001542                           941m             UTLSIZC #PSCORECOL,TXMSIZE           ;PENCOLOR Y TAMAÑO
00001542                           942m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001542                           943m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR TXMSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001542                           944m ; OUTPUT   - NONE
00001542                           945m ; MODIFIES - D0,D1
00001542                           946m ; -----------------------------------------------------------------------------
00001554                           947m             UTLSFIL #$00000000
00001554                           948m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001554                           949m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001554                           950m ; OUTPUT   - NONE
00001554                           951m ; MODIFIES - D0,D1
00001554                           952m ; -----------------------------------------------------------------------------
0000155C  43F9 00001574            953              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
00001562  3239 00002A0A            954              MOVE.W  PSCORE,D1
00001568  103C 0011                955              MOVE.B  #17,D0
0000156C  4E4F                     956              TRAP    #15
0000156E                           957              
0000156E  4CDF 023F                958              MOVEM.L (A7)+,D0-D5/A1
00001572  4E75                     959              RTS   
00001574= 53 43 4F 52 45 3A ...    960  .TXTSCORE   DC.B    'SCORE: ',0
0000157C                           961              DS.W    0
0000157C                           962  
0000157C                           963  
0000157C                           964  ; -----------------------------------------------------------------------------
0000157C                           965  UTLWRF    MACRO
0000157C                           966  ; WRAPPER TO WRITE TEXT IN AN EXISTING FILE FROM TRAP 15
0000157C                           967  ; INPUT    - \1 FILENAME, \2 CONTENIDO QUE TIENE QUE ESCRIBIR,  
0000157C                           968  ; OUTPUT   - NONE
0000157C                           969  ; MODIFIES - D0-D2,A1
0000157C                           970  ; -----------------------------------------------------------------------------
0000157C                           971              MOVE.B  #50,D0
0000157C                           972              TRAP    #15                     ;CIERRA TODOS LOS FICHEROS
0000157C                           973              
0000157C                           974              LEA     \1,A1
0000157C                           975              MOVE.B  #51,D0
0000157C                           976              TRAP    #15                     ;ABRE UN FICHERO EXISTENTE, D1 = FILE ID
0000157C                           977              ; CON EL 55 HAY QUE POSICIONAR EL FICHERO, SINO SIEMPRE ESCRIBE A PARTIR DEL BYTE 0
0000157C                           978              LEA     .BUFFER,A1
0000157C                           979              MOVE.W  \2,(A1)                 ;GUARDA EN EL BUFFER
0000157C                           980              MOVE.W  #2,D2                   ;BYTES QUE TIENE QUE ESCRIBIR
0000157C                           981              MOVE.B  #54,D0                  ;ESCRIBE EL BUFFER EN EL FICHERO
0000157C                           982              TRAP    #15                     
0000157C                           983              
0000157C                           984              MOVE.B  #56,D0
0000157C                           985              TRAP    #15                     ;CIERRA EL FICHERO
0000157C                           986    
0000157C                           987  .BUFFERW     DS.B 80
0000157C                           988     
0000157C                           989              ENDM
0000157C                           990  
0000157C                           991  
0000157C                           992  ; -----------------------------------------------------------------------------
0000157C                           993  UTLRF    MACRO
0000157C                           994  ; WRAPPER TO READ TEXT FROM AN EXISTING FILE FROM TRAP 15
0000157C                           995  ; INPUT    - \1 FILENAME
0000157C                           996  ; OUTPUT   - NONE
0000157C                           997  ; MODIFIES - D0-D2,A1
0000157C                           998  ; -----------------------------------------------------------------------------
0000157C                           999              MOVE.B  #50,D0
0000157C                          1000              TRAP    #15                     ;CIERRA TODOS LOS FICHEROS
0000157C                          1001  
0000157C                          1002              LEA     .FILE,A1
0000157C                          1003              MOVE.B  #51,D0
0000157C                          1004              TRAP    #15                     ;ABRE UN FICHERO EXISTENTE, D1 = FILE ID
0000157C                          1005  
0000157C                          1006              LEA     BUFFER,A1
0000157C                          1007              MOVE.L  #255,D2                 ;BYTES QUE LEE
0000157C                          1008              MOVE.B  #53,D0
0000157C                          1009              TRAP    #15                     ;LEE DEL FICHERO
0000157C                          1010              MOVE.L  D2,D3
0000157C                          1011              ;GUARDA EN EL BUFFER LO QUE HA LEIDO
0000157C                          1012              MOVE.B  #56,D0
0000157C                          1013              TRAP    #15                     ;CIERRA EL FICHERO
0000157C                          1014  
0000157C                          1015  
0000157C                          1016              ENDM
0000157C                          1017  
0000157C                          1018  
0000157C                          1019  
0000157C                          1020  
0000157C                          1021  -------------------- end include --------------------
0000157C                          1022              INCLUDE "PLAYER.X68"            ;EL JUGADOR
0000157C                          1023  ; -----------------------------------------------------------------------------
0000157C                          1024  ;           PLAYER
0000157C                          1025  ; -----------------------------------------------------------------------------
0000157C                          1026  PLRINIT
0000157C                          1027  ; INITIALIZES THE PLAYER
0000157C                          1028  ; INPUT    - NONE
0000157C                          1029  ; OUTPUT   - NONE
0000157C                          1030  ; MODIFIES - NONE
0000157C                          1031  ; -----------------------------------------------------------------------------
0000157C                          1032              
0000157C  33FC 00E0 00002A04      1033              MOVE.W  #PINPOSX1,PPOSX
00001584  33FC 0040 00002A06      1034              MOVE.W  #PINWIDTH1,PWIDTH
0000158C                          1035              
0000158C                          1036            
0000158C  4E75                    1037              RTS
0000158E                          1038              
0000158E                          1039  ; -----------------------------------------------------------------------------
0000158E                          1040  PLRREV
0000158E                          1041  ; PLAYER REVIVES, INITIALIZE POSITION
0000158E                          1042  ; INPUT    - NONE
0000158E                          1043  ; OUTPUT   - NONE
0000158E                          1044  ; MODIFIES - NONE
0000158E                          1045  ; -----------------------------------------------------------------------------
0000158E                          1046              ;DEBERIAMOS CALCULAR LA POSICION NUEVA A PARTIR DE LA WIDTH QUE NOS PASEN
0000158E                          1047              
0000158E  33FC 00E0 00002A04      1048              MOVE.W  #PINPOSX1,PPOSX
00001596  33FC 0040 00002A06      1049              MOVE.W  #PINWIDTH1,PWIDTH
0000159E                          1050            
0000159E  4E75                    1051              RTS
000015A0                          1052  
000015A0                          1053  ; -----------------------------------------------------------------------------
000015A0                          1054  
000015A0                          1055  PLRUPD      
000015A0  48E7 6000               1056              MOVEM.L D1-D2,-(A7)
000015A4  1239 00001D4C           1057              MOVE.B  KBDVAL,D1  
000015AA  E219                    1058              ROR.B   #1,D1                   ;IZQUIERDA
000015AC  6400 0016               1059              BCC     .RIGHTKEY               ;CUANDO C = 0
000015B0                          1060              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
000015B0  3439 00002A04           1061              MOVE.W  PPOSX,D2
000015B6  B47C 0000               1062              CMP.W    #0,D2
000015BA  6F00 0008               1063              BLE     .RIGHTKEY
000015BE  5179 00002A04           1064              SUB.W   #PMOVE,(PPOSX)
000015C4                          1065  .RIGHTKEY
000015C4  E209                    1066              LSR.B   #1,D1                   
000015C6  E219                    1067              ROR.B   #1,D1                   
000015C8  6400 001C               1068              BCC     .END
000015CC                          1069              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
000015CC  3439 00002A04           1070              MOVE.W  PPOSX,D2
000015D2  D479 00002A06           1071              ADD.W   PWIDTH,D2 
000015D8                          1072  
000015D8  B47C 01FC               1073              CMP.W    #SCRCTRL-SCRLWIDTH,D2
000015DC  6C00 0008               1074              BGE     .END
000015E0  5079 00002A04           1075              ADD.W   #PMOVE,PPOSX
000015E6                          1076  .END
000015E6  4CDF 0006               1077              MOVEM.L (A7)+,D1-D2
000015EA  4E75                    1078              RTS
000015EC                          1079  
000015EC                          1080  
000015EC                          1081  PPLOT
000015EC  48E7 FC40               1082              MOVEM.L  D0-D5/A1,-(A7)
000015F0                          1083              ;PLOT THE PLATAFORM
000015F0                          1084m             UTLSPEN #PCOLOR 
000015F0                          1085m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000015F0                          1086m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
000015F0                          1087m ; OUTPUT   - NONE
000015F0                          1088m ; MODIFIES - D0,D1
000015F0                          1089m ; -----------------------------------------------------------------------------
000015FC                          1090m             UTLSFIL #PCOLOR
000015FC                          1091m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000015FC                          1092m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
000015FC                          1093m ; OUTPUT   - NONE
000015FC                          1094m ; MODIFIES - D0,D1
000015FC                          1095m ; -----------------------------------------------------------------------------
00001608  3239 00002A04           1096              MOVE.W  PPOSX,D1
0000160E  343C 01D0               1097              MOVE.W  #PPOSY,D2                    
00001612  3639 00002A04           1098              MOVE.W  PPOSX,D3
00001618  3839 00002A06           1099              MOVE.W  PWIDTH,D4 
0000161E  D644                    1100              ADD.W   D4,D3
00001620  383C 01DC               1101              MOVE.W  #PPOSY+PHEIGHT,D4
00001624  303C 0057               1102              MOVE.W  #87,D0
00001628  4E4F                    1103              TRAP    #15
0000162A                          1104              
0000162A                          1105              ;PLOT LIFE
0000162A  3A39 00002A08           1106              MOVE.W  PLIVES,D5
00001630  6700 0076               1107              BEQ     .END
00001634                          1108m             UTLSPEN #$00FFFFFF  
00001634                          1109m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001634                          1110m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
00001634                          1111m ; OUTPUT   - NONE
00001634                          1112m ; MODIFIES - D0,D1
00001634                          1113m ; -----------------------------------------------------------------------------
00001640                          1114m             UTLSFIL #LIVECOLOR
00001640                          1115m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001640                          1116m ; INPUT    - #LIVECOLOR COLOR IN FORMAT $00BBGGRR
00001640                          1117m ; OUTPUT   - NONE
00001640                          1118m ; MODIFIES - D0,D1
00001640                          1119m ; -----------------------------------------------------------------------------
0000164C  5345                    1120              SUB.W   #1,D5             
0000164E  103C 0057               1121              MOVE.B  #87,D0
00001652  323C 0215               1122              MOVE.W  #LIVEPOSX,D1
00001656  3601                    1123              MOVE.W  D1,D3
00001658  0643 0040               1124              ADD.W   #LIVEWIDTH,D3
0000165C  343C 001E               1125              MOVE.W  #LIVEPOSY,D2
00001660  3802                    1126              MOVE.W  D2,D4
00001662  0644 0010               1127              ADD.W   #LIVEHEIGHT,D4
00001666                          1128  .LOOP           
00001666  4E4F                    1129              TRAP    #15
00001668  3203                    1130              MOVE.W  D3,D1
0000166A  0643 0040               1131              ADD.W   #LIVEWIDTH,D3
0000166E  51CD FFF6               1132              DBRA    D5,.LOOP
00001672                          1133              
00001672                          1134              ;PLOT SCORE
00001672                          1135m             UTLLOCT PSCORETX,PSCORETY            
00001672                          1136m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001672                          1137m ; INPUT    - PSCORETX X, PSCORETY Y
00001672                          1138m ; OUTPUT   - NONE
00001672                          1139m ; MODIFIES - D0,D1
00001672                          1140m ; -----------------------------------------------------------------------------
0000167C                          1141m             UTLSIZC #PSCORECOL,TXMSIZE           ;PENCOLOR Y TAMAÑO
0000167C                          1142m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
0000167C                          1143m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR TXMSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
0000167C                          1144m ; OUTPUT   - NONE
0000167C                          1145m ; MODIFIES - D0,D1
0000167C                          1146m ; -----------------------------------------------------------------------------
0000168E                          1147m             UTLSFIL #$00000000
0000168E                          1148m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000168E                          1149m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
0000168E                          1150m ; OUTPUT   - NONE
0000168E                          1151m ; MODIFIES - D0,D1
0000168E                          1152m ; -----------------------------------------------------------------------------
00001696  43F9 000016AE           1153              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
0000169C  3239 00002A0A           1154              MOVE.W  PSCORE,D1
000016A2  103C 0011               1155              MOVE.B  #17,D0
000016A6  4E4F                    1156              TRAP    #15
000016A8                          1157              
000016A8                          1158  .END            
000016A8  4CDF 023F               1159              MOVEM.L (A7)+,D0-D5/A1
000016AC  4E75                    1160              RTS
000016AE                          1161              
000016AE= 53 43 4F 52 45 3A ...   1162  .TXTSCORE   DC.B    'SCORE: ',0
000016B6                          1163              DS.W    0
000016B6                          1164  
000016B6                          1165  
000016B6                          1166  
000016B6                          1167  
000016B6                          1168  
000016B6                          1169  
000016B6                          1170  
000016B6                          1171  
000016B6                          1172  
000016B6                          1173  
000016B6                          1174  
000016B6                          1175  
000016B6                          1176  
000016B6                          1177  
000016B6                          1178  
000016B6                          1179  
000016B6                          1180  
000016B6                          1181  -------------------- end include --------------------
000016B6                          1182              INCLUDE "STATES.X68"            ;
000016B6                          1183  ; =============================================================================
000016B6                          1184  ; GAME STATE MANAGEMENT
000016B6                          1185  ; =============================================================================
000016B6                          1186  
000016B6                          1187  ; -----------------------------------------------------------------------------
000016B6                          1188  STAINIT
000016B6                          1189  ; INITALIZES THE STATE MANAGER
000016B6                          1190  ; INPUT    - NONE
000016B6                          1191  ; OUTPUT   - NONE
000016B6                          1192  ; MODIFIES - NONE
000016B6                          1193  ; -----------------------------------------------------------------------------
000016B6  33FC FFFF 00002A00      1194              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
000016BE                          1195             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
000016BE  33FC 0000 00002A02      1196              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
000016C6  4E75                    1197              RTS
000016C8                          1198  
000016C8                          1199  ; -----------------------------------------------------------------------------
000016C8                          1200  STAUPD
000016C8                          1201  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
000016C8                          1202  ; INPUT    - NONE
000016C8                          1203  ; OUTPUT   - NONE
000016C8                          1204  ; MODIFIES - NONE
000016C8                          1205  ; -----------------------------------------------------------------------------
000016C8  48E7 8080               1206              MOVEM.L D0/A0,-(A7)
000016CC  4280                    1207              CLR.L   D0
000016CE  3039 00002A02           1208              MOVE.W  (STANEXT),D0
000016D4  B079 00002A00           1209              CMP.W   (STACUR),D0
000016DA  6700 0012               1210              BEQ     .DOUPD
000016DE  33C0 00002A00           1211              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
000016E4  E588                    1212              LSL.L   #2,D0
000016E6  2040                    1213              MOVE.L  D0,A0
000016E8  2068 1706               1214              MOVE.L  .INITBL(A0),A0
000016EC  4E90                    1215              JSR     (A0)
000016EE  4280                    1216  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
000016F0  3039 00002A00           1217              MOVE.W  (STACUR),D0
000016F6  E588                    1218              LSL.L   #2,D0
000016F8  2040                    1219              MOVE.L  D0,A0
000016FA  2068 1712               1220              MOVE.L  .UPDTBL(A0),A0
000016FE  4E90                    1221              JSR     (A0)
00001700  4CDF 0101               1222              MOVEM.L (A7)+,D0/A0
00001704  4E75                    1223              RTS
00001706= 000017D0 00001750 ...   1224  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTY ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
00001712                          1225                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
00001712                          1226                                               ;EL 2 ES NO HACER NADA 
00001712= 0000183A 0000177A ...   1227  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAGOVRU
00001722                          1228                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
00001722                          1229                                              ;EL 2 HACE QUE SE UPDATE 
00001722                          1230  
00001722                          1231  ; -----------------------------------------------------------------------------
00001722                          1232  STAPLOT
00001722                          1233  ; PERFORMS STATE PLOT
00001722                          1234  ; INPUT    - NONE
00001722                          1235  ; OUTPUT   - NONE
00001722                          1236  ; MODIFIES - NONE
00001722                          1237  ; -----------------------------------------------------------------------------
00001722  48E7 8080               1238              MOVEM.L D0/A0,-(A7)
00001726  4280                    1239              CLR.L   D0
00001728  3039 00002A00           1240              MOVE.W  (STACUR),D0
0000172E  E588                    1241              LSL.L   #2,D0
00001730  2040                    1242              MOVE.L  D0,A0
00001732  2068 173E               1243              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
00001736  4E90                    1244              JSR     (A0)
00001738  4CDF 0101               1245              MOVEM.L (A7)+,D0/A0
0000173C  4E75                    1246              RTS
0000173E= 00001874 000017B2 ...   1247  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAGOVRP
0000174E                          1248                             ;SPACE      NIVEL1   NIVEL2    NIVEL3   
0000174E                          1249  
0000174E                          1250  ; -----------------------------------------------------------------------------
0000174E                          1251  STAEMPTY
0000174E                          1252  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
0000174E                          1253  ; INPUT    - NONE
0000174E                          1254  ; OUTPUT   - NONE
0000174E                          1255  ; MODIFIES - NONE
0000174E                          1256  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
0000174E                          1257  ; -----------------------------------------------------------------------------
0000174E  4E75                    1258              RTS
00001750                          1259  
00001750                          1260  ; -----------------------------------------------------------------------------
00001750                          1261  STAPLAYI    ;DEL NIVEL1, COMIENZO
00001750                          1262  
00001750                          1263  ; PLAY STATE INITIALIZATION.
00001750                          1264  ; INPUT    - NONE
00001750                          1265  ; OUTPUT   - NONE
00001750                          1266  ; MODIFIES - NONE
00001750                          1267  ; NOTE     - JUST A WRAPPER FOR PLRINIT
00001750                          1268  ; -----------------------------------------------------------------------------
00001750  48E7 FFFE               1269              MOVEM.L D0-D7/A0-A6,-(A7)
00001754  33FC 00FB 00002A68      1270              MOVE.W  #BINPOSX,BPOSX1
0000175C  33FC 01CE 00002A6E      1271              MOVE.W  #BINPOSY,BPOSY2
00001764  33FC 0105 00002A6A      1272              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
0000176C  33FC 01C4 00002A6C      1273              MOVE.W  #BINPOSY-BDIAMET,BPOSY1
00001774  4CDF 7FFF               1274              MOVEM.L (A7)+,D0-D7/A0-A6
00001778  4E75                    1275              RTS
0000177A                          1276  ; -----------------------------------------------------------------------------
0000177A                          1277  STASPACEU
0000177A                          1278  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
0000177A                          1279  ; INPUT    - NONE
0000177A                          1280  ; OUTPUT   - NONE
0000177A                          1281  ; MODIFIES - NONE
0000177A                          1282  ; -----------------------------------------------------------------------------
0000177A  33FC 00E0 00002A04      1283              MOVE.W  #PINPOSX1,PPOSX
00001782  0839 0004 00001D4D      1284              BTST.B  #KBDBITF1,(KBDEDGE)
0000178A  6700 000A               1285              BEQ     .END
0000178E  33FC 0002 00002A02      1286              MOVE.W  #STAPLAY,(STANEXT)
00001796                          1287  .END        
00001796  4E75                    1288              RTS
00001798                          1289                               
00001798                          1290  
00001798                          1291  ; -----------------------------------------------------------------------------
00001798                          1292  STAPLAYU
00001798                          1293  ; PLAY STATE UPDATE
00001798                          1294  ; INPUT    - NONE
00001798                          1295  ; OUTPUT   - NONE
00001798                          1296  ; MODIFIES - NONE
00001798                          1297  ; -----------------------------------------------------------------------------
00001798  48E7 FFFE               1298              MOVEM.L D0-D7/A0-A6,-(A7)
0000179C  4EB8 15A0               1299              JSR     PLRUPD
000017A0  4EB9 00001A14           1300              JSR     BUPD    
000017A6  4EB9 00001C46           1301              JSR     BLUPD   
000017AC  4CDF 7FFF               1302              MOVEM.L (A7)+,D0-D7/A0-A6          
000017B0  4E75                    1303              RTS
000017B2                          1304  ; -----------------------------------------------------------------------------
000017B2                          1305  STAPLAYP
000017B2                          1306  ; PLAY STATE PLOT
000017B2                          1307  ; INPUT    - NONE
000017B2                          1308  ; OUTPUT   - NONE
000017B2                          1309  ; MODIFIES - NONE
000017B2                          1310  ; -----------------------------------------------------------------------------
000017B2  48E7 FFFE               1311              MOVEM.L D0-D7/A0-A6,-(A7)
000017B6  4EB9 00001CA0           1312              JSR     BLPLOT
000017BC  4EB8 15EC               1313              JSR     PPLOT
000017C0  4EB9 00001AE0           1314              JSR     BPLOT
000017C6  4EB8 1508               1315              JSR     UTLSCTRLP
000017CA                          1316              
000017CA  4CDF 7FFF               1317              MOVEM.L (A7)+,D0-D7/A0-A6 
000017CE  4E75                    1318              RTS
000017D0                          1319  
000017D0                          1320  ; -----------------------------------------------------------------------------
000017D0                          1321  STAINTRI                  ;VACIA LA MEMORIA DEL JUEGO
000017D0                          1322  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
000017D0                          1323  
000017D0                          1324  ; INTRO STATE INIT
000017D0                          1325  ; INPUT    - NONE
000017D0                          1326  ; OUTPUT   - NONE
000017D0                          1327  ; MODIFIES - NONE
000017D0                          1328  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
000017D0                          1329  ; -----------------------------------------------------------------------------
000017D0                          1330              
000017D0                          1331m             UTLSVNAME   
000017D0                          1332m ;SAVES THE NAME OS THE PLAYER
000017D0                          1333m ;MAX CARACTERS: 20
000017D0                          1334m ; -----------------------------------------------------------------------------
00001802                          1335m             UTLSNDST
00001802                          1336m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001802                          1337m ; INPUT    - NONE 
00001802                          1338m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001802                          1339m ; MODIFIES - D0,A1
00001802                          1340m ; -----------------------------------------------------------------------------
0000180A                          1341m             UTLSNDS .SOUND,#1
0000180A                          1342m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000180A                          1343m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
0000180A                          1344m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000180A                          1345m ; MODIFIES - D0,A1
0000180A                          1346m ; -----------------------------------------------------------------------------
00001820                          1347              
00001820  4EB8 111A               1348              JSR     DMMINIT
00001824  4E75                    1349              RTS
00001826= 73746172 74206C61 ...   1350  .SOUND      DC.L    'start largo.wav',0
0000183A                          1351  ; -----------------------------------------------------------------------------
0000183A                          1352  STAINTRU
0000183A                          1353  ; INTRO STATE UPDATE
0000183A                          1354  ; INPUT    - NONE
0000183A                          1355  ; OUTPUT   - NONE
0000183A                          1356  ; MODIFIES - NONE
0000183A                          1357  ; -----------------------------------------------------------------------------
0000183A  48E7 FFFE               1358              MOVEM.L D0-D7/A0-A6,-(A7)
0000183E                          1359              
0000183E  0839 0004 00001D4D      1360              BTST.B  #KBDBITF1,(KBDEDGE)
00001846  6700 0026               1361              BEQ     .END
0000184A                          1362m             UTLSNDST
0000184A                          1363m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
0000184A                          1364m ; INPUT    - NONE 
0000184A                          1365m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000184A                          1366m ; MODIFIES - D0,A1
0000184A                          1367m ; -----------------------------------------------------------------------------
00001852  33FC 0001 00002A02      1368              MOVE.W  #STASPACE,(STANEXT)
0000185A  4EB9 00001B20           1369              JSR     BLINIT
00001860  33FC 0003 00002A08      1370              MOVE.W  #PINLIVE,PLIVES
00001868  4279 00002A0A           1371              CLR.W   PSCORE            
0000186E                          1372  .END        
0000186E  4CDF 7FFF               1373              MOVEM.L (A7)+,D0-D7/A0-A6
00001872  4E75                    1374              RTS
00001874                          1375  
00001874                          1376  ; -----------------------------------------------------------------------------
00001874                          1377  STAINTRP
00001874                          1378  ; INTRO STATE PLOT
00001874                          1379  ; INPUT    - NONE
00001874                          1380  ; OUTPUT   - NONE
00001874                          1381  ; MODIFIES - NONE
00001874                          1382  ; -----------------------------------------------------------------------------
00001874  48E7 E040               1383              MOVEM.L D0-D2/A1,-(A7)
00001878                          1384              ;TITULO
00001878                          1385m             UTLLOCT INTTITX,INTTITY      
00001878                          1386m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001878                          1387m ; INPUT    - INTTITX X, INTTITY Y
00001878                          1388m ; OUTPUT   - NONE
00001878                          1389m ; MODIFIES - D0,D1
00001878                          1390m ; -----------------------------------------------------------------------------
00001882                          1391m             UTLSIZC #INTTITC,TXBSIZE
00001882                          1392m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001882                          1393m ; INPUT    - #INTTITC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001882                          1394m ; OUTPUT   - NONE
00001882                          1395m ; MODIFIES - D0,D1
00001882                          1396m ; -----------------------------------------------------------------------------
00001894  43F9 000018CE           1397              LEA     .TITSTR,A1            
0000189A  103C 000E               1398              MOVE.B  #14,D0
0000189E  4E4F                    1399              TRAP    #15
000018A0                          1400              
000018A0                          1401              ;START
000018A0                          1402m             UTLLOCT INTPRSX,INTPRSY
000018A0                          1403m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000018A0                          1404m ; INPUT    - INTPRSX X, INTPRSY Y
000018A0                          1405m ; OUTPUT   - NONE
000018A0                          1406m ; MODIFIES - D0,D1
000018A0                          1407m ; -----------------------------------------------------------------------------
000018AA                          1408m             UTLSIZC #INTPRSC,TXSSIZE
000018AA                          1409m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
000018AA                          1410m ; INPUT    - #INTPRSC COLOR IN FORMAT $00BBGGRR TXSSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
000018AA                          1411m ; OUTPUT   - NONE
000018AA                          1412m ; MODIFIES - D0,D1
000018AA                          1413m ; -----------------------------------------------------------------------------
000018BC  43F9 000018DE           1414              LEA     .PRSSTR,A1
000018C2  103C 000E               1415              MOVE.B  #14,D0
000018C6  4E4F                    1416              TRAP    #15
000018C8                          1417              
000018C8  4CDF 0207               1418              MOVEM.L (A7)+,D0-D2/A1
000018CC  4E75                    1419              RTS
000018CE                          1420  
000018CE= 42 72 65 61 6B 69 ...   1421  .TITSTR     DC.B    'Breaking Blocks',0
000018DE= 50 55 53 48 20 46 ...   1422  .PRSSTR     DC.B    'PUSH FIRE TO START',0
000018F2                          1423              DS.W    0
000018F2                          1424  ; -----------------------------------------------------------------------------
000018F2                          1425  STAGOVRU
000018F2                          1426  ; GAME OVER STATE UPDATE
000018F2                          1427  ; INPUT    - NONE
000018F2                          1428  ; OUTPUT   - NONE
000018F2                          1429  ; MODIFIES - NONE
000018F2                          1430  ; -----------------------------------------------------------------------------
000018F2                          1431              ;AÑADE AL JUGADOR AL FICHERO
000018F2  4EB8 1216               1432              JSR     UTLADDPL                ;añade al fichero
000018F6                          1433              
000018F6                          1434              ;visualiza el fichero
000018F6                          1435m             UTLSPEN #$00FFFFFF
000018F6                          1436m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000018F6                          1437m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
000018F6                          1438m ; OUTPUT   - NONE
000018F6                          1439m ; MODIFIES - D0,D1
000018F6                          1440m ; -----------------------------------------------------------------------------
00001902                          1441m             UTLSFIL #$00000000
00001902                          1442m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001902                          1443m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001902                          1444m ; OUTPUT   - NONE
00001902                          1445m ; MODIFIES - D0,D1
00001902                          1446m ; -----------------------------------------------------------------------------
0000190A  43F9 00002A10           1447              LEA.L   PNAME,A1
00001910  323C 0215               1448              MOVE.W  #LIVEPOSX,D1
00001914  343C 00C8               1449              MOVE.W  #200,D2
00001918  103C 005F               1450              MOVE.B  #95,D0                   ;IMPRIME LA LINEA EN A1
0000191C  4E4F                    1451              TRAP    #15
0000191E                          1452              
0000191E  0839 0004 00001D4D      1453              BTST.B  #KBDBITF1,(KBDEDGE)
00001926  6700 0012               1454              BEQ     .END
0000192A                          1455m             UTLSNDST
0000192A                          1456m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
0000192A                          1457m ; INPUT    - NONE 
0000192A                          1458m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000192A                          1459m ; MODIFIES - D0,A1
0000192A                          1460m ; -----------------------------------------------------------------------------
00001932  33FC 0000 00002A02      1461              MOVE.W  #STAINTR,(STANEXT)
0000193A  4E75                    1462  .END        RTS
0000193C                          1463  
0000193C                          1464  ; -----------------------------------------------------------------------------
0000193C                          1465  STAGOVRP
0000193C                          1466  ; GAME OVER STATE PLOT
0000193C                          1467  ; INPUT    - NONE
0000193C                          1468  ; OUTPUT   - NONE
0000193C                          1469  ; MODIFIES - NONE
0000193C                          1470  ; -----------------------------------------------------------------------------
0000193C                          1471  
0000193C  48E7 E040               1472              MOVEM.L A1/D0-D2,-(A7)
00001940                          1473              
00001940                          1474              ;GAME OVER TEXT
00001940                          1475m             UTLLOCT GOVERX,GOVERY            
00001940                          1476m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001940                          1477m ; INPUT    - GOVERX X, GOVERY Y
00001940                          1478m ; OUTPUT   - NONE
00001940                          1479m ; MODIFIES - D0,D1
00001940                          1480m ; -----------------------------------------------------------------------------
0000194A                          1481m             UTLSIZC #GOVERC,TXBSIZE
0000194A                          1482m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
0000194A                          1483m ; INPUT    - #GOVERC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
0000194A                          1484m ; OUTPUT   - NONE
0000194A                          1485m ; MODIFIES - D0,D1
0000194A                          1486m ; -----------------------------------------------------------------------------
0000195C                          1487m             UTLSFIL #$00000000
0000195C                          1488m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000195C                          1489m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
0000195C                          1490m ; OUTPUT   - NONE
0000195C                          1491m ; MODIFIES - D0,D1
0000195C                          1492m ; -----------------------------------------------------------------------------
00001964  43F9 00001976           1493              LEA     .GOVSTR,A1              ;PONE EL TEXTO
0000196A  103C 000E               1494              MOVE.B  #14,D0
0000196E  4E4F                    1495              TRAP    #15
00001970                          1496  
00001970  4CDF 0207               1497              MOVEM.L (A7)+,A1/D0-D2
00001974  4E75                    1498              RTS
00001976= 47 41 4D 45 20 4F ...   1499  .GOVSTR     DC.B    'GAME OVER',0
00001980                          1500              DS.W    0
00001980                          1501  
00001980                          1502  
00001980                          1503  
00001980                          1504  
00001980                          1505  
00001980                          1506  
00001980                          1507  
00001980                          1508  
00001980                          1509  
00001980                          1510  
00001980                          1511  -------------------- end include --------------------
00001980                          1512              INCLUDE "BALL.X68"              ;LA PELOTA
00001980                          1513  ; =============================================================================
00001980                          1514  ; BALL
00001980                          1515  ; =============================================================================
00001980                          1516  ;----------------------------------
00001980                          1517  BINIT
00001980                          1518  ;INITIALIZE THE BALL
00001980                          1519  ;----------------------------------
00001980  33FC 00FB 00002A68      1520              MOVE.W  #BINPOSX,BPOSX1
00001988  33FC 01CE 00002A6E      1521              MOVE.W  #BINPOSY,BPOSY2
00001990  33FC 0105 00002A6A      1522              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
00001998  33FC 01C4 00002A6C      1523              MOVE.W  #BINPOSY-BDIAMET,BPOSY1
000019A0  33FC FFFD 00002A60      1524              MOVE.W  #BINSPEED,BSPEEDX
000019A8  33FC FFFD 00002A62      1525              MOVE.W  #BINSPEED,BSPEEDY
000019B0  4E75                    1526              RTS
000019B2                          1527  ;----------------------------------         
000019B2                          1528  BNXTLEV
000019B2                          1529  ;INITIALIZE THE BALL TO THE NEXT LEVEL
000019B2                          1530  ;----------------------------------
000019B2                          1531  ;BALL NEXT LEVEL       (NEXT LEVEL)
000019B2  48E7 8000               1532              MOVEM.L D0,-(A7)
000019B6  33FC 00FB 00002A68      1533              MOVE.W  #BINPOSX,BPOSX1
000019BE  33FC 01CE 00002A6C      1534              MOVE.W  #BINPOSY,BPOSY1
000019C6  33FC 0105 00002A6A      1535              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
000019CE  33FC 0105 00002A6E      1536              MOVE.W  #BINPOSX+BDIAMET,BPOSY2
000019D6  3039 00002A62           1537              MOVE.W  BSPEEDY,D0
000019DC  6B00 000E               1538              BMI     .NEGY
000019E0  5279 00002A62           1539              ADD.W   #1,BSPEEDY
000019E6  4EB9 000019F2           1540              JSR     .X
000019EC                          1541  .NEGY        
000019EC  5379 00002A62           1542              SUB.W   #1,BSPEEDY
000019F2                          1543  .X          
000019F2  3039 00002A60           1544              MOVE.W  BSPEEDX,D0
000019F8  6B00 000E               1545              BMI     .NEGX 
000019FC  5279 00002A60           1546              ADD.W   #1,BSPEEDX
00001A02  4EB9 00001A0E           1547              JSR     .END
00001A08                          1548  .NEGX       
00001A08  5379 00002A60           1549              SUB.W   #1,BSPEEDX 
00001A0E                          1550  .END        
00001A0E  4CDF 0001               1551              MOVEM.L (A7)+,D0
00001A12  4E75                    1552              RTS
00001A14                          1553        
00001A14                          1554  ;-----------------------------------------------------------------------------
00001A14                          1555  BUPD
00001A14                          1556  ;UPDATES THE BALL
00001A14                          1557  ;-----------------------------------
00001A14                          1558  ; UPDATES THE BALL MOTION
00001A14                          1559  ; INPUT    - NONE 
00001A14                          1560  ; OUTPUT   - NONE 
00001A14                          1561  ; MODIFIES - NONE
00001A14                          1562  ; -----------------------------------------------------------------------------
00001A14                          1563  
00001A14  48E7 FF80               1564              MOVEM.L D0-D7/A0,-(A7)
00001A18                          1565              ;COMPRUEBA COLISIONES CON LAS 4 PAREDES
00001A18                          1566              ;Y SI PASA LA DE ABAJO LE ELIMINA UNA VIDA, O ENVIA LA PANTALLA GAME OVER
00001A18  3039 00002A68           1567              MOVE.W  BPOSX1,D0
00001A1E  3239 00002A6C           1568              MOVE.W  BPOSY1,D1
00001A24  3439 00002A6A           1569              MOVE.W  BPOSX2,D2
00001A2A  3639 00002A6E           1570              MOVE.W  BPOSY2,D3
00001A30  4EB8 1244               1571              JSR     UTLCHCOLW               ;COMPRUEBA COLISIÓN CON PAREDES               
00001A34  4EB8 1356               1572              JSR     UTLCHCOLP               ;COMPRUEBA COLISIÓN CON PLATAFORMA
00001A38  4284                    1573              CLR.L  D4
00001A3A  3A39 00002A6A           1574              MOVE.W  BPOSX2,D5
00001A40  3C39 00002A6E           1575              MOVE.W  BPOSY2,D6
00001A46  4EB8 13EE               1576              JSR     UTLCOLBL
00001A4A                          1577              
00001A4A  B87C 0000               1578              CMP     #0,D4
00001A4E  6600 0066               1579              BNE     .END
00001A52  3039 00002A6A           1580              MOVE.W  BPOSX2,D0
00001A58  3239 00002A6C           1581              MOVE.W  BPOSY1,D1
00001A5E  3A39 00002A68           1582              MOVE.W  BPOSX1,D5
00001A64  3C39 00002A6E           1583              MOVE.W  BPOSY2,D6
00001A6A  4EB8 13EE               1584              JSR     UTLCOLBL
00001A6E  B87C 0000               1585              CMP     #0,D4
00001A72  6600 0042               1586              BNE     .END
00001A76  3039 00002A68           1587              MOVE.W  BPOSX1,D0
00001A7C  3239 00002A6E           1588              MOVE.W  BPOSY2,D1
00001A82  3A39 00002A6A           1589              MOVE.W  BPOSX2,D5
00001A88  3C39 00002A6C           1590              MOVE.W  BPOSY1,D6
00001A8E  4EB8 13EE               1591              JSR     UTLCOLBL
00001A92  B87C 0000               1592              CMP     #0,D4
00001A96  6600 001E               1593              BNE     .END
00001A9A  3039 00002A6A           1594              MOVE.W  BPOSX2,D0
00001AA0  3239 00002A6E           1595              MOVE.W  BPOSY2,D1
00001AA6  3A39 00002A68           1596              MOVE.W  BPOSX1,D5
00001AAC  3C39 00002A6C           1597              MOVE.W  BPOSY1,D6
00001AB2  4EB8 13EE               1598              JSR     UTLCOLBL   
00001AB6                          1599  
00001AB6                          1600  .END            
00001AB6                          1601  
00001AB6  3039 00002A60           1602              MOVE.W  BSPEEDX,D0              ;POSICIÓN = POSICIÓN + VELOCIDAD
00001ABC  D179 00002A68           1603              ADD.W   D0,BPOSX1
00001AC2  D179 00002A6A           1604              ADD.W   D0,BPOSX2
00001AC8                          1605              
00001AC8  3239 00002A62           1606              MOVE.W  BSPEEDY,D1
00001ACE  D379 00002A6C           1607              ADD.W   D1,BPOSY1
00001AD4  D379 00002A6E           1608              ADD.W   D1,BPOSY2
00001ADA  4CDF 01FF               1609              MOVEM.L (A7)+,D0-D7/A0
00001ADE                          1610              
00001ADE  4E75                    1611              RTS
00001AE0                          1612  
00001AE0                          1613  BPLOT       
00001AE0  48E7 F800               1614              MOVEM.L  D0-D4,-(A7)
00001AE4                          1615              ;CONTOUR COLOR
00001AE4  223C 00FFFFFF           1616              MOVE.L  #BINCOLOR,D1  
00001AEA  103C 0050               1617              MOVE.B  #80,D0
00001AEE  4E4F                    1618              TRAP    #15
00001AF0                          1619      
00001AF0                          1620               ;FILL COLOR
00001AF0  223C 00FFFFFF           1621              MOVE.L   #BINCOLOR,D1  
00001AF6  103C 0051               1622              MOVE.B  #81,D0
00001AFA  4E4F                    1623              TRAP    #15
00001AFC                          1624   
00001AFC                          1625              ;CIRCLE
00001AFC                          1626  
00001AFC  3239 00002A68           1627              MOVE.W  BPOSX1,D1
00001B02  3439 00002A6C           1628              MOVE.W  BPOSY1,D2
00001B08  3639 00002A6A           1629              MOVE.W  BPOSX2,D3
00001B0E  3839 00002A6E           1630              MOVE.W  BPOSY2,D4
00001B14  103C 0058               1631              MOVE.B  #88,D0
00001B18  4E4F                    1632              TRAP    #15
00001B1A                          1633      
00001B1A  4CDF 001F               1634              MOVEM.L  (A7)+,D0-D4
00001B1E                          1635  
00001B1E  4E75                    1636              RTS
00001B20                          1637  
00001B20                          1638  
00001B20                          1639  
00001B20                          1640  
00001B20                          1641  
00001B20                          1642  
00001B20                          1643  
00001B20                          1644  
00001B20                          1645  
00001B20                          1646  
00001B20                          1647  
00001B20                          1648  
00001B20                          1649  
00001B20                          1650  
00001B20                          1651  
00001B20                          1652  
00001B20                          1653  
00001B20                          1654  
00001B20                          1655  
00001B20                          1656  
00001B20                          1657  
00001B20                          1658  
00001B20                          1659  
00001B20                          1660  
00001B20                          1661  
00001B20                          1662  
00001B20                          1663  
00001B20                          1664  
00001B20                          1665  -------------------- end include --------------------
00001B20                          1666              INCLUDE "BLOCKS.X68"           ;BLOQUES
00001B20                          1667  ;-----------------------------------------------------------
00001B20                          1668  ;           BLOCKS
00001B20                          1669  ;-----------------------------------------------------------
00001B20                          1670    
00001B20                          1671  BLINIT
00001B20                          1672  
00001B20  41F9 00002A72           1673              LEA.L   BLMATRIX,A0
00001B26  303C 000B               1674              MOVE.W  #BLROW-1,D0             ;7
00001B2A                          1675  .LOOP       
00001B2A  10FC 00FF               1676              MOVE.B  #%11111111,(A0)+
00001B2E  51C8 FFFA               1677              DBRA    D0,.LOOP
00001B32                          1678              
00001B32  33FC 00E0 00002A04      1679              MOVE.W  #PINPOSX1,PPOSX
00001B3A  33FC 0040 00002A06      1680              MOVE.W  #PINWIDTH1,PWIDTH
00001B42                          1681              
00001B42  4279 00002A70           1682              CLR.W   BLCOUNTER
00001B48  33FC 0001 00002A0E      1683              MOVE.W  #1,LEVEL
00001B50  33FC FFFD 00002A60      1684              MOVE.W  #BINSPEED,BSPEEDX
00001B58  33FC FFFD 00002A62      1685              MOVE.W  #BINSPEED,BSPEEDY
00001B60  4479 00002A60           1686              NEG.W   BSPEEDX
00001B66  4EF9 00001CFA           1687              JMP     BLCONBL
00001B6C  4E75                    1688              RTS
00001B6E                          1689  BLLEV2           
00001B6E                          1690              
00001B6E  41F9 00002A72           1691              LEA.L   BLMATRIX,A0
00001B74                          1692  
00001B74  10FC 00FF               1693              MOVE.B  #%11111111,(A0)+
00001B78  10FC 0077               1694              MOVE.B  #%01110111,(A0)+
00001B7C  10FC 0077               1695              MOVE.B  #%01110111,(A0)+
00001B80  10FC 0077               1696              MOVE.B  #%01110111,(A0)+
00001B84  10FC 0077               1697              MOVE.B  #%01110111,(A0)+
00001B88  10FC 0077               1698              MOVE.B  #%01110111,(A0)+
00001B8C  10FC 00BB               1699              MOVE.B  #%10111011,(A0)+
00001B90  10FC 00BB               1700              MOVE.B  #%10111011,(A0)+
00001B94  10FC 00BB               1701              MOVE.B  #%10111011,(A0)+
00001B98  10FC 00BB               1702              MOVE.B  #%10111011,(A0)+
00001B9C  10FC 00BB               1703              MOVE.B  #%10111011,(A0)+
00001BA0  10FC 00FF               1704              MOVE.B  #%11111111,(A0)+ 
00001BA4                          1705  
00001BA4                          1706  
00001BA4  4279 00002A70           1707              CLR.W   BLCOUNTER
00001BAA                          1708              
00001BAA  33FC 00E4 00002A04      1709              MOVE.W  #PINPOSX2,PPOSX
00001BB2  33FC 0038 00002A06      1710              MOVE.W  #PINWIDTH2,PWIDTH
00001BBA                          1711  
00001BBA  303C FFFD               1712              MOVE.W  #BINSPEED,D0
00001BBE  5340                    1713              SUBQ.W  #1,D0
00001BC0                          1714              
00001BC0  33C0 00002A60           1715              MOVE.W  D0,BSPEEDX
00001BC6  33C0 00002A62           1716              MOVE.W  D0,BSPEEDY
00001BCC  4479 00002A60           1717              NEG.W   BSPEEDX
00001BD2  4EF9 00001CFA           1718              JMP     BLCONBL
00001BD8  4E75                    1719              RTS
00001BDA                          1720              
00001BDA                          1721  BLLEV3              
00001BDA  41F9 00002A72           1722              LEA.L   BLMATRIX,A0         
00001BE0  10FC 00F5               1723              MOVE.B  #%11110101,(A0)+
00001BE4  10FC 00A5               1724              MOVE.B  #%10100101,(A0)+
00001BE8  10FC 00A5               1725              MOVE.B  #%10100101,(A0)+
00001BEC  10FC 00A5               1726              MOVE.B  #%10100101,(A0)+
00001BF0  10FC 00A5               1727              MOVE.B  #%10100101,(A0)+
00001BF4  10FC 00E5               1728              MOVE.B  #%11100101,(A0)+
00001BF8  10FC 00A5               1729              MOVE.B  #%10100101,(A0)+
00001BFC  10FC 00A5               1730              MOVE.B  #%10100101,(A0)+
00001C00  10FC 00A5               1731              MOVE.B  #%10100101,(A0)+
00001C04  10FC 00A5               1732              MOVE.B  #%10100101,(A0)+
00001C08  10FC 00A5               1733              MOVE.B  #%10100101,(A0)+
00001C0C  10FC 00F5               1734              MOVE.B  #%11110101,(A0)+
00001C10                          1735  
00001C10                          1736  
00001C10  4279 00002A70           1737              CLR.W   BLCOUNTER
00001C16  33FC 00E8 00002A04      1738              MOVE.W  #PINPOSX3,PPOSX
00001C1E  33FC 0030 00002A06      1739              MOVE.W  #PINWIDTH3,PWIDTH
00001C26                          1740              
00001C26  303C FFFD               1741              MOVE.W  #BINSPEED,D0
00001C2A  5540                    1742              SUBQ.W  #2,D0
00001C2C                          1743              
00001C2C  33C0 00002A60           1744              MOVE.W  D0,BSPEEDX
00001C32  33C0 00002A62           1745              MOVE.W  D0,BSPEEDY
00001C38  4479 00002A60           1746              NEG.W   BSPEEDX
00001C3E  4EF9 00001CFA           1747              JMP     BLCONBL
00001C44  4E75                    1748              RTS
00001C46                          1749              
00001C46                          1750  BLUPD       
00001C46  3039 00002A70           1751              MOVE.W  BLCOUNTER,D0
00001C4C  B07C 0000               1752              CMP     #0,D0                   ;SI NO HAY BLOQUES SALTA
00001C50  6700 0004               1753              BEQ     .NEXTLEVEL
00001C54  4E75                    1754              RTS
00001C56                          1755  .NEXTLEVEL  
00001C56                          1756              
00001C56  5279 00002A0E           1757              ADD.W   #1,LEVEL
00001C5C  3239 00002A0E           1758              MOVE.W  LEVEL,D1
00001C62  B27C 0004               1759              CMP     #4,D1
00001C66  6700 002E               1760              BEQ     .WON
00001C6A  B27C 0003               1761              CMP     #3,D1              
00001C6E  6700 0010               1762              BEQ     .NIVEL3
00001C72  33FC 0001 00002A02      1763              MOVE.W  #STASPACE,(STANEXT)
00001C7A  4EF8 1B6E               1764              JMP     BLLEV2
00001C7E  4E75                    1765              RTS
00001C80                          1766  .NIVEL3
00001C80  B27C 0003               1767              CMP.W   #3,D1
00001C84  6600 0010               1768              BNE     .WON
00001C88  33FC 0001 00002A02      1769              MOVE.W  #STASPACE,STANEXT
00001C90  4EF8 1BDA               1770              JMP     BLLEV3 
00001C94  4E75                    1771              RTS
00001C96                          1772  .WON        
00001C96  33FC 0003 00002A02      1773              MOVE.W  #STAGOVR,STANEXT  
00001C9E  4E75                    1774              RTS          
00001CA0                          1775  
00001CA0                          1776  BLPLOT
00001CA0  103C 0050               1777              MOVE.B  #80,D0                  ;SET PEN COLOR
00001CA4  7200                    1778              MOVE.L  #0,D1
00001CA6  4E4F                    1779              TRAP    #15
00001CA8                          1780              
00001CA8  4242                    1781              CLR.W   D2                      ;UPPER Y
00001CAA  383C 0010               1782              MOVE.W  #BLHEIGHT,D4            ;DOWN Y
00001CAE  41F8 11E6               1783              LEA     COLORS,A0
00001CB2                          1784              
00001CB2  3A3C 000B               1785              MOVE.W  #BLROW-1,D5    ;DBRA
00001CB6  227C 00000000           1786              MOVE.L  #0,A1                      ;PARA SABER CUAL PONER D6= FILA
00001CBC                          1787              
00001CBC                          1788  .LOOP2                                      ;BUCLE DE FILAS
00001CBC                          1789   
00001CBC  103C 0051               1790              MOVE.B  #81,D0                  ;SET COLOR
00001CC0  2218                    1791              MOVE.L  (A0)+,D1
00001CC2  4E4F                    1792              TRAP    #15
00001CC4                          1793              
00001CC4  363C 0040               1794              MOVE.W  #BLWIDTH,D3             ;RIGHT X
00001CC8  4241                    1795              CLR.W   D1                      ;LEFT X
00001CCA                          1796              
00001CCA  3F05                    1797              MOVE.W  D5,-(A7)                ;GUARDO EL VALOR DEL DECREMENTO DE LOOP2
00001CCC  3A3C 0007               1798              MOVE.W  #BLCOL-1,D5
00001CD0  1C29 2A72               1799              MOVE.B  BLMATRIX(A1),D6
00001CD4                          1800  .LOOP1                                      ; BUCLE COLUMNAS
00001CD4  E31E                    1801              ROL.B   #1,D6
00001CD6  6400 0008               1802              BCC     .SALTO                  ; SALTA SI CARRY = 0
00001CDA                          1803              
00001CDA  103C 0057               1804              MOVE.B  #87,D0                  ; DIBUJAMOS EL CUADRADO
00001CDE  4E4F                    1805              TRAP    #15
00001CE0                          1806  .SALTO
00001CE0  3203                    1807              MOVE.W  D3,D1
00001CE2  0643 0040               1808              ADD.W   #BLWIDTH, D3
00001CE6                          1809  ;;;
00001CE6  51CD FFEC               1810              DBRA    D5,.LOOP1 
00001CEA  3A1F                    1811              MOVE.W  (A7)+,D5              
00001CEC                          1812  
00001CEC  5249                    1813              ADDA.W  #1,A1
00001CEE  3404                    1814              MOVE.W  D4,D2
00001CF0  0644 0010               1815              ADD.W   #BLHEIGHT,D4
00001CF4  51CD FFC6               1816              DBRA    D5,.LOOP2
00001CF8  4E75                    1817              RTS
00001CFA                          1818  
00001CFA                          1819  BLCONBL
00001CFA                          1820              
00001CFA  3A3C 000B               1821              MOVE.W  #BLROW-1,D5    ;DBRA FILAS
00001CFE  227C 00000000           1822              MOVE.L  #0,A1          ;PARA SABER CUAL PONER D6= FILA
00001D04                          1823              
00001D04                          1824  .LOOP2                                      ;BUCLE DE FILAS            
00001D04  3E3C 0007               1825              MOVE.W  #BLCOL-1,D7                ;DBRA COLUMNAS
00001D08  1C29 2A72               1826              MOVE.B  BLMATRIX(A1),D6
00001D0C                          1827  .LOOP1                                      ; BUCLE COLUMNAS
00001D0C  E31E                    1828              ROL.B   #1,D6
00001D0E  6400 0008               1829              BCC     .SALTO                  ; SALTA SI CARRY = 0
00001D12  5279 00002A70           1830              ADD.W   #1,BLCOUNTER
00001D18                          1831  .SALTO
00001D18  51CF FFF2               1832              DBRA    D7,.LOOP1   
00001D1C  5289                    1833              ADDA.L  #1,A1
00001D1E  51CD FFE4               1834              DBRA    D5,.LOOP2
00001D22  4E75                    1835              RTS
00001D24                          1836  
00001D24                          1837  
00001D24                          1838  
00001D24                          1839  
00001D24                          1840  
00001D24                          1841  
00001D24                          1842  -------------------- end include --------------------
00001D24                          1843  
00001D24                          1844  ; --- INITIALIZE --------------------------------------------------------------
00001D24                          1845              
00001D24  4EB8 1000               1846  START       JSR     SYSINIT
00001D28                          1847              ; TO DO: CALL GAME INITIALIZATION CODE HERE
00001D28  4EB8 16B6               1848              JSR     STAINIT                 ;INICIA LAS PANTALLAS            
00001D2C                          1849              
00001D2C                          1850  ; --- UPDATE ------------------------------------------------------------------
00001D2C                          1851  
00001D2C  4E40                    1852  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
00001D2E                          1853                                              ; UPDATE DEPENDING ON THE STATE
00001D2E                          1854              ; TO DO: CALL GAME UPDATE CODE HERE
00001D2E  4EB8 16C8               1855              JSR     STAUPD
00001D32                          1856  
00001D32                          1857  ; --- WAIT SYNCH --------------------------------------------------------------
00001D32                          1858  
00001D32  4A39 00001D4E           1859  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001D38  67F8                    1860              BEQ     .WINT
00001D3A                          1861              
00001D3A  4239 00001D4E           1862              CLR.B   (SCRINTCT)
00001D40                          1863  
00001D40                          1864  ; --- PLOT --------------------------------------------------------------------
00001D40                          1865              
00001D40                          1866              ; TO DO: CALL GAME PLOT CODE HERE
00001D40  4EB8 1722               1867              JSR     STAPLOT
00001D44                          1868  
00001D44  4E41                    1869              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001D46  60E4                    1870              BRA     .LOOP
00001D48  FFFF FFFF               1871              SIMHALT
00001D4C                          1872  
00001D4C                          1873  ; --- VARIABLES ---------------------------------------------------------------
00001D4C                          1874  
00001D4C                          1875              INCLUDE "SYSVAR.X68"
00001D4C                          1876  ; =============================================================================
00001D4C                          1877  ; SYSTEM VARS
00001D4C                          1878  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
00001D4C                          1879  ; THEY MUST NOT BE IN PROTECTED MEMORY.
00001D4C                          1880  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
00001D4C                          1881  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
00001D4C                          1882  ; THIS IS GOOD ENOUGH.
00001D4C                          1883  ; =============================================================================
00001D4C                          1884  
00001D4C                          1885  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001D4C                          1886  
00001D4C                          1887  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001D4D                          1888  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001D4E                          1889  
00001D4E                          1890              DS.W    0
00001D4E                          1891  
00001D4E                          1892  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001D4E                          1893  
00001D4E                          1894  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001D4F                          1895  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001D50                          1896              DS.W    0
00001D50                          1897  
00001D50                          1898  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001D50                          1899  
00001D80                          1900              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001D80                          1901  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002A00                          1902              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002A00                          1903  
00002A00                          1904  
00002A00                          1905  
00002A00                          1906  -------------------- end include --------------------
00002A00                          1907              INCLUDE "VAR.X68"
00002A00                          1908  ; =============================================================================
00002A00                          1909  ; GAME VARS
00002A00                          1910  ; =============================================================================
00002A00                          1911  
00002A00                          1912  ; TO DO: DECLARE GAME VARIABLES HERE.
00002A00                          1913  
00002A00                          1914  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
00002A00                          1915  
00002A00                          1916  STACUR      DS.W    1                       ; CURRENT GAME STATE
00002A02                          1917  STANEXT     DS.W    1                       ; NEXT GAME STATE
00002A04                          1918  ;----------------------------------------------------------------------------
00002A04                          1919  
00002A04                          1920  ; PLAYER --------------------------------------------------------------------
00002A04                          1921  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
00002A06                          1922  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
00002A08                          1923  PLIVES      DS.W    1                       ;LIVES LEFT
00002A0A                          1924  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
00002A0C                          1925  PSPEED      DS.W    1
00002A0E                          1926  LEVEL       DS.B    2
00002A10                          1927  PNAME       DS.B    80                      ;NOMBRE CON CARACTERES MAX = 80
00002A60                          1928              DS.W    0
00002A60                          1929  ;----------------------------------------------------------------------------
00002A60                          1930  
00002A60                          1931  ; BALL ----------------------------------------------------------------------
00002A60                          1932  ;BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
00002A60                          1933  ;BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
00002A60                          1934  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
00002A62                          1935  BSPEEDY     DS.W    1
00002A64                          1936  BMXSPEED    DS.W    1                       ;LIMITACIÓN
00002A66                          1937  BCOLOR      DS.W    1
00002A68                          1938  BPOSX1      DS.W    1
00002A6A                          1939  BPOSX2      DS.W    1
00002A6C                          1940  BPOSY1      DS.W    1
00002A6E                          1941  BPOSY2      DS.W    1
00002A70                          1942  ; BLOCKS --------------------------------------------------------------------
00002A70                          1943  BLCOUNTER   DS.W    1
00002A72                          1944  BLMATRIX    DS.B    BLROW  ;12*8
00002A7E                          1945              DS.W    0
00002A7E                          1946  ;ALL SCORES:
00002A7E                          1947  BUFFER      DS.B    80
00002ACE                          1948              DS.W    0
00002ACE                          1949  PLSIZE      DS.W    1
00002AD0                          1950  
00002AD0                          1951  
00002AD0                          1952  
00002AD0                          1953  
00002AD0                          1954  
00002AD0                          1955  
00002AD0                          1956  
00002AD0                          1957  
00002AD0                          1958  
00002AD0                          1959  
00002AD0                          1960  
00002AD0                          1961  
00002AD0                          1962  
00002AD0                          1963  -------------------- end include --------------------
00002AD0                          1964              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              2A66
BDIAMET             A
BINCOLOR            FFFFFF
BINIT               1980
BINPOSX             FB
BINPOSY             1CE
BINSPEED            FFFFFFFD
BLCOL               8
BLCONBL             1CFA
BLCONBL:LOOP1       1D0C
BLCONBL:LOOP2       1D04
BLCONBL:SALTO       1D18
BLCOUNTER           2A70
BLHEIGHT            10
BLINIT              1B20
BLINIT:LOOP         1B2A
BLLEV2              1B6E
BLLEV3              1BDA
BLMATRIX            2A72
BLPLOT              1CA0
BLPLOT:LOOP1        1CD4
BLPLOT:LOOP2        1CBC
BLPLOT:SALTO        1CE0
BLROW               C
BLUE                F7E78E
BLUPD               1C46
BLUPD:NEXTLEVEL     1C56
BLUPD:NIVEL3        1C80
BLUPD:WON           1C96
BLWIDTH             40
BMXSPEED            2A64
BNXTLEV             19B2
BNXTLEV:END         1A0E
BNXTLEV:NEGX        1A08
BNXTLEV:NEGY        19EC
BNXTLEV:X           19F2
BPLOT               1AE0
BPOSX1              2A68
BPOSX2              2A6A
BPOSY1              2A6C
BPOSY2              2A6E
BSPEEDX             2A60
BSPEEDY             2A62
BUFFER              2A7E
BUPD                1A14
BUPD:END            1AB6
COLORS              11E6
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1D80
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
FILE                11DC
GOVERC              FFFF
GOVERX              12
GOVERY              7
GREEN               95FF8C
INTPRSC             FFFFFF
INTPRSX             20
INTPRSY             52
INTTITC             DCAA7C
INTTITX             E
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1D4D
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1D4C
LEVEL               2A0E
LIVECOLOR           FF
LIVEHEIGHT          10
LIVEPOSX            215
LIVEPOSY            1E
LIVEWIDTH           40
ORANGE              4E8CF3
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX1            E0
PINPOSX2            E4
PINPOSX3            E8
PINWIDTH1           40
PINWIDTH2           38
PINWIDTH3           30
PLIVES              2A08
PLRINIT             157C
PLRREV              158E
PLRUPD              15A0
PLRUPD:END          15E6
PLRUPD:RIGHTKEY     15C4
PLSIZE              2ACE
PMOVE               8
PNAME               2A10
PPLOT               15EC
PPLOT:END           16A8
PPLOT:LOOP          1666
PPLOT:TXTSCORE      16AE
PPOSX               2A04
PPOSY               1D0
PSCORE              2A0A
PSCORECOL           FFFFFF
PSCORETX            32
PSCORETY            4
PSPEED              2A0C
PURPLE              FFACAC
PWIDTH              2A06
SCRCTRL             201
SCRCYCCT            1D4F
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1D4E
SCRIRQ              1
SCRISR              107E
SCRLWIDTH           5
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            2E4
STACUR              2A00
STAEMPTY            174E
STAGOVR             3
STAGOVRP            193C
STAGOVRP:GOVSTR     1976
STAGOVRU            18F2
STAGOVRU:END        193A
STAINIT             16B6
STAINTR             0
STAINTRI            17D0
STAINTRI:INSTRUCT   17F0
STAINTRI:SOUND      1826
STAINTRP            1874
STAINTRP:PRSSTR     18DE
STAINTRP:TITSTR     18CE
STAINTRU            183A
STAINTRU:END        186E
STANEXT             2A02
STANONE             FFFFFFFF
STAPLAY             2
STAPLAYI            1750
STAPLAYP            17B2
STAPLAYU            1798
STAPLOT             1722
STAPLOT:PLTTBL      173E
START               1D24
START:LOOP          1D2C
START:WINT          1D32
STASPACE            1
STASPACEU           177A
STASPACEU:END       1796
STAUPD              16C8
STAUPD:DOUPD        16EE
STAUPD:INITBL       1706
STAUPD:UPDTBL       1712
SYSINIT             1000
TXBSIZE             12
TXMSIZE             10
TXSSIZE             A
UTLADDPL            1216
UTLCHCOL            14D4
UTLCHCOL:END        1502
UTLCHCOL:NOCOL      1500
UTLCHCOLP           1356
UTLCHCOLP:END       13E8
UTLCHCOLP:LADOS     13E2
UTLCHCOLP:PLRXMIDDLE  139C
UTLCHCOLP:PLRXRIGHT  13CA
UTLCHCOLW           1244
UTLCHCOLW:COLLISIONS  1326
UTLCHCOLW:DOWN      12B0
UTLCHCOLW:END       1320
UTLCHCOLW:LEFT      126E
UTLCHCOLW:MINLIVE   12BC
UTLCHCOLW:RESET     1318
UTLCHCOLW:RIGHT     128E
UTLCHCOLW:SOUNDG    132E
UTLCHCOLW:SOUNDL    1342
UTLCOLBL            13EE
UTLCOLBL:CHOQUEDOBLE  1432
UTLCOLBL:CHOQUEDOBLEIZQ  1460
UTLCOLBL:DERECHA    147E
UTLCOLBL:ENDCOLISION  148A
UTLCOLBL:ENDNOCOLISION  14C2
UTLCOLBL:ENMEDIO    146C
UTLCOLBL:IZQ        1418
UTLCOLBL:SOUND      14C4
UTLCOLBL:TEST       1412
UTLCOLBL:TEST2      1448
UTLLOCT             3CF
UTLRF               E7C
UTLSCTRLP           1508
UTLSCTRLP:TXTSCORE  1574
UTLSFIL             2A5
UTLSIZC             12A
UTLSNDS             4F7
UTLSNDST            6F3
UTLSPEN             0
UTLSVNAME           847
UTLWRF              A61
YELLOW              38EEF8
