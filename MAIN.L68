000014E0 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 10/12/2019 15:59:03

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION :
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8  
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =00000280                 81  SCRWIDTH    EQU     640                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  -------------------- end include --------------------
00001000                            93              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            94  ; =============================================================================
00001000                            95  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            96  ; =============================================================================
00001000                            97  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            98  ; -----------------------------------------------------------------------------
00001000                            99  SYSINIT
00001000                           100  ; INITIALIZES THE SYSTEM
00001000                           101  ; INPUT    - NONE
00001000                           102  ; OUTPUT   - NONE
00001000                           103  ; MODIFIES - NONE
00001000                           104  ; -----------------------------------------------------------------------------
00001000  205F                     105              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            106              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            107              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            108              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                109              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     110              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     111              RTS
0000101C                           112  
0000101C                           113  ; =============================================================================
0000101C                           114  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           115  ; =============================================================================
0000101C                           116  
0000101C                           117  ; -----------------------------------------------------------------------------
0000101C                           118  SCRINIT
0000101C                           119  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           120  ; INPUT    - NONE
0000101C                           121  ; OUTPUT   - NONE
0000101C                           122  ; MODIFIES - D0,D1,D2,D3
0000101C                           123  ; -----------------------------------------------------------------------------
0000101C                           124              ; TO DO:
0000101C                           125              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                126              ORI.W   #$0700,SR
00001020                           127              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           128              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       129              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           130              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                131              MOVE.B  #33,D0
0000102C  223C 028001E0            132              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     133              TRAP    #15
00001034                           134              ; - SET WINDOWED MODE
00001034  7201                     135              MOVE.L  #1,D1
00001036  4E4F                     136              TRAP    #15
00001038                           137              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                138              MOVE.B  #11,D0
0000103C  323C FF00                139              MOVE.W  #$FF00,D1
00001040  4E4F                     140              TRAP    #15
00001042                           141              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                142              MOVE.B  #92,D0
00001046  123C 0011                143              MOVE.B  #17,D1
0000104A  4E4F                     144              TRAP    #15
0000104C                           145              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     146              MOVE.L  #11,D0
0000104E  323C FF00                147              MOVE.W  #$FF00,D1
00001052  4E4F                     148              TRAP    #15
00001054                           149              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           150              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       151              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           152              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           153              ;   TASK 32)
0000105C  103C 0020                154              MOVE.B  #32,D0
00001060  123C 0006                155              MOVE.B  #6,D1
00001064                           156              ;MOVE.B  #%10000001,D2
00001064  143C 0081                157              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     158              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     159              TRAP    #15
0000106C                           160              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 0000150A            161              CLR.B   SCRINTCT
00001072  4239 0000150B            162              CLR.B   SCRCYCCT
00001078                           163              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                164              ANDI.W  #$F8FF,SR
0000107C  4E75                     165              RTS
0000107E                           166  
0000107E                           167  ; -----------------------------------------------------------------------------
0000107E                           168  SCRISR
0000107E                           169  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           170  ; INPUT    - NONE
0000107E                           171  ; OUTPUT   - NONE
0000107E                           172  ; MODIFIES - NONE
0000107E                           173  ; -----------------------------------------------------------------------------
0000107E  5239 0000150A            174              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 0000150B            175              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     176              RTE
0000108C                           177  
0000108C                           178  ; -----------------------------------------------------------------------------
0000108C                           179  SCRUPD
0000108C                           180  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           181  ; BUFFER FOR THE NEXT ONE.
0000108C                           182  ; INPUT    - NONE
0000108C                           183  ; OUTPUT   - NONE
0000108C                           184  ; MODIFIES - NONE
0000108C                           185  ; -----------------------------------------------------------------------------
0000108C                           186              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                187              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                188              MOVE.B  #94,D0
00001094  4E4F                     189              TRAP    #15
00001096  103C 000B                190              MOVE.B  #11,D0
0000109A  323C FF00                191              MOVE.W  #$FF00,D1
0000109E  4E4F                     192              TRAP    #15
000010A0  4CDF 0003                193              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     194              RTE
000010A6                           195  
000010A6                           196  ; =============================================================================
000010A6                           197  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           198  ; =============================================================================
000010A6                           199  
000010A6                           200  ; -----------------------------------------------------------------------------
000010A6                           201  KBDINIT
000010A6                           202  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           203  ; INPUT    - NONE
000010A6                           204  ; OUTPUT   - NONE
000010A6                           205  ; MODIFIES - NONE
000010A6                           206  ; -----------------------------------------------------------------------------
000010A6  4239 00001508            207              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 00001509            208              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       209              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     210              RTS
000010BC                           211  
000010BC                           212  ; -----------------------------------------------------------------------------
000010BC                           213  KBDREAD
000010BC                           214  ; TRAP SERVICE ROUTINE.
000010BC                           215  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           216  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           217  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           218  ; INPUT    - NONE
000010BC                           219  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           220  ; MODIFIES - NONE
000010BC                           221  ; -----------------------------------------------------------------------------
000010BC                           222              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                223              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                224              MOVE.B  #19,D0
000010C4                           225              
000010C4  223C 50104D20            226              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     227              TRAP    #15
000010CC                           228          
000010CC  4202                     229              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                230              MOVE.W  #3,D4
000010D2                           231              
000010D2                           232  .LOOP1      
000010D2                           233       
000010D2  E189                     234              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     235              MOVE.W  SR,D3                   
000010D6  0243 0001                236              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     237              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     238              OR.B    D3,D2                   
000010DE  51CC FFF2                239              DBRA    D4,.LOOP1
000010E2                           240          
000010E2                           241              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           242              
000010E2  223C 28272625            243              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     244              TRAP    #15
000010EA                           245              
000010EA  383C 0003                246              MOVE.W  #3,D4
000010EE                           247  .LOOP2      
000010EE  E189                     248              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     249              MOVE.W  SR,D3
000010F2  0243 0001                250              ANDI.W  #$0001,D3    
000010F6  E30A                     251              LSL.B   #1,D2
000010F8  8403                     252              OR.B    D3,D2
000010FA                           253              
000010FA  51CC FFF2                254              DBRA    D4,.LOOP2
000010FE                           255              
000010FE                           256              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           257              
000010FE                           258              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 00001508            259              MOVE.B  KBDVAL,D3
00001104  4603                     260              NOT.B   D3
00001106  13C2 00001508            261              MOVE.B  D2,KBDVAL
0000110C  C602                     262              AND.B   D2,D3
0000110E  13C3 00001509            263              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                264              MOVEM.L (A7)+,D0-D4
00001118  4E73                     265              RTE
0000111A                           266  
0000111A                           267  ; =============================================================================
0000111A                           268  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           269  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           270  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           271  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           272  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           273  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           274  ; =============================================================================
0000111A                           275  
0000111A                           276  ; -----------------------------------------------------------------------------
0000111A                           277  DMMINIT
0000111A                           278  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           279  ; INPUT    - NONE
0000111A                           280  ; OUTPUT   - NONE
0000111A                           281  ; MODIFIES - NONE
0000111A                           282  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                283              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001540            284              LEA     DMMDATA,A0
00001124  303C 0031                285              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                286  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            287              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                288              DBRA.W  D0,.LOOP
00001136  4CDF 0101                289              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     290              RTS
0000113C                           291  
0000113C                           292  ; -----------------------------------------------------------------------------
0000113C                           293  DMMFIRST
0000113C                           294  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           295  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           296  ; INPUT    - NONE
0000113C                           297  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           298  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           299  ; -----------------------------------------------------------------------------
0000113C  41F9 00001540            300              LEA     DMMDATA,A0
00001142  4A58                     301  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                302              BNE     DMMFRFND
00001148  D1FC 0000003E            303              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 000021BF            304  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     305              BLT     DMMFRLOP
00001156  207C 00000000            306              MOVE.L  #0,A0
0000115C  4E75                     307  DMMFRFND    RTS
0000115E                           308  
0000115E                           309  ; -----------------------------------------------------------------------------
0000115E                           310  DMMNEXT
0000115E                           311  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           312  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           313  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           314  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           315  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           316  ; -----------------------------------------------------------------------------
0000115E  2F00                     317              MOVE.L  D0,-(A7)
00001160  2008                     318              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            319              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            320              ADD.L   #DMMBSIZE,D0
0000116E  2040                     321              MOVE.L  D0,A0
00001170  201F                     322              MOVE.L  (A7)+,D0
00001172  60DA                     323              BRA     DMMFRCOM
00001174                           324  
00001174                           325  ; -----------------------------------------------------------------------------
00001174                           326  DMMFRSTO
00001174                           327  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           328  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           329  ; INPUT    - D0.W : ID TO SEARCH
00001174                           330  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           331  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           332  ; -----------------------------------------------------------------------------
00001174  41F9 00001540            333              LEA     DMMDATA,A0
0000117A  B058                     334  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                335              BEQ     DMMFFND
00001180  D1FC 0000003E            336              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 000021BF            337  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     338              BLT     DMMFLOOP
0000118E  207C 00000000            339              MOVE.L  #0,A0
00001194  4E75                     340  DMMFFND     RTS
00001196                           341  
00001196                           342  ; -----------------------------------------------------------------------------
00001196                           343  DMMNEXTO
00001196                           344  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           345  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           346  ; INPUT    - D0.W : ID TO SEARCH
00001196                           347  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           348  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           349  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           350  ; -----------------------------------------------------------------------------
00001196  2F00                     351              MOVE.L  D0,-(A7)
00001198  2008                     352              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            353              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            354              ADD.L   #DMMBSIZE,D0
000011A6  2040                     355              MOVE.L  D0,A0
000011A8  201F                     356              MOVE.L  (A7)+,D0
000011AA  60DA                     357              BRA     DMMFCOM
000011AC                           358  
000011AC                           359  ; -----------------------------------------------------------------------------
000011AC                           360  DMMALLOC
000011AC                           361  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           362  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           363  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           364  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           365  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           366  ; -----------------------------------------------------------------------------
000011AC  3F00                     367              MOVE.W  D0,-(A7)
000011AE  4240                     368              CLR.W   D0
000011B0  4EB8 1174                369              JSR     DMMFRSTO
000011B4  301F                     370              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            371              CMP.L   #0,A0
000011BC  6700 0006                372              BEQ     .END
000011C0  3140 FFFE                373              MOVE.W  D0,-2(A0)
000011C4  4E75                     374  .END        RTS
000011C6                           375  
000011C6                           376  ; -----------------------------------------------------------------------------
000011C6                           377  DMMFREE
000011C6                           378  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           379  ; SYSTEM (0)
000011C6                           380  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           381  ; OUTPUT   - NONE
000011C6                           382  ; MODIFIES - NONE
000011C6                           383  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                384              MOVEM.L D0/A0,-(A7)
000011CA  2008                     385              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            386              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     387              MOVE.L  D0,A0
000011D4  4250                     388              CLR.W   (A0)
000011D6  4CDF 0101                389              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     390              RTS
000011DC                           391  
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  -------------------- end include --------------------
000011DC                           403              
000011DC                           404              ; TO DO: PUT YOUR GAME-RELATED INCLUDES HERE
000011DC                           405              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           406  ; =============================================================================
000011DC                           407  ; CONSTANTS
000011DC                           408  ; =============================================================================
000011DC                           409  
000011DC                           410  ; --- PLAYER RELATED CONSTANTS ------------------------------------------------
000011DC                           411  
000011DC                           412  
000011DC                           413  
000011DC                           414  
000011DC                           415  
000011DC                           416  ;PLRINIEN    EQU     500                     ; PLAYER INITIAL ENERGY (<SCRWIDTH)
000011DC                           417  ;PLRSPEED    EQU     7                       ; PLAYER SPEED (PIXELS PER INT)
000011DC                           418  
000011DC                           419  ;PLRDMGCL    EQU     $00FFFFFF               ; PLAYER DAMAGED COLOR
000011DC                           420  ;PLRTXTCL    EQU     $00FFFFFF               ; FONT COLOR
000011DC                           421  ;PLRTXTX     EQU     65                       ; SCORE X COORDINATE
000011DC                           422  ;PLRTXTY     EQU     10                       ; SCORE Y COORDINATE
000011DC                           423  ;PLRLIFEH    EQU     20                      ; HEIGHT OF LIFE BAR
000011DC                           424  ;PLRLIFEY    EQU     SCRHEIGH-PLRLIFEH*2     ; LIFE BAR Y POS
000011DC                           425  ;PLRLIFEC    EQU     $000000FF               ; LIFE BAR COLOR
000011DC                           426  ;PLRUMDMG    EQU     %00000001               ; UPDATE DAMAGE MASK
000011DC                           427  ;PLRPMDMG    EQU     %00000010               ; PLOT DAMAGE MASK
000011DC                           428  ;PLRUBDMG    EQU     0                       ; UPDATE DAMAGE BIT
000011DC                           429  ;PLRPBDMG    EQU     1                       ; PLOT DAMAGE BIT
000011DC                           430  
000011DC                           431  
000011DC                           432  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           433  
000011DC  =00000008                434  INTTITX     EQU     8                      ; TITLE X COORDINATE
000011DC  =00000007                435  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                436  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000017                437  INTPRSX     EQU     23                      ; PRESS FIRE X COORDINATE
000011DC  =00000032                438  INTPRSY     EQU     50                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                439  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC                           440  
000011DC                           441  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                442  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                443  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                444  STAPLAY     EQU     1                       ; NORMAL GAME STATE
000011DC  =00000002                445  STAGOVR     EQU     2                       ; GAME OVER STATE
000011DC                           446  ;----------------------------------------------------------------------------
000011DC                           447  
000011DC                           448  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           449  
000011DC  =00000023                450  GOVSTRX     EQU     35                      ; TITLE X COORDINATE
000011DC  =0000000F                451  GOVSTRY     EQU     15                      ; TITLE Y COORDINATE
000011DC  =00FFFFFF                452  GOVSTRC     EQU     $00FFFFFF               ; TITLE COLOR
000011DC                           453  
000011DC                           454  
000011DC                           455  
000011DC                           456  
000011DC                           457  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =000001AA                458  SCRCTRL     EQU     SCRWIDTH/2+SCRWIDTH/6   ;
000011DC                           459  ;----------------------------------------------------------------------------
000011DC                           460  
000011DC                           461  
000011DC                           462  ; PLAYER --------------------------------------------------------------------
000011DC                           463  
000011DC  =00000064                464  PINWIDTH    EQU     100                      ; PLAYER INITIAL WIDTH (PIXELS)
000011DC  =00000014                465  PHEIGHT     EQU     20                      ; PLAYER HEIGHT (PIXELS)
000011DC  =00ECD59D                466  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011DC  =00000003                467  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011DC  =0000000F                468  PMOVE       EQU     15                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011DC  =000001C2                469  PPOSY       EQU     SCRHEIGH-PHEIGHT-10      ;POSICION DE LA PLATAFORMA Y
000011DC  =000000A3                470  PINPOSX     EQU     SCRCTRL/2-PINWIDTH/2
000011DC                           471  ; ---------------------------------------------------------------------------
000011DC                           472  
000011DC                           473  ; BALL ----------------------------------------------------------------------
000011DC  =00000005                474  BHEIGHT     EQU     5                       ;ALTURA DE LA BOLA
000011DC  =00000005                475  BWIDTH      EQU     5                       ;ANCHURA DE LA BOLA
000011DC  =000000D0                476  BINPOSX     EQU     PINPOSX+PINWIDTH/2-BWIDTH                      ;POSICION DE LA PELOTA X INICIAL
000011DC  =000001AE                477  BINPOSY     EQU     PPOSY-PHEIGHT              ;POSICION DE LA PELOTA Y INICIAL
000011DC  =00000005                478  BINSPEED    EQU     5                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011DC  =0FFFFFFF                479  BINCOLOR    EQU     $00FFFFFFF
000011DC                           480  ; ---------------------------------------------------------------------------
000011DC                           481  
000011DC                           482  
000011DC                           483  
000011DC                           484  
000011DC                           485  
000011DC                           486  
000011DC                           487  -------------------- end include --------------------
000011DC                           488              INCLUDE "PLAYER.X68"            ;EL JUGADOR
000011DC                           489  ; -----------------------------------------------------------------------------
000011DC                           490  ;           PLAYER
000011DC                           491  ; -----------------------------------------------------------------------------
000011DC                           492  PLRINIT
000011DC                           493  ; INITIALIZES THE PLAYER
000011DC                           494  ; INPUT    - NONE
000011DC                           495  ; OUTPUT   - NONE
000011DC                           496  ; MODIFIES - NONE
000011DC                           497  ; -----------------------------------------------------------------------------
000011DC  4EB9 00001474            498              JSR     BINIT
000011E2  33FC 00A3 000021C4       499              MOVE.W  #PINPOSX,PPOSX
000011EA  33FC 0064 000021C6       500              MOVE.W  #PINWIDTH,PWIDTH
000011F2  33FC 0003 000021C8       501              MOVE.W  #PINLIVE,PLIVES
000011FA  4279 000021CA            502              CLR.W   PSCORE
00001200                           503             
00001200  4E75                     504              RTS
00001202                           505  
00001202                           506  
00001202                           507  ; -----------------------------------------------------------------------------
00001202                           508  
00001202                           509  PLRUPD      
00001202  48E7 6000                510              MOVEM.L D1-D2,-(A7)
00001206                           511              
00001206                           512              
00001206  1239 00001508            513              MOVE.B  (KBDVAL),D1  
0000120C  E219                     514              ROR.B   #1,D1                   ;IZQUIERDA
0000120E  6400 0018                515              BCC     .RIGHTKEY                  ;CUANDO C = 0
00001212                           516              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
00001212  3439 000021C4            517              MOVE.W  (PPOSX),D2
00001218  B47C 0000                518              CMP.W    #0,D2
0000121C  6F00 000A                519              BLE     .RIGHTKEY
00001220  0479 000F 000021C4       520              SUB.W   #PMOVE,(PPOSX)
00001228                           521  .RIGHTKEY
00001228  E209                     522              LSR.B   #1,D1                   ;NO NOS IMPORTA EL DE ARRIBA
0000122A  E219                     523              ROR.B   #1,D1                   ;
0000122C  6400 0022                524              BCC     .END
00001230                           525              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
00001230  3439 000021C4            526              MOVE.W  (PPOSX),D2
00001236  D479 000021C6            527              ADD.W   (PWIDTH),D2 
0000123C  0642 000F                528              ADD.W   #PMOVE,D2 
00001240  B47C 01AA                529              CMP.W    #SCRCTRL,D2
00001244  6C00 000A                530              BGE     .END
00001248  0679 000F 000021C4       531              ADD.W   #PMOVE,(PPOSX)
00001250                           532  .END
00001250  4CDF 0006                533              MOVEM.L (A7)+,D1-D2
00001254  4E75                     534              RTS
00001256                           535  
00001256                           536  
00001256                           537  PPLOT
00001256  48E7 FC00                538              MOVEM.L  D0-D5,-(A7)
0000125A                           539              ;CONTOUR COLOR
0000125A  223C 00ECD59D            540              MOVE.L  #PCOLOR,D1  
00001260  103C 0050                541              MOVE.B  #80,D0
00001264  4E4F                     542              TRAP    #15
00001266                           543      
00001266                           544      
00001266                           545               ;FILL COLOR
00001266  C2BC 00ECD59D            546              AND.L   #PCOLOR,D1  
0000126C  103C 0051                547              MOVE.B  #81,D0
00001270  4E4F                     548              TRAP    #15
00001272                           549   
00001272                           550  
00001272                           551               ;SQUARE
00001272  3A39 000021C6            552              MOVE.W  (PWIDTH),D5                     
00001278                           553       
00001278  0645 000F                554              ADD.W   #PMOVE,D5
0000127C                           555      
0000127C  3639 000021C4            556              MOVE.W  (PPOSX),D3
00001282  383C 01D6                557              MOVE.W  #PPOSY+PHEIGHT,D4
00001286  D645                     558              ADD.W   D5,D3
00001288                           559      
00001288  3239 000021C4            560              MOVE.W  (PPOSX),D1
0000128E  343C 01C2                561              MOVE.W  #PPOSY,D2
00001292                           562             
00001292                           563              ;ADD.W   D5,D2
00001292                           564      
00001292  303C 0057                565              MOVE.W  #87,D0
00001296  4E4F                     566              TRAP    #15
00001298                           567      
00001298  4CDF 003F                568              MOVEM.L  (A7)+,D0-D5
0000129C                           569  
0000129C  4E75                     570              RTS
0000129E                           571      
0000129E                           572  
0000129E                           573  
0000129E                           574  
0000129E                           575  
0000129E                           576  
0000129E                           577  
0000129E                           578  
0000129E                           579  -------------------- end include --------------------
0000129E                           580              INCLUDE "STATES.X68"            ;
0000129E                           581  ; =============================================================================
0000129E                           582  ; GAME STATE MANAGEMENT
0000129E                           583  ; =============================================================================
0000129E                           584  
0000129E                           585  ; -----------------------------------------------------------------------------
0000129E                           586  STAINIT
0000129E                           587  ; INITALIZES THE STATE MANAGER
0000129E                           588  ; INPUT    - NONE
0000129E                           589  ; OUTPUT   - NONE
0000129E                           590  ; MODIFIES - NONE
0000129E                           591  ; -----------------------------------------------------------------------------
0000129E  33FC FFFF 000021C0       592              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
000012A6                           593             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
000012A6  33FC 0000 000021C2       594              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
000012AE  4E75                     595              RTS
000012B0                           596  
000012B0                           597  ; -----------------------------------------------------------------------------
000012B0                           598  STAUPD
000012B0                           599  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
000012B0                           600  ; INPUT    - NONE
000012B0                           601  ; OUTPUT   - NONE
000012B0                           602  ; MODIFIES - NONE
000012B0                           603  ; -----------------------------------------------------------------------------
000012B0  48E7 8080                604              MOVEM.L D0/A0,-(A7)
000012B4  4280                     605              CLR.L   D0
000012B6  3039 000021C2            606              MOVE.W  (STANEXT),D0
000012BC  B079 000021C0            607              CMP.W   (STACUR),D0
000012C2  6700 0012                608              BEQ     .DOUPD
000012C6  33C0 000021C0            609              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
000012CC  E588                     610              LSL.L   #2,D0
000012CE  2040                     611              MOVE.L  D0,A0
000012D0  2068 12EE                612              MOVE.L  .INITBL(A0),A0
000012D4  4E90                     613              JSR     (A0)
000012D6  4280                     614  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
000012D8  3039 000021C0            615              MOVE.W  (STACUR),D0
000012DE  E588                     616              LSL.L   #2,D0
000012E0  2040                     617              MOVE.L  D0,A0
000012E2  2068 12FA                618              MOVE.L  .UPDTBL(A0),A0
000012E6  4E90                     619              JSR     (A0)
000012E8  4CDF 0101                620              MOVEM.L (A7)+,D0/A0
000012EC  4E75                     621              RTS
000012EE= 0000111A 000011DC ...    622  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTY     ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
000012FA                           623                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
000012FA                           624                                               ;EL 2 ES NO HACER NADA 
000012FA= 0000137E 00001330 ...    625  .UPDTBL     DC.L    STAINTRU,STAPLAYU,STAGOVRU
00001306                           626                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
00001306                           627                                              ;EL 2 HACE QUE SE UPDATE 
00001306                           628  
00001306                           629  ; -----------------------------------------------------------------------------
00001306                           630  STAPLOT
00001306                           631  ; PERFORMS STATE PLOT
00001306                           632  ; INPUT    - NONE
00001306                           633  ; OUTPUT   - NONE
00001306                           634  ; MODIFIES - NONE
00001306                           635  ; -----------------------------------------------------------------------------
00001306  48E7 8080                636              MOVEM.L D0/A0,-(A7)
0000130A  4280                     637              CLR.L   D0
0000130C  3039 000021C0            638              MOVE.W  (STACUR),D0
00001312  E588                     639              LSL.L   #2,D0
00001314  2040                     640              MOVE.L  D0,A0
00001316  2068 1322                641              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
0000131A  4E90                     642              JSR     (A0)
0000131C  4CDF 0101                643              MOVEM.L (A7)+,D0/A0
00001320  4E75                     644              RTS
00001322= 00001394 0000133C ...    645  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAGOVRP
0000132E                           646                                               ; EL 0 ES DIBUJAR LA PANTALLA DE INICIO
0000132E                           647  
0000132E                           648  ; -----------------------------------------------------------------------------
0000132E                           649  STAEMPTY
0000132E                           650  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
0000132E                           651  ; INPUT    - NONE
0000132E                           652  ; OUTPUT   - NONE
0000132E                           653  ; MODIFIES - NONE
0000132E                           654  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
0000132E                           655  ; -----------------------------------------------------------------------------
0000132E  4E75                     656              RTS
00001330                           657  
00001330                           658  ; -----------------------------------------------------------------------------
00001330  =000011DC                659  STAPLAYI    EQU     PLRINIT
00001330                           660  ; PLAY STATE INITIALIZATION.
00001330                           661  ; INPUT    - NONE
00001330                           662  ; OUTPUT   - NONE
00001330                           663  ; MODIFIES - NONE
00001330                           664  ; NOTE     - JUST A WRAPPER FOR PLRINIT
00001330                           665  ; -----------------------------------------------------------------------------
00001330                           666             
00001330                           667  ; -----------------------------------------------------------------------------
00001330                           668  STAPLAYU
00001330                           669  ; PLAY STATE UPDATE
00001330                           670  ; INPUT    - NONE
00001330                           671  ; OUTPUT   - NONE
00001330                           672  ; MODIFIES - NONE
00001330                           673  ; -----------------------------------------------------------------------------
00001330  4EB8 1202                674              JSR     PLRUPD
00001334  4EB9 00001496            675              JSR     BUPD                    
0000133A  4E75                     676              RTS
0000133C                           677  ; -----------------------------------------------------------------------------
0000133C                           678  STAPLAYP
0000133C                           679  ; PLAY STATE PLOT
0000133C                           680  ; INPUT    - NONE
0000133C                           681  ; OUTPUT   - NONE
0000133C                           682  ; MODIFIES - NONE
0000133C                           683  ; -----------------------------------------------------------------------------
0000133C  48E7 F800                684              MOVEM.L D0-D4,-(A7)
00001340  4EB8 1256                685              JSR     PPLOT
00001344  4EB9 000014A8            686              JSR     BPLOT
0000134A                           687  
0000134A                           688        
0000134A                           689                          
0000134A  223C 00FFFFFF            690              MOVE.L  #$00FFFFFF,D1  ;COLOR
00001350  103C 0050                691              MOVE.B  #80,D0
00001354  4E4F                     692              TRAP    #15
00001356                           693              
00001356  C2BC 00FFFFFF            694              AND.L   #$00FFFFFF,D1  ;COLOR
0000135C  103C 0051                695              MOVE.B  #81,D0
00001360  4E4F                     696              TRAP    #15
00001362                           697              
00001362  103C 0057                698              MOVE.B  #87,D0
00001366  323C 01AA                699              MOVE.W  #SCRCTRL,D1
0000136A  363C 01B4                700              MOVE.W  #SCRCTRL+10,D3
0000136E  343C 0000                701              MOVE.W  #0,D2
00001372  383C 01E0                702              MOVE.W  #SCRHEIGH,D4
00001376  4E4F                     703              TRAP    #15
00001378                           704              
00001378  4CDF 001F                705              MOVEM.L  (A7)+,D0-D4
0000137C                           706  
0000137C  4E75                     707              RTS
0000137E                           708  
0000137E                           709  ; -----------------------------------------------------------------------------
0000137E  =0000111A                710  STAINTRI    EQU     DMMINIT                 ;VACIA LA MEMORIA DEL JUEGO
0000137E                           711  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
0000137E                           712  
0000137E                           713  ; INTRO STATE INIT
0000137E                           714  ; INPUT    - NONE
0000137E                           715  ; OUTPUT   - NONE
0000137E                           716  ; MODIFIES - NONE
0000137E                           717  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
0000137E                           718  ; -----------------------------------------------------------------------------
0000137E                           719  
0000137E                           720  ; -----------------------------------------------------------------------------
0000137E                           721  STAINTRU
0000137E                           722  ; INTRO STATE UPDATE
0000137E                           723  ; INPUT    - NONE
0000137E                           724  ; OUTPUT   - NONE
0000137E                           725  ; MODIFIES - NONE
0000137E                           726  ; -----------------------------------------------------------------------------
0000137E  0839 0004 00001509       727              BTST.B  #KBDBITF1,(KBDEDGE)
00001386  6700 000A                728              BEQ     .END
0000138A  33FC 0001 000021C2       729              MOVE.W  #STAPLAY,(STANEXT)
00001392  4E75                     730  .END        RTS
00001394                           731  
00001394                           732  ; -----------------------------------------------------------------------------
00001394                           733  STAINTRP
00001394                           734  ; INTRO STATE PLOT
00001394                           735  ; INPUT    - NONE
00001394                           736  ; OUTPUT   - NONE
00001394                           737  ; MODIFIES - NONE
00001394                           738  ; -----------------------------------------------------------------------------
00001394  48E7 C040                739              MOVEM.L A1/D0-D1,-(A7)
00001398  323C 0807                740              MOVE.W  #INTTITX<<8|INTTITY, D1 ;COORDENADAS DEL TEXTO TITULO
0000139C  103C 000B                741              MOVE.B  #11,D0
000013A0  4E4F                     742              TRAP    #15
000013A2                           743              
000013A2  223C 00DCAA7C            744              MOVE.L  #INTTITC,D1
000013A8  243C 00120001            745              MOVE.L  #18<<16|1,D2
000013AE  103C 0015                746              MOVE.B  #21,D0
000013B2  4E4F                     747              TRAP    #15
000013B4                           748  
000013B4  43F9 000013EE            749              LEA     .TITSTR,A1              ;PONE EL TEXTO
000013BA  103C 000E                750              MOVE.B  #14,D0
000013BE  4E4F                     751              TRAP    #15
000013C0                           752  
000013C0  323C 1732                753              MOVE.W  #INTPRSX<<8|INTPRSY, D1 ;COORDENADAS DEL TEXTO START
000013C4  103C 000B                754              MOVE.B  #11,D0
000013C8  4E4F                     755              TRAP    #15
000013CA                           756              
000013CA  223C 00FFFFFF            757              MOVE.L  #INTPRSC,D1
000013D0  243C 000A0001            758              MOVE.L  #10<<16|1,D2
000013D6  103C 0015                759              MOVE.B  #21,D0
000013DA  4E4F                     760              TRAP    #15
000013DC                           761              
000013DC  43F9 00001404            762              LEA     .PRSSTR,A1
000013E2  103C 000E                763              MOVE.B  #14,D0
000013E6  4E4F                     764              TRAP    #15
000013E8  4CDF 0203                765              MOVEM.L (A7)+,A1/D0-D1
000013EC  4E75                     766              RTS
000013EE                           767  
000013EE= 20 20 20 42 72 65 ...    768  .TITSTR     DC.B    '   Breaking Blocks   ',0
00001404= 20 50 55 53 48 20 ...    769  .PRSSTR     DC.B    ' PUSH FIRE TO START ',0
0000141A                           770              DS.W    0
0000141A                           771  
0000141A                           772  ; -----------------------------------------------------------------------------
0000141A                           773  STAGOVRU
0000141A                           774  ; GAME OVER STATE UPDATE
0000141A                           775  ; INPUT    - NONE
0000141A                           776  ; OUTPUT   - NONE
0000141A                           777  ; MODIFIES - NONE
0000141A                           778  ; -----------------------------------------------------------------------------
0000141A  0839 0004 00001509       779              BTST.B  #KBDBITF1,(KBDEDGE)
00001422  6700 000A                780              BEQ     .END
00001426  33FC 0000 000021C2       781              MOVE.W  #STAINTR,(STANEXT)
0000142E  4E75                     782  .END        RTS
00001430                           783  
00001430                           784  ; -----------------------------------------------------------------------------
00001430                           785  STAGOVRP
00001430                           786  ; GAME OVER STATE PLOT
00001430                           787  ; INPUT    - NONE
00001430                           788  ; OUTPUT   - NONE
00001430                           789  ; MODIFIES - NONE
00001430                           790  ; -----------------------------------------------------------------------------
00001430  48E7 C040                791              MOVEM.L A1/D0-D1,-(A7)
00001434  323C 230F                792              MOVE.W  #GOVSTRX<<8|GOVSTRY, D1 ;COORDENADAS DEL TEXTO TITULO
00001438  103C 000B                793              MOVE.B  #11,D0
0000143C  4E4F                     794              TRAP    #15
0000143E                           795              
0000143E  103C 0050                796              MOVE.B  #80,D0                  ;DEFINIMOS COLOR DE TITULO
00001442  223C 00FFFFFF            797              MOVE.L  #GOVSTRC,D1
00001448  4E4F                     798              TRAP    #15
0000144A                           799              
0000144A  103C 0051                800              MOVE.B  #81,D0                  ;RELLENA COLOR 
0000144E  223C 00FF0000            801              MOVE.L  #$00FF0000,D1
00001454  4E4F                     802              TRAP    #15
00001456                           803              
00001456  43F9 00001468            804              LEA     .GOVSTR,A1
0000145C  103C 000E                805              MOVE.B  #14,D0
00001460  4E4F                     806              TRAP    #15
00001462  4CDF 0203                807              MOVEM.L (A7)+,A1/D0-D1
00001466  4E75                     808              RTS
00001468                           809  
00001468= 47 41 4D 45 20 20 ...    810  .GOVSTR     DC.B    'GAME  OVER',0
00001474                           811              DS.W    0
00001474                           812  
00001474                           813  
00001474                           814  
00001474                           815  
00001474                           816  
00001474                           817  -------------------- end include --------------------
00001474                           818              INCLUDE "BALL.X68"              ;LA PELOTA
00001474                           819  ; =============================================================================
00001474                           820  ; BALL
00001474                           821  ; =============================================================================
00001474                           822  
00001474                           823  BINIT
00001474  33FC 00D0 000021CE       824              MOVE.W  #BINPOSX,BPOSX
0000147C  33FC 01AE 000021D0       825              MOVE.W  #BINPOSY,BPOSY
00001484  33FC 0005 000021D2       826              MOVE.W  #BINSPEED,BSPEEDX
0000148C  33FC 0005 000021D4       827              MOVE.W  #BINSPEED,BSPEEDY
00001494  4E75                     828              RTS
00001496                           829              
00001496                           830  BUPD        
00001496                           831              
00001496                           832              
00001496  33FC 00D0 000021CE       833              MOVE.W  #BINPOSX,BPOSX
0000149E  33FC 01AE 000021D0       834              MOVE.W  #BINPOSY,BPOSY
000014A6                           835  ;.LEFT       MOVE.W  BPOSX,D1
000014A6                           836  ;            CMP.W    #0,D1                  ;CHOCA
000014A6                           837  ;            BGT     .RIGHT                  ;SALTA SI CHOCA
000014A6                           838  ;            MOVE.W  BSPEEDX,D2
000014A6                           839  
000014A6                           840              
000014A6  4E75                     841              RTS
000014A8                           842              
000014A8                           843  BPLOT       
000014A8  48E7 FC00                844              MOVEM.L  D0-D5,-(A7)
000014AC                           845              ;CONTOUR COLOR
000014AC  223C 0FFFFFFF            846              MOVE.L  #BINCOLOR,D1  
000014B2  103C 0050                847              MOVE.B  #80,D0
000014B6  4E4F                     848              TRAP    #15
000014B8                           849      
000014B8                           850               ;FILL COLOR
000014B8  C2BC 0FFFFFFF            851              AND.L   #BINCOLOR,D1  
000014BE  103C 0051                852              MOVE.B  #81,D0
000014C2  4E4F                     853              TRAP    #15
000014C4                           854   
000014C4                           855              ;CIRCLE
000014C4  323C 0064                856              MOVE.W  #100,D1
000014C8  343C 0064                857              MOVE.W  #100,D2
000014CC  363C 0096                858              MOVE.W  #150,D3
000014D0  383C 0096                859              MOVE.W  #150,D4
000014D4                           860      
000014D4  303C 0058                861              MOVE.W  #88,D0
000014D8  4E4F                     862              TRAP    #15
000014DA                           863      
000014DA  4CDF 003F                864              MOVEM.L  (A7)+,D0-D5
000014DE                           865  
000014DE  4E75                     866              RTS
000014E0                           867  
000014E0                           868  
000014E0                           869  
000014E0                           870  -------------------- end include --------------------
000014E0                           871  
000014E0                           872  ; --- INITIALIZE --------------------------------------------------------------
000014E0                           873              
000014E0  4EB8 1000                874  START       JSR     SYSINIT
000014E4                           875              ; TO DO: CALL GAME INITIALIZATION CODE HERE
000014E4  4EB8 129E                876              JSR     STAINIT                 ;INICIA LAS PANTALLAS            
000014E8                           877              
000014E8                           878  ; --- UPDATE ------------------------------------------------------------------
000014E8                           879  
000014E8  4E40                     880  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
000014EA                           881                                              ; UPDATE DEPENDING ON THE STATE
000014EA                           882              ; TO DO: CALL GAME UPDATE CODE HERE
000014EA  4EB8 12B0                883              JSR     STAUPD
000014EE                           884  
000014EE                           885  ; --- WAIT SYNCH --------------------------------------------------------------
000014EE                           886  
000014EE  4A39 0000150A            887  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
000014F4  67F8                     888              BEQ     .WINT
000014F6                           889              
000014F6  4239 0000150A            890              CLR.B   (SCRINTCT)
000014FC                           891  
000014FC                           892  ; --- PLOT --------------------------------------------------------------------
000014FC                           893              
000014FC                           894              ; TO DO: CALL GAME PLOT CODE HERE
000014FC  4EB8 1306                895              JSR     STAPLOT
00001500                           896  
00001500  4E41                     897              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001502  60E4                     898              BRA     .LOOP
00001504  FFFF FFFF                899              SIMHALT
00001508                           900  
00001508                           901  ; --- VARIABLES ---------------------------------------------------------------
00001508                           902  
00001508                           903              INCLUDE "SYSVAR.X68"
00001508                           904  ; =============================================================================
00001508                           905  ; SYSTEM VARS
00001508                           906  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
00001508                           907  ; THEY MUST NOT BE IN PROTECTED MEMORY.
00001508                           908  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
00001508                           909  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
00001508                           910  ; THIS IS GOOD ENOUGH.
00001508                           911  ; =============================================================================
00001508                           912  
00001508                           913  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001508                           914  
00001508                           915  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001509                           916  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
0000150A                           917  
0000150A                           918              DS.W    0
0000150A                           919  
0000150A                           920  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
0000150A                           921  
0000150A                           922  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
0000150B                           923  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
0000150C                           924              DS.W    0
0000150C                           925  
0000150C                           926  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
0000150C                           927  
00001540                           928              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001540                           929  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
000021C0                           930              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
000021C0                           931  
000021C0                           932  
000021C0                           933  
000021C0                           934  -------------------- end include --------------------
000021C0                           935              INCLUDE "VAR.X68"
000021C0                           936  ; =============================================================================
000021C0                           937  ; GAME VARS
000021C0                           938  ; =============================================================================
000021C0                           939  
000021C0                           940  ; TO DO: DECLARE GAME VARIABLES HERE.
000021C0                           941  
000021C0                           942  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
000021C0                           943  
000021C0                           944  STACUR      DS.W    1                       ; CURRENT GAME STATE
000021C2                           945  STANEXT     DS.W    1                       ; NEXT GAME STATE
000021C4                           946  ;----------------------------------------------------------------------------
000021C4                           947  
000021C4                           948  ; PLAYER --------------------------------------------------------------------
000021C4                           949  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
000021C6                           950  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
000021C8                           951  PLIVES      DS.W    1                       ;LIVES LEFT
000021CA                           952  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
000021CC                           953  PSPEED      DS.W    1
000021CE                           954  ;----------------------------------------------------------------------------
000021CE                           955  
000021CE                           956  ; BALL ----------------------------------------------------------------------
000021CE                           957  BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
000021D0                           958  BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
000021D2                           959  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
000021D4                           960  BSPEEDY     DS.W    1
000021D6                           961  BCOLOR      DS.W    1
000021D8                           962  
000021D8                           963  
000021D8                           964  
000021D8                           965  
000021D8                           966  -------------------- end include --------------------
000021D8                           967              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              21D6
BHEIGHT             5
BINCOLOR            FFFFFFF
BINIT               1474
BINPOSX             D0
BINPOSY             1AE
BINSPEED            5
BPLOT               14A8
BPOSX               21CE
BPOSY               21D0
BSPEEDX             21D2
BSPEEDY             21D4
BUPD                1496
BWIDTH              5
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1540
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
GOVSTRC             FFFFFF
GOVSTRX             23
GOVSTRY             F
INTPRSC             FFFFFF
INTPRSX             17
INTPRSY             32
INTTITC             DCAA7C
INTTITX             8
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1509
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1508
PCOLOR              ECD59D
PHEIGHT             14
PINLIVE             3
PINPOSX             A3
PINWIDTH            64
PLIVES              21C8
PLRINIT             11DC
PLRUPD              1202
PLRUPD:END          1250
PLRUPD:RIGHTKEY     1228
PMOVE               F
PPLOT               1256
PPOSX               21C4
PPOSY               1C2
PSCORE              21CA
PSPEED              21CC
PWIDTH              21C6
SCRCTRL             1AA
SCRCYCCT            150B
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            150A
SCRIRQ              1
SCRISR              107E
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            280
STACUR              21C0
STAEMPTY            132E
STAGOVR             2
STAGOVRP            1430
STAGOVRP:GOVSTR     1468
STAGOVRU            141A
STAGOVRU:END        142E
STAINIT             129E
STAINTR             0
STAINTRI            111A
STAINTRP            1394
STAINTRP:PRSSTR     1404
STAINTRP:TITSTR     13EE
STAINTRU            137E
STAINTRU:END        1392
STANEXT             21C2
STANONE             FFFFFFFF
STAPLAY             1
STAPLAYI            11DC
STAPLAYP            133C
STAPLAYU            1330
STAPLOT             1306
STAPLOT:PLTTBL      1322
START               14E0
START:LOOP          14E8
START:WINT          14EE
STAUPD              12B0
STAUPD:DOUPD        12D6
STAUPD:INITBL       12EE
STAUPD:UPDTBL       12FA
SYSINIT             1000
