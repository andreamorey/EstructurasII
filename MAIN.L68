0000158C Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 11/12/2019 13:59:04

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION :
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8  
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =00000280                 81  SCRWIDTH    EQU     640                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  -------------------- end include --------------------
00001000                            93              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            94  ; =============================================================================
00001000                            95  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            96  ; =============================================================================
00001000                            97  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            98  ; -----------------------------------------------------------------------------
00001000                            99  SYSINIT
00001000                           100  ; INITIALIZES THE SYSTEM
00001000                           101  ; INPUT    - NONE
00001000                           102  ; OUTPUT   - NONE
00001000                           103  ; MODIFIES - NONE
00001000                           104  ; -----------------------------------------------------------------------------
00001000  205F                     105              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            106              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            107              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            108              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                109              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     110              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     111              RTS
0000101C                           112  
0000101C                           113  ; =============================================================================
0000101C                           114  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           115  ; =============================================================================
0000101C                           116  
0000101C                           117  ; -----------------------------------------------------------------------------
0000101C                           118  SCRINIT
0000101C                           119  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           120  ; INPUT    - NONE
0000101C                           121  ; OUTPUT   - NONE
0000101C                           122  ; MODIFIES - D0,D1,D2,D3
0000101C                           123  ; -----------------------------------------------------------------------------
0000101C                           124              ; TO DO:
0000101C                           125              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                126              ORI.W   #$0700,SR
00001020                           127              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           128              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       129              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           130              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                131              MOVE.B  #33,D0
0000102C  223C 028001E0            132              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     133              TRAP    #15
00001034                           134              ; - SET WINDOWED MODE
00001034  7201                     135              MOVE.L  #1,D1
00001036  4E4F                     136              TRAP    #15
00001038                           137              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                138              MOVE.B  #11,D0
0000103C  323C FF00                139              MOVE.W  #$FF00,D1
00001040  4E4F                     140              TRAP    #15
00001042                           141              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                142              MOVE.B  #92,D0
00001046  123C 0011                143              MOVE.B  #17,D1
0000104A  4E4F                     144              TRAP    #15
0000104C                           145              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     146              MOVE.L  #11,D0
0000104E  323C FF00                147              MOVE.W  #$FF00,D1
00001052  4E4F                     148              TRAP    #15
00001054                           149              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           150              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       151              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           152              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           153              ;   TASK 32)
0000105C  103C 0020                154              MOVE.B  #32,D0
00001060  123C 0006                155              MOVE.B  #6,D1
00001064                           156              ;MOVE.B  #%10000001,D2
00001064  143C 0081                157              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     158              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     159              TRAP    #15
0000106C                           160              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 000015B6            161              CLR.B   SCRINTCT
00001072  4239 000015B7            162              CLR.B   SCRCYCCT
00001078                           163              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                164              ANDI.W  #$F8FF,SR
0000107C  4E75                     165              RTS
0000107E                           166  
0000107E                           167  ; -----------------------------------------------------------------------------
0000107E                           168  SCRISR
0000107E                           169  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           170  ; INPUT    - NONE
0000107E                           171  ; OUTPUT   - NONE
0000107E                           172  ; MODIFIES - NONE
0000107E                           173  ; -----------------------------------------------------------------------------
0000107E  5239 000015B6            174              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 000015B7            175              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     176              RTE
0000108C                           177  
0000108C                           178  ; -----------------------------------------------------------------------------
0000108C                           179  SCRUPD
0000108C                           180  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           181  ; BUFFER FOR THE NEXT ONE.
0000108C                           182  ; INPUT    - NONE
0000108C                           183  ; OUTPUT   - NONE
0000108C                           184  ; MODIFIES - NONE
0000108C                           185  ; -----------------------------------------------------------------------------
0000108C                           186              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                187              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                188              MOVE.B  #94,D0
00001094  4E4F                     189              TRAP    #15
00001096  103C 000B                190              MOVE.B  #11,D0
0000109A  323C FF00                191              MOVE.W  #$FF00,D1
0000109E  4E4F                     192              TRAP    #15
000010A0  4CDF 0003                193              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     194              RTE
000010A6                           195  
000010A6                           196  ; =============================================================================
000010A6                           197  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           198  ; =============================================================================
000010A6                           199  
000010A6                           200  ; -----------------------------------------------------------------------------
000010A6                           201  KBDINIT
000010A6                           202  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           203  ; INPUT    - NONE
000010A6                           204  ; OUTPUT   - NONE
000010A6                           205  ; MODIFIES - NONE
000010A6                           206  ; -----------------------------------------------------------------------------
000010A6  4239 000015B4            207              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 000015B5            208              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       209              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     210              RTS
000010BC                           211  
000010BC                           212  ; -----------------------------------------------------------------------------
000010BC                           213  KBDREAD
000010BC                           214  ; TRAP SERVICE ROUTINE.
000010BC                           215  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           216  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           217  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           218  ; INPUT    - NONE
000010BC                           219  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           220  ; MODIFIES - NONE
000010BC                           221  ; -----------------------------------------------------------------------------
000010BC                           222              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                223              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                224              MOVE.B  #19,D0
000010C4                           225              
000010C4  223C 50104D20            226              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     227              TRAP    #15
000010CC                           228          
000010CC  4202                     229              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                230              MOVE.W  #3,D4
000010D2                           231              
000010D2                           232  .LOOP1      
000010D2                           233       
000010D2  E189                     234              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     235              MOVE.W  SR,D3                   
000010D6  0243 0001                236              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     237              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     238              OR.B    D3,D2                   
000010DE  51CC FFF2                239              DBRA    D4,.LOOP1
000010E2                           240          
000010E2                           241              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           242              
000010E2  223C 28272625            243              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     244              TRAP    #15
000010EA                           245              
000010EA  383C 0003                246              MOVE.W  #3,D4
000010EE                           247  .LOOP2      
000010EE  E189                     248              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     249              MOVE.W  SR,D3
000010F2  0243 0001                250              ANDI.W  #$0001,D3    
000010F6  E30A                     251              LSL.B   #1,D2
000010F8  8403                     252              OR.B    D3,D2
000010FA                           253              
000010FA  51CC FFF2                254              DBRA    D4,.LOOP2
000010FE                           255              
000010FE                           256              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           257              
000010FE                           258              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 000015B4            259              MOVE.B  KBDVAL,D3
00001104  4603                     260              NOT.B   D3
00001106  13C2 000015B4            261              MOVE.B  D2,KBDVAL
0000110C  C602                     262              AND.B   D2,D3
0000110E  13C3 000015B5            263              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                264              MOVEM.L (A7)+,D0-D4
00001118  4E73                     265              RTE
0000111A                           266  
0000111A                           267  ; =============================================================================
0000111A                           268  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           269  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           270  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           271  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           272  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           273  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           274  ; =============================================================================
0000111A                           275  
0000111A                           276  ; -----------------------------------------------------------------------------
0000111A                           277  DMMINIT
0000111A                           278  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           279  ; INPUT    - NONE
0000111A                           280  ; OUTPUT   - NONE
0000111A                           281  ; MODIFIES - NONE
0000111A                           282  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                283              MOVEM.L D0/A0,-(A7)
0000111E  41F9 000015C0            284              LEA     DMMDATA,A0
00001124  303C 0031                285              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                286  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            287              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                288              DBRA.W  D0,.LOOP
00001136  4CDF 0101                289              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     290              RTS
0000113C                           291  
0000113C                           292  ; -----------------------------------------------------------------------------
0000113C                           293  DMMFIRST
0000113C                           294  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           295  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           296  ; INPUT    - NONE
0000113C                           297  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           298  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           299  ; -----------------------------------------------------------------------------
0000113C  41F9 000015C0            300              LEA     DMMDATA,A0
00001142  4A58                     301  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                302              BNE     DMMFRFND
00001148  D1FC 0000003E            303              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 0000223F            304  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     305              BLT     DMMFRLOP
00001156  207C 00000000            306              MOVE.L  #0,A0
0000115C  4E75                     307  DMMFRFND    RTS
0000115E                           308  
0000115E                           309  ; -----------------------------------------------------------------------------
0000115E                           310  DMMNEXT
0000115E                           311  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           312  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           313  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           314  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           315  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           316  ; -----------------------------------------------------------------------------
0000115E  2F00                     317              MOVE.L  D0,-(A7)
00001160  2008                     318              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            319              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            320              ADD.L   #DMMBSIZE,D0
0000116E  2040                     321              MOVE.L  D0,A0
00001170  201F                     322              MOVE.L  (A7)+,D0
00001172  60DA                     323              BRA     DMMFRCOM
00001174                           324  
00001174                           325  ; -----------------------------------------------------------------------------
00001174                           326  DMMFRSTO
00001174                           327  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           328  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           329  ; INPUT    - D0.W : ID TO SEARCH
00001174                           330  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           331  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           332  ; -----------------------------------------------------------------------------
00001174  41F9 000015C0            333              LEA     DMMDATA,A0
0000117A  B058                     334  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                335              BEQ     DMMFFND
00001180  D1FC 0000003E            336              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 0000223F            337  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     338              BLT     DMMFLOOP
0000118E  207C 00000000            339              MOVE.L  #0,A0
00001194  4E75                     340  DMMFFND     RTS
00001196                           341  
00001196                           342  ; -----------------------------------------------------------------------------
00001196                           343  DMMNEXTO
00001196                           344  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           345  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           346  ; INPUT    - D0.W : ID TO SEARCH
00001196                           347  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           348  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           349  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           350  ; -----------------------------------------------------------------------------
00001196  2F00                     351              MOVE.L  D0,-(A7)
00001198  2008                     352              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            353              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            354              ADD.L   #DMMBSIZE,D0
000011A6  2040                     355              MOVE.L  D0,A0
000011A8  201F                     356              MOVE.L  (A7)+,D0
000011AA  60DA                     357              BRA     DMMFCOM
000011AC                           358  
000011AC                           359  ; -----------------------------------------------------------------------------
000011AC                           360  DMMALLOC
000011AC                           361  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           362  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           363  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           364  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           365  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           366  ; -----------------------------------------------------------------------------
000011AC  3F00                     367              MOVE.W  D0,-(A7)
000011AE  4240                     368              CLR.W   D0
000011B0  4EB8 1174                369              JSR     DMMFRSTO
000011B4  301F                     370              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            371              CMP.L   #0,A0
000011BC  6700 0006                372              BEQ     .END
000011C0  3140 FFFE                373              MOVE.W  D0,-2(A0)
000011C4  4E75                     374  .END        RTS
000011C6                           375  
000011C6                           376  ; -----------------------------------------------------------------------------
000011C6                           377  DMMFREE
000011C6                           378  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           379  ; SYSTEM (0)
000011C6                           380  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           381  ; OUTPUT   - NONE
000011C6                           382  ; MODIFIES - NONE
000011C6                           383  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                384              MOVEM.L D0/A0,-(A7)
000011CA  2008                     385              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            386              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     387              MOVE.L  D0,A0
000011D4  4250                     388              CLR.W   (A0)
000011D6  4CDF 0101                389              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     390              RTS
000011DC                           391  
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  -------------------- end include --------------------
000011DC                           407              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           408  ; =============================================================================
000011DC                           409  ; CONSTANTS
000011DC                           410  ; =============================================================================
000011DC                           411  
000011DC                           412  ; --- PLAYER RELATED CONSTANTS ------------------------------------------------
000011DC                           413  
000011DC                           414  
000011DC                           415  
000011DC                           416  
000011DC                           417  
000011DC                           418  ;PLRINIEN    EQU     500                     ; PLAYER INITIAL ENERGY (<SCRWIDTH)
000011DC                           419  ;PLRSPEED    EQU     7                       ; PLAYER SPEED (PIXELS PER INT)
000011DC                           420  
000011DC                           421  ;PLRDMGCL    EQU     $00FFFFFF               ; PLAYER DAMAGED COLOR
000011DC                           422  ;PLRTXTCL    EQU     $00FFFFFF               ; FONT COLOR
000011DC                           423  ;PLRTXTX     EQU     65                       ; SCORE X COORDINATE
000011DC                           424  ;PLRTXTY     EQU     10                       ; SCORE Y COORDINATE
000011DC                           425  ;PLRLIFEH    EQU     20                      ; HEIGHT OF LIFE BAR
000011DC                           426  ;PLRLIFEY    EQU     SCRHEIGH-PLRLIFEH*2     ; LIFE BAR Y POS
000011DC                           427  ;PLRLIFEC    EQU     $000000FF               ; LIFE BAR COLOR
000011DC                           428  ;PLRUMDMG    EQU     %00000001               ; UPDATE DAMAGE MASK
000011DC                           429  ;PLRPMDMG    EQU     %00000010               ; PLOT DAMAGE MASK
000011DC                           430  ;PLRUBDMG    EQU     0                       ; UPDATE DAMAGE BIT
000011DC                           431  ;PLRPBDMG    EQU     1                       ; PLOT DAMAGE BIT
000011DC                           432  
000011DC                           433  
000011DC                           434  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           435  
000011DC  =00000008                436  INTTITX     EQU     8                      ; TITLE X COORDINATE
000011DC  =00000007                437  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                438  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000017                439  INTPRSX     EQU     23                      ; PRESS FIRE X COORDINATE
000011DC  =00000032                440  INTPRSY     EQU     50                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                441  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC                           442  
000011DC                           443  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                444  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                445  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                446  STASPACE    EQU     1                       ; ESPERA EL ESPACIO PARA DISPARAR LA BOLA 
000011DC  =00000002                447  STAPLAY     EQU     2                       ; NORMAL GAME STATE
000011DC  =00000003                448  STAGOVR     EQU     3                       ; GAME OVER STATE
000011DC                           449  ;----------------------------------------------------------------------------
000011DC                           450  
000011DC                           451  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           452  
000011DC                           453  
000011DC  =0000FFFF                454  GOCOLOR     EQU     $0000FFFF               ; TITLE COLOR
000011DC                           455  
000011DC                           456  
000011DC                           457  
000011DC                           458  
000011DC                           459  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =000001C0                460  SCRCTRL     EQU     SCRWIDTH/2+SCRWIDTH/5   ;
000011DC                           461  ;----------------------------------------------------------------------------
000011DC                           462  
000011DC                           463  
000011DC                           464  ; PLAYER --------------------------------------------------------------------
000011DC                           465  
000011DC  =00000040                466  PINWIDTH    EQU     64                      ; PLAYER INITIAL WIDTH (PIXELS)
000011DC  =0000000C                467  PHEIGHT     EQU     12                      ; PLAYER HEIGHT (PIXELS)
000011DC  =00ECD59D                468  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011DC  =00000003                469  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011DC  =0000000C                470  PMOVE       EQU     12                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011DC  =000001CA                471  PPOSY       EQU     SCRHEIGH-PHEIGHT-10      ;POSICION DE LA PLATAFORMA Y
000011DC  =000000C0                472  PINPOSX     EQU     SCRCTRL/2-PINWIDTH/2
000011DC                           473  ; ---------------------------------------------------------------------------
000011DC                           474  
000011DC                           475  ; BALL ----------------------------------------------------------------------
000011DC  =00000008                476  BHEIGHT     EQU     8                       ;ALTURA DE LA BOLA
000011DC  =00000008                477  BWIDTH      EQU     8                       ;ANCHURA DE LA BOLA
000011DC  =000000D8                478  BINPOSX     EQU     PINPOSX+PINWIDTH/2-BWIDTH                      ;POSICION DE LA PELOTA X INICIAL
000011DC  =000001C2                479  BINPOSY     EQU     PPOSY-BHEIGHT              ;POSICION DE LA PELOTA Y INICIAL
000011DC  =00000004                480  BINSPEED    EQU     4                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011DC  =00FFFFFF                481  BINCOLOR    EQU     $00FFFFFF
000011DC                           482  ; ---------------------------------------------------------------------------
000011DC                           483  
000011DC                           484  
000011DC                           485  ;ARROW-------------------------------------------------------------------------
000011DC                           486  
000011DC                           487  
000011DC                           488  
000011DC                           489  
000011DC                           490  
000011DC                           491  
000011DC                           492  
000011DC                           493  -------------------- end include --------------------
000011DC                           494              INCLUDE "PLAYER.X68"            ;EL JUGADOR
000011DC                           495  ; -----------------------------------------------------------------------------
000011DC                           496  ;           PLAYER
000011DC                           497  ; -----------------------------------------------------------------------------
000011DC                           498  PLRINIT
000011DC                           499  ; INITIALIZES THE PLAYER
000011DC                           500  ; INPUT    - NONE
000011DC                           501  ; OUTPUT   - NONE
000011DC                           502  ; MODIFIES - NONE
000011DC                           503  ; -----------------------------------------------------------------------------
000011DC                           504              
000011DC  33FC 00C0 00002244       505              MOVE.W  #PINPOSX,PPOSX
000011E4  33FC 0040 00002246       506              MOVE.W  #PINWIDTH,PWIDTH
000011EC  33FC 0003 00002248       507              MOVE.W  #PINLIVE,PLIVES
000011F4  4279 0000224A            508              CLR.W   PSCORE
000011FA                           509             
000011FA  4E75                     510              RTS
000011FC                           511  
000011FC                           512  
000011FC                           513  ; -----------------------------------------------------------------------------
000011FC                           514  
000011FC                           515  PLRUPD      
000011FC  48E7 6000                516              MOVEM.L D1-D2,-(A7)
00001200                           517              
00001200                           518              
00001200  1239 000015B4            519              MOVE.B  (KBDVAL),D1  
00001206  E219                     520              ROR.B   #1,D1                   ;IZQUIERDA
00001208  6400 0018                521              BCC     .RIGHTKEY                  ;CUANDO C = 0
0000120C                           522              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
0000120C  3439 00002244            523              MOVE.W  (PPOSX),D2
00001212  B47C 0000                524              CMP.W    #0,D2
00001216  6F00 000A                525              BLE     .RIGHTKEY
0000121A  0479 000C 00002244       526              SUB.W   #PMOVE,(PPOSX)
00001222                           527  .RIGHTKEY
00001222  E209                     528              LSR.B   #1,D1                   ;NO NOS IMPORTA EL DE ARRIBA
00001224  E219                     529              ROR.B   #1,D1                   ;
00001226  6400 0022                530              BCC     .END
0000122A                           531              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
0000122A  3439 00002244            532              MOVE.W  (PPOSX),D2
00001230  D479 00002246            533              ADD.W   (PWIDTH),D2 
00001236  0642 000C                534              ADD.W   #PMOVE,D2 
0000123A  B47C 01C0                535              CMP.W    #SCRCTRL,D2
0000123E  6C00 000A                536              BGE     .END
00001242  0679 000C 00002244       537              ADD.W   #PMOVE,(PPOSX)
0000124A                           538  .END
0000124A  4CDF 0006                539              MOVEM.L (A7)+,D1-D2
0000124E  4E75                     540              RTS
00001250                           541  
00001250                           542  
00001250                           543  PPLOT
00001250  48E7 FC00                544              MOVEM.L  D0-D5,-(A7)
00001254                           545              ;CONTOUR COLOR
00001254  223C 00ECD59D            546              MOVE.L  #PCOLOR,D1  
0000125A  103C 0050                547              MOVE.B  #80,D0
0000125E  4E4F                     548              TRAP    #15
00001260                           549      
00001260                           550      
00001260                           551               ;FILL COLOR
00001260  C2BC 00ECD59D            552              AND.L   #PCOLOR,D1  
00001266  103C 0051                553              MOVE.B  #81,D0
0000126A  4E4F                     554              TRAP    #15
0000126C                           555   
0000126C                           556  
0000126C                           557               ;SQUARE
0000126C  3A39 00002246            558              MOVE.W  (PWIDTH),D5                     
00001272                           559       
00001272  0645 000C                560              ADD.W   #PMOVE,D5
00001276                           561      
00001276  3639 00002244            562              MOVE.W  (PPOSX),D3
0000127C  383C 01D6                563              MOVE.W  #PPOSY+PHEIGHT,D4
00001280  D645                     564              ADD.W   D5,D3
00001282                           565      
00001282  3239 00002244            566              MOVE.W  (PPOSX),D1
00001288  343C 01CA                567              MOVE.W  #PPOSY,D2
0000128C                           568             
0000128C                           569              ;ADD.W   D5,D2
0000128C                           570      
0000128C  303C 0057                571              MOVE.W  #87,D0
00001290  4E4F                     572              TRAP    #15
00001292                           573      
00001292  4CDF 003F                574              MOVEM.L  (A7)+,D0-D5
00001296                           575  
00001296  4E75                     576              RTS
00001298                           577      
00001298                           578  
00001298                           579  
00001298                           580  
00001298                           581  
00001298                           582  
00001298                           583  
00001298                           584  
00001298                           585  
00001298                           586  -------------------- end include --------------------
00001298                           587              INCLUDE "STATES.X68"            ;
00001298                           588  ; =============================================================================
00001298                           589  ; GAME STATE MANAGEMENT
00001298                           590  ; =============================================================================
00001298                           591  
00001298                           592  ; -----------------------------------------------------------------------------
00001298                           593  STAINIT
00001298                           594  ; INITALIZES THE STATE MANAGER
00001298                           595  ; INPUT    - NONE
00001298                           596  ; OUTPUT   - NONE
00001298                           597  ; MODIFIES - NONE
00001298                           598  ; -----------------------------------------------------------------------------
00001298  33FC FFFF 00002240       599              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
000012A0                           600             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
000012A0  33FC 0000 00002242       601              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
000012A8  4E75                     602              RTS
000012AA                           603  
000012AA                           604  ; -----------------------------------------------------------------------------
000012AA                           605  STAUPD
000012AA                           606  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
000012AA                           607  ; INPUT    - NONE
000012AA                           608  ; OUTPUT   - NONE
000012AA                           609  ; MODIFIES - NONE
000012AA                           610  ; -----------------------------------------------------------------------------
000012AA  48E7 8080                611              MOVEM.L D0/A0,-(A7)
000012AE  4280                     612              CLR.L   D0
000012B0  3039 00002242            613              MOVE.W  (STANEXT),D0
000012B6  B079 00002240            614              CMP.W   (STACUR),D0
000012BC  6700 0012                615              BEQ     .DOUPD
000012C0  33C0 00002240            616              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
000012C6  E588                     617              LSL.L   #2,D0
000012C8  2040                     618              MOVE.L  D0,A0
000012CA  2068 12E8                619              MOVE.L  .INITBL(A0),A0
000012CE  4E90                     620              JSR     (A0)
000012D0  4280                     621  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
000012D2  3039 00002240            622              MOVE.W  (STACUR),D0
000012D8  E588                     623              LSL.L   #2,D0
000012DA  2040                     624              MOVE.L  D0,A0
000012DC  2068 12F4                625              MOVE.L  .UPDTBL(A0),A0
000012E0  4E90                     626              JSR     (A0)
000012E2  4CDF 0101                627              MOVEM.L (A7)+,D0/A0
000012E6  4E75                     628              RTS
000012E8= 0000111A 00001332 ...    629  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTY     ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
000012F4                           630                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
000012F4                           631                                               ;EL 2 ES NO HACER NADA 
000012F4= 00001372 0000133E ...    632  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAGOVRU
00001304                           633                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
00001304                           634                                              ;EL 2 HACE QUE SE UPDATE 
00001304                           635  
00001304                           636  ; -----------------------------------------------------------------------------
00001304                           637  STAPLOT
00001304                           638  ; PERFORMS STATE PLOT
00001304                           639  ; INPUT    - NONE
00001304                           640  ; OUTPUT   - NONE
00001304                           641  ; MODIFIES - NONE
00001304                           642  ; -----------------------------------------------------------------------------
00001304  48E7 8080                643              MOVEM.L D0/A0,-(A7)
00001308  4280                     644              CLR.L   D0
0000130A  3039 00002240            645              MOVE.W  (STACUR),D0
00001310  E588                     646              LSL.L   #2,D0
00001312  2040                     647              MOVE.L  D0,A0
00001314  2068 1320                648              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
00001318  4E90                     649              JSR     (A0)
0000131A  4CDF 0101                650              MOVEM.L (A7)+,D0/A0
0000131E  4E75                     651              RTS
00001320= 00001388 00001360 ...    652  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAGOVRP
00001330                           653                                               ; EL 0 ES DIBUJAR LA PANTALLA DE INICIO
00001330                           654  
00001330                           655  ; -----------------------------------------------------------------------------
00001330                           656  STAEMPTY
00001330                           657  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
00001330                           658  ; INPUT    - NONE
00001330                           659  ; OUTPUT   - NONE
00001330                           660  ; MODIFIES - NONE
00001330                           661  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
00001330                           662  ; -----------------------------------------------------------------------------
00001330  4E75                     663              RTS
00001332                           664  
00001332                           665  ; -----------------------------------------------------------------------------
00001332                           666  STAPLAYI    
00001332                           667  ; PLAY STATE INITIALIZATION.
00001332                           668  ; INPUT    - NONE
00001332                           669  ; OUTPUT   - NONE
00001332                           670  ; MODIFIES - NONE
00001332                           671  ; NOTE     - JUST A WRAPPER FOR PLRINIT
00001332                           672  ; -----------------------------------------------------------------------------
00001332  4EB8 11DC                673              JSR     PLRINIT
00001336  4EB9 00001476            674              JSR     BINIT
0000133C  4E75                     675              RTS
0000133E                           676              
0000133E                           677  ; -----------------------------------------------------------------------------
0000133E                           678  STASPACEU
0000133E                           679  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
0000133E                           680  ; INPUT    - NONE
0000133E                           681  ; OUTPUT   - NONE
0000133E                           682  ; MODIFIES - NONE
0000133E                           683  ; -----------------------------------------------------------------------------
0000133E                           684             
0000133E  0839 0004 000015B5       685              BTST.B  #KBDBITF1,(KBDEDGE)
00001346  6700 000A                686              BEQ     .END
0000134A  33FC 0002 00002242       687              MOVE.W  #STAPLAY,(STANEXT)
00001352                           688  .END        
00001352  4E75                     689              RTS
00001354                           690                               
00001354                           691  
00001354                           692  ; -----------------------------------------------------------------------------
00001354                           693  STAPLAYU
00001354                           694  ; PLAY STATE UPDATE
00001354                           695  ; INPUT    - NONE
00001354                           696  ; OUTPUT   - NONE
00001354                           697  ; MODIFIES - NONE
00001354                           698  ; -----------------------------------------------------------------------------
00001354  4EB8 11FC                699              JSR     PLRUPD
00001358  4EB9 0000149C            700              JSR     BUPD                    
0000135E  4E75                     701              RTS
00001360                           702  ; -----------------------------------------------------------------------------
00001360                           703  STAPLAYP
00001360                           704  ; PLAY STATE PLOT
00001360                           705  ; INPUT    - NONE
00001360                           706  ; OUTPUT   - NONE
00001360                           707  ; MODIFIES - NONE
00001360                           708  ; -----------------------------------------------------------------------------
00001360  4EB8 1250                709              JSR     PPLOT
00001364  4EB9 00001514            710              JSR     BPLOT
0000136A  4EB9 00001554            711              JSR     SCTRLINIT
00001370  4E75                     712              RTS
00001372                           713  
00001372                           714  ; -----------------------------------------------------------------------------
00001372  =0000111A                715  STAINTRI    EQU     DMMINIT                 ;VACIA LA MEMORIA DEL JUEGO
00001372                           716  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
00001372                           717  
00001372                           718  ; INTRO STATE INIT
00001372                           719  ; INPUT    - NONE
00001372                           720  ; OUTPUT   - NONE
00001372                           721  ; MODIFIES - NONE
00001372                           722  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
00001372                           723  ; -----------------------------------------------------------------------------
00001372                           724  
00001372                           725  ; -----------------------------------------------------------------------------
00001372                           726  STAINTRU
00001372                           727  ; INTRO STATE UPDATE
00001372                           728  ; INPUT    - NONE
00001372                           729  ; OUTPUT   - NONE
00001372                           730  ; MODIFIES - NONE
00001372                           731  ; -----------------------------------------------------------------------------
00001372  0839 0004 000015B5       732              BTST.B  #KBDBITF1,(KBDEDGE)
0000137A  6700 000A                733              BEQ     .END
0000137E  33FC 0001 00002242       734              MOVE.W  #STASPACE,(STANEXT)
00001386  4E75                     735  .END        RTS
00001388                           736  
00001388                           737  ; -----------------------------------------------------------------------------
00001388                           738  STAINTRP
00001388                           739  ; INTRO STATE PLOT
00001388                           740  ; INPUT    - NONE
00001388                           741  ; OUTPUT   - NONE
00001388                           742  ; MODIFIES - NONE
00001388                           743  ; -----------------------------------------------------------------------------
00001388  48E7 C040                744              MOVEM.L A1/D0-D1,-(A7)
0000138C  323C 0807                745              MOVE.W  #INTTITX<<8|INTTITY, D1 ;COORDENADAS DEL TEXTO TITULO
00001390  103C 000B                746              MOVE.B  #11,D0
00001394  4E4F                     747              TRAP    #15
00001396                           748              
00001396  223C 00DCAA7C            749              MOVE.L  #INTTITC,D1
0000139C  243C 00120001            750              MOVE.L  #18<<16|1,D2
000013A2  103C 0015                751              MOVE.B  #21,D0
000013A6  4E4F                     752              TRAP    #15
000013A8                           753  
000013A8  43F9 000013E2            754              LEA     .TITSTR,A1              ;PONE EL TEXTO
000013AE  103C 000E                755              MOVE.B  #14,D0
000013B2  4E4F                     756              TRAP    #15
000013B4                           757  
000013B4  323C 1732                758              MOVE.W  #INTPRSX<<8|INTPRSY, D1 ;COORDENADAS DEL TEXTO START
000013B8  103C 000B                759              MOVE.B  #11,D0
000013BC  4E4F                     760              TRAP    #15
000013BE                           761              
000013BE  223C 00FFFFFF            762              MOVE.L  #INTPRSC,D1
000013C4  243C 000A0001            763              MOVE.L  #10<<16|1,D2
000013CA  103C 0015                764              MOVE.B  #21,D0
000013CE  4E4F                     765              TRAP    #15
000013D0                           766              
000013D0  43F9 000013FA            767              LEA     .PRSSTR,A1
000013D6  103C 000E                768              MOVE.B  #14,D0
000013DA  4E4F                     769              TRAP    #15
000013DC  4CDF 0203                770              MOVEM.L (A7)+,A1/D0-D1
000013E0  4E75                     771              RTS
000013E2                           772  
000013E2= 20 20 20 20 20 42 ...    773  .TITSTR     DC.B    '     Breaking Blocks   ',0
000013FA= 20 50 55 53 48 20 ...    774  .PRSSTR     DC.B    ' PUSH FIRE TO START ',0
00001410                           775              DS.W    0
00001410                           776  
00001410                           777  ; -----------------------------------------------------------------------------
00001410                           778  STAGOVRU
00001410                           779  ; GAME OVER STATE UPDATE
00001410                           780  ; INPUT    - NONE
00001410                           781  ; OUTPUT   - NONE
00001410                           782  ; MODIFIES - NONE
00001410                           783  ; -----------------------------------------------------------------------------
00001410  0839 0004 000015B5       784              BTST.B  #KBDBITF1,(KBDEDGE)
00001418  6700 000A                785              BEQ     .END
0000141C  33FC 0000 00002242       786              MOVE.W  #STAINTR,(STANEXT)
00001424  4E75                     787  .END        RTS
00001426                           788  
00001426                           789  ; -----------------------------------------------------------------------------
00001426                           790  STAGOVRP
00001426                           791  ; GAME OVER STATE PLOT
00001426                           792  ; INPUT    - NONE
00001426                           793  ; OUTPUT   - NONE
00001426                           794  ; MODIFIES - NONE
00001426                           795  ; -----------------------------------------------------------------------------
00001426                           796  
00001426  48E7 C040                797              MOVEM.L A1/D0-D1,-(A7)
0000142A  323C 0807                798              MOVE.W  #INTTITX<<8|INTTITY, D1 ;COORDENADAS DEL TEXTO TITULO
0000142E  103C 000B                799              MOVE.B  #11,D0
00001432  4E4F                     800              TRAP    #15
00001434                           801              
00001434  223C 0000FFFF            802              MOVE.L  #GOCOLOR,D1
0000143A  243C 00120001            803              MOVE.L  #18<<16|1,D2
00001440  103C 0015                804              MOVE.B  #21,D0
00001444  4E4F                     805              TRAP    #15
00001446                           806              
00001446  7200                     807              MOVE.L  #$00000000,D1
00001448  103C 0051                808              MOVE.B  #81,D0
0000144C  4E4F                     809              TRAP    #15
0000144E                           810  
0000144E  43F9 00001460            811              LEA     .GOVSTR,A1              ;PONE EL TEXTO
00001454  103C 000E                812              MOVE.B  #14,D0
00001458  4E4F                     813              TRAP    #15
0000145A                           814              
0000145A  4CDF 0203                815              MOVEM.L (A7)+,A1/D0-D1
0000145E  4E75                     816              RTS
00001460                           817  
00001460= 20 20 20 20 20 20 ...    818  .GOVSTR     DC.B    '      GAME  OVER    ',0
00001476                           819              DS.W    0
00001476                           820  
00001476                           821  
00001476                           822  
00001476                           823  
00001476                           824  
00001476                           825  
00001476                           826  -------------------- end include --------------------
00001476                           827              INCLUDE "BALL.X68"              ;LA PELOTA
00001476                           828  ; =============================================================================
00001476                           829  ; BALL
00001476                           830  ; =============================================================================
00001476                           831  
00001476                           832  BINIT
00001476  33FC 00D8 0000224E       833              MOVE.W  #BINPOSX,BPOSX
0000147E  33FC 01C2 00002250       834              MOVE.W  #BINPOSY,BPOSY  
00001486  33FC 0004 00002252       835              MOVE.W  #BINSPEED,BSPEEDX
0000148E  303C 0004                836              MOVE.W  #BINSPEED,D0
00001492  4440                     837              NEG.W   D0
00001494  33C0 00002254            838              MOVE.W  D0,BSPEEDY
0000149A  4E75                     839              RTS
0000149C                           840              
0000149C                           841  BUPD        
0000149C  48E7 E000                842              MOVEM.L D0-D2,-(A7)
000014A0                           843              
000014A0                           844              
000014A0  3239 00002250            845  .UP         MOVE.W  BPOSY,D1
000014A6  B27C 0000                846              CMP.W   #0,D1
000014AA  6E00 0008                847              BGT     .LEFT
000014AE  4479 00002254            848              NEG.W   BSPEEDY
000014B4                           849              
000014B4  3239 0000224E            850  .LEFT       MOVE.W  BPOSX,D1                ;CHOQUE IZQUIERDA
000014BA  B27C 0000                851              CMP.W    #0,D1                 
000014BE  6E00 0008                852              BGT     .RIGHT     
000014C2  4479 00002252            853              NEG.W   BSPEEDX
000014C8                           854  
000014C8                           855  .RIGHT     
000014C8  3239 0000224E            856              MOVE.W  BPOSX,D1
000014CE  343C 01C0                857              MOVE.W  #SCRCTRL,D2
000014D2  5041                     858              ADD.W   #BWIDTH,D1
000014D4  B242                     859              CMP.W    D2,D1
000014D6  6D00 0008                860              BLT     .DOWN
000014DA  4479 00002252            861              NEG.W   BSPEEDX
000014E0                           862              
000014E0                           863  .DOWN       
000014E0  3239 00002250            864              MOVE.W  BPOSY,D1
000014E6  B27C 01E0                865              CMP.W   #SCRHEIGH,D1
000014EA  6D00 000A                866              BLT     .END
000014EE  33FC 0003 00002242       867              MOVE.W   #STAGOVR,(STANEXT)
000014F6                           868  .END            
000014F6                           869  
000014F6  3039 00002252            870              MOVE.W  BSPEEDX,D0
000014FC  D179 0000224E            871              ADD.W   D0,BPOSX
00001502                           872              
00001502  3239 00002254            873              MOVE.W  BSPEEDY,D1
00001508  D379 00002250            874              ADD.W   D1,BPOSY
0000150E                           875  
0000150E  4CDF 0007                876              MOVEM.L (A7)+,D0-D2
00001512                           877              
00001512  4E75                     878              RTS
00001514                           879              
00001514                           880  BPLOT       
00001514  48E7 FC00                881              MOVEM.L  D0-D5,-(A7)
00001518                           882              ;CONTOUR COLOR
00001518  223C 00FFFFFF            883              MOVE.L  #BINCOLOR,D1  
0000151E  103C 0050                884              MOVE.B  #80,D0
00001522  4E4F                     885              TRAP    #15
00001524                           886      
00001524                           887               ;FILL COLOR
00001524  223C 00FFFFFF            888              MOVE.L   #BINCOLOR,D1  
0000152A  103C 0051                889              MOVE.B  #81,D0
0000152E  4E4F                     890              TRAP    #15
00001530                           891   
00001530                           892              ;CIRCLE
00001530                           893  
00001530  3A3C 0008                894              MOVE.W  #BWIDTH,D5 
00001534                           895      
00001534  3639 0000224E            896              MOVE.W  BPOSX,D3
0000153A  3839 00002250            897              MOVE.W  BPOSY,D4
00001540  3203                     898              MOVE.W  D3,D1
00001542  3404                     899              MOVE.W  D4,D2
00001544                           900              
00001544  D845                     901              ADD.W   D5,D4
00001546  D645                     902              ADD.W   D5,D3
00001548                           903      
00001548                           904  
00001548  103C 0058                905              MOVE.B  #88,D0
0000154C  4E4F                     906              TRAP    #15
0000154E                           907      
0000154E  4CDF 003F                908              MOVEM.L  (A7)+,D0-D5
00001552                           909  
00001552  4E75                     910              RTS
00001554                           911  
00001554                           912  
00001554                           913  
00001554                           914  
00001554                           915  
00001554                           916  
00001554                           917  
00001554                           918  -------------------- end include --------------------
00001554                           919              INCLUDE "SCTRL.X68"             ;CONTROL SCREEN
00001554                           920  ;--------------------------------------------------------------------------
00001554                           921  ;SCREEN CONTROL
00001554                           922  ;--------------------------------------------------------------------------
00001554                           923  SCTRLINIT
00001554  48E7 F800                924              MOVEM.L D0-D4,-(A7)       
00001558  223C 00FFFFFF            925              MOVE.L  #$00FFFFFF,D1  ;COLOR
0000155E  103C 0050                926              MOVE.B  #80,D0
00001562  4E4F                     927              TRAP    #15
00001564                           928              
00001564  C2BC 00FFFFFF            929              AND.L   #$00FFFFFF,D1  ;COLOR
0000156A  103C 0051                930              MOVE.B  #81,D0
0000156E  4E4F                     931              TRAP    #15
00001570                           932              
00001570  103C 0057                933              MOVE.B  #87,D0
00001574  323C 01C0                934              MOVE.W  #SCRCTRL,D1
00001578  363C 01CA                935              MOVE.W  #SCRCTRL+10,D3
0000157C  343C 0000                936              MOVE.W  #0,D2
00001580  383C 01E0                937              MOVE.W  #SCRHEIGH,D4
00001584  4E4F                     938              TRAP    #15
00001586                           939              
00001586  4CDF 001F                940              MOVEM.L  (A7)+,D0-D4
0000158A                           941  
0000158A  4E75                     942              RTS
0000158A  4E75                     943  -------------------- end include --------------------
0000158C                           944  
0000158C                           945  ; --- INITIALIZE --------------------------------------------------------------
0000158C                           946              
0000158C  4EB8 1000                947  START       JSR     SYSINIT
00001590                           948              ; TO DO: CALL GAME INITIALIZATION CODE HERE
00001590  4EB8 1298                949              JSR     STAINIT                 ;INICIA LAS PANTALLAS            
00001594                           950              
00001594                           951  ; --- UPDATE ------------------------------------------------------------------
00001594                           952  
00001594  4E40                     953  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
00001596                           954                                              ; UPDATE DEPENDING ON THE STATE
00001596                           955              ; TO DO: CALL GAME UPDATE CODE HERE
00001596  4EB8 12AA                956              JSR     STAUPD
0000159A                           957  
0000159A                           958  ; --- WAIT SYNCH --------------------------------------------------------------
0000159A                           959  
0000159A  4A39 000015B6            960  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
000015A0  67F8                     961              BEQ     .WINT
000015A2                           962              
000015A2  4239 000015B6            963              CLR.B   (SCRINTCT)
000015A8                           964  
000015A8                           965  ; --- PLOT --------------------------------------------------------------------
000015A8                           966              
000015A8                           967              ; TO DO: CALL GAME PLOT CODE HERE
000015A8  4EB8 1304                968              JSR     STAPLOT
000015AC                           969  
000015AC  4E41                     970              TRAP    #SCRTRAP                ; SHOW GRAPHICS
000015AE  60E4                     971              BRA     .LOOP
000015B0  FFFF FFFF                972              SIMHALT
000015B4                           973  
000015B4                           974  ; --- VARIABLES ---------------------------------------------------------------
000015B4                           975  
000015B4                           976              INCLUDE "SYSVAR.X68"
000015B4                           977  ; =============================================================================
000015B4                           978  ; SYSTEM VARS
000015B4                           979  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
000015B4                           980  ; THEY MUST NOT BE IN PROTECTED MEMORY.
000015B4                           981  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
000015B4                           982  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
000015B4                           983  ; THIS IS GOOD ENOUGH.
000015B4                           984  ; =============================================================================
000015B4                           985  
000015B4                           986  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
000015B4                           987  
000015B4                           988  KBDVAL      DS.B    1                       ; KEY PRESSED=1
000015B5                           989  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
000015B6                           990  
000015B6                           991              DS.W    0
000015B6                           992  
000015B6                           993  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
000015B6                           994  
000015B6                           995  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
000015B7                           996  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
000015B8                           997              DS.W    0
000015B8                           998  
000015B8                           999  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
000015B8                          1000  
000015C0                          1001              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
000015C0                          1002  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002240                          1003              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002240                          1004  
00002240                          1005  
00002240                          1006  
00002240                          1007  -------------------- end include --------------------
00002240                          1008              INCLUDE "VAR.X68"
00002240                          1009  ; =============================================================================
00002240                          1010  ; GAME VARS
00002240                          1011  ; =============================================================================
00002240                          1012  
00002240                          1013  ; TO DO: DECLARE GAME VARIABLES HERE.
00002240                          1014  
00002240                          1015  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
00002240                          1016  
00002240                          1017  STACUR      DS.W    1                       ; CURRENT GAME STATE
00002242                          1018  STANEXT     DS.W    1                       ; NEXT GAME STATE
00002244                          1019  ;----------------------------------------------------------------------------
00002244                          1020  
00002244                          1021  ; PLAYER --------------------------------------------------------------------
00002244                          1022  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
00002246                          1023  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
00002248                          1024  PLIVES      DS.W    1                       ;LIVES LEFT
0000224A                          1025  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
0000224C                          1026  PSPEED      DS.W    1
0000224E                          1027  ;----------------------------------------------------------------------------
0000224E                          1028  
0000224E                          1029  ; BALL ----------------------------------------------------------------------
0000224E                          1030  BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
00002250                          1031  BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
00002252                          1032  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
00002254                          1033  BSPEEDY     DS.W    1
00002256                          1034  BCOLOR      DS.W    1
00002258                          1035  
00002258                          1036  
00002258                          1037  
00002258                          1038  
00002258                          1039  -------------------- end include --------------------
00002258                          1040              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              2256
BHEIGHT             8
BINCOLOR            FFFFFF
BINIT               1476
BINPOSX             D8
BINPOSY             1C2
BINSPEED            4
BPLOT               1514
BPOSX               224E
BPOSY               2250
BSPEEDX             2252
BSPEEDY             2254
BUPD                149C
BUPD:DOWN           14E0
BUPD:END            14F6
BUPD:LEFT           14B4
BUPD:RIGHT          14C8
BUPD:UP             14A0
BWIDTH              8
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             15C0
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
GOCOLOR             FFFF
INTPRSC             FFFFFF
INTPRSX             17
INTPRSY             32
INTTITC             DCAA7C
INTTITX             8
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             15B5
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              15B4
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX             C0
PINWIDTH            40
PLIVES              2248
PLRINIT             11DC
PLRUPD              11FC
PLRUPD:END          124A
PLRUPD:RIGHTKEY     1222
PMOVE               C
PPLOT               1250
PPOSX               2244
PPOSY               1CA
PSCORE              224A
PSPEED              224C
PWIDTH              2246
SCRCTRL             1C0
SCRCYCCT            15B7
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            15B6
SCRIRQ              1
SCRISR              107E
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            280
SCTRLINIT           1554
STACUR              2240
STAEMPTY            1330
STAGOVR             3
STAGOVRP            1426
STAGOVRP:GOVSTR     1460
STAGOVRU            1410
STAGOVRU:END        1424
STAINIT             1298
STAINTR             0
STAINTRI            111A
STAINTRP            1388
STAINTRP:PRSSTR     13FA
STAINTRP:TITSTR     13E2
STAINTRU            1372
STAINTRU:END        1386
STANEXT             2242
STANONE             FFFFFFFF
STAPLAY             2
STAPLAYI            1332
STAPLAYP            1360
STAPLAYU            1354
STAPLOT             1304
STAPLOT:PLTTBL      1320
START               158C
START:LOOP          1594
START:WINT          159A
STASPACE            1
STASPACEU           133E
STASPACEU:END       1352
STAUPD              12AA
STAUPD:DOUPD        12D0
STAUPD:INITBL       12E8
STAUPD:UPDTBL       12F4
SYSINIT             1000
