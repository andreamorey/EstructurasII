00001B7C Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 22/12/2019 19:16:38

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION : 
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8              
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =000002E4                 81  SCRWIDTH    EQU     740                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  
00001000                            93  -------------------- end include --------------------
00001000                            94              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            95  ; =============================================================================
00001000                            96  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            97  ; =============================================================================
00001000                            98  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101  ; INITIALIZES THE SYSTEM
00001000                           102  ; INPUT    - NONE
00001000                           103  ; OUTPUT   - NONE
00001000                           104  ; MODIFIES - NONE
00001000                           105  ; -----------------------------------------------------------------------------
00001000  205F                     106              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            107              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            108              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            109              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                110              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     111              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     112              RTS
0000101C                           113  
0000101C                           114  ; =============================================================================
0000101C                           115  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           116  ; =============================================================================
0000101C                           117  
0000101C                           118  ; -----------------------------------------------------------------------------
0000101C                           119  SCRINIT
0000101C                           120  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           121  ; INPUT    - NONE
0000101C                           122  ; OUTPUT   - NONE
0000101C                           123  ; MODIFIES - D0,D1,D2,D3
0000101C                           124  ; -----------------------------------------------------------------------------
0000101C                           125              ; TO DO:
0000101C                           126              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                127              ORI.W   #$0700,SR
00001020                           128              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           129              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       130              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           131              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                132              MOVE.B  #33,D0
0000102C  223C 02E401E0            133              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     134              TRAP    #15
00001034                           135              ; - SET WINDOWED MODE
00001034  7201                     136              MOVE.L  #1,D1
00001036  4E4F                     137              TRAP    #15
00001038                           138              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                139              MOVE.B  #11,D0
0000103C  323C FF00                140              MOVE.W  #$FF00,D1
00001040  4E4F                     141              TRAP    #15
00001042                           142              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                143              MOVE.B  #92,D0
00001046  123C 0011                144              MOVE.B  #17,D1
0000104A  4E4F                     145              TRAP    #15
0000104C                           146              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     147              MOVE.L  #11,D0
0000104E  323C FF00                148              MOVE.W  #$FF00,D1
00001052  4E4F                     149              TRAP    #15
00001054                           150              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           151              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       152              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           153              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           154              ;   TASK 32)
0000105C  103C 0020                155              MOVE.B  #32,D0
00001060  123C 0006                156              MOVE.B  #6,D1
00001064                           157         
00001064  143C 0081                158              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     159              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     160              TRAP    #15
0000106C                           161              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 00001BA6            162              CLR.B   SCRINTCT
00001072  4239 00001BA7            163              CLR.B   SCRCYCCT
00001078                           164              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                165              ANDI.W  #$F8FF,SR
0000107C  4E75                     166              RTS
0000107E                           167  
0000107E                           168  ; -----------------------------------------------------------------------------
0000107E                           169  SCRISR
0000107E                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           171  ; INPUT    - NONE
0000107E                           172  ; OUTPUT   - NONE
0000107E                           173  ; MODIFIES - NONE
0000107E                           174  ; -----------------------------------------------------------------------------
0000107E  5239 00001BA6            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 00001BA7            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     177              RTE
0000108C                           178  
0000108C                           179  ; -----------------------------------------------------------------------------
0000108C                           180  SCRUPD
0000108C                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           182  ; BUFFER FOR THE NEXT ONE.
0000108C                           183  ; INPUT    - NONE
0000108C                           184  ; OUTPUT   - NONE
0000108C                           185  ; MODIFIES - NONE
0000108C                           186  ; -----------------------------------------------------------------------------
0000108C                           187              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                188              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                189              MOVE.B  #94,D0
00001094  4E4F                     190              TRAP    #15
00001096  103C 000B                191              MOVE.B  #11,D0
0000109A  323C FF00                192              MOVE.W  #$FF00,D1
0000109E  4E4F                     193              TRAP    #15
000010A0  4CDF 0003                194              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     195              RTE
000010A6                           196  
000010A6                           197  ; =============================================================================
000010A6                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           199  ; =============================================================================
000010A6                           200  
000010A6                           201  ; -----------------------------------------------------------------------------
000010A6                           202  KBDINIT
000010A6                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           204  ; INPUT    - NONE
000010A6                           205  ; OUTPUT   - NONE
000010A6                           206  ; MODIFIES - NONE
000010A6                           207  ; -----------------------------------------------------------------------------
000010A6  4239 00001BA4            208              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 00001BA5            209              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     211              RTS
000010BC                           212  
000010BC                           213  ; -----------------------------------------------------------------------------
000010BC                           214  KBDREAD
000010BC                           215  ; TRAP SERVICE ROUTINE.
000010BC                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           219  ; INPUT    - NONE
000010BC                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           221  ; MODIFIES - NONE
000010BC                           222  ; -----------------------------------------------------------------------------
000010BC                           223              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                224              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                225              MOVE.B  #19,D0
000010C4                           226              
000010C4  223C 50104D20            227              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     228              TRAP    #15
000010CC                           229          
000010CC  4202                     230              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                231              MOVE.W  #3,D4
000010D2                           232              
000010D2                           233  .LOOP1      
000010D2                           234       
000010D2  E189                     235              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     236              MOVE.W  SR,D3                   
000010D6  0243 0001                237              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     238              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     239              OR.B    D3,D2                   
000010DE  51CC FFF2                240              DBRA    D4,.LOOP1
000010E2                           241          
000010E2                           242              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           243              
000010E2  223C 28272625            244              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     245              TRAP    #15
000010EA                           246              
000010EA  383C 0003                247              MOVE.W  #3,D4
000010EE                           248  .LOOP2      
000010EE  E189                     249              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     250              MOVE.W  SR,D3
000010F2  0243 0001                251              ANDI.W  #$0001,D3    
000010F6  E30A                     252              LSL.B   #1,D2
000010F8  8403                     253              OR.B    D3,D2
000010FA                           254              
000010FA  51CC FFF2                255              DBRA    D4,.LOOP2
000010FE                           256              
000010FE                           257              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           258              
000010FE                           259              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 00001BA4            260              MOVE.B  KBDVAL,D3
00001104  4603                     261              NOT.B   D3
00001106  13C2 00001BA4            262              MOVE.B  D2,KBDVAL
0000110C  C602                     263              AND.B   D2,D3
0000110E  13C3 00001BA5            264              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                265              MOVEM.L (A7)+,D0-D4
00001118  4E73                     266              RTE
0000111A                           267  
0000111A                           268  ; =============================================================================
0000111A                           269  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           270  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           271  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           272  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           273  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           274  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           275  ; =============================================================================
0000111A                           276  
0000111A                           277  ; -----------------------------------------------------------------------------
0000111A                           278  DMMINIT
0000111A                           279  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           280  ; INPUT    - NONE
0000111A                           281  ; OUTPUT   - NONE
0000111A                           282  ; MODIFIES - NONE
0000111A                           283  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                284              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001BC0            285              LEA     DMMDATA,A0
00001124  303C 0031                286              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                287  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            288              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                289              DBRA.W  D0,.LOOP
00001136  4CDF 0101                290              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     291              RTS
0000113C                           292  
0000113C                           293  ; -----------------------------------------------------------------------------
0000113C                           294  DMMFIRST
0000113C                           295  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           296  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           297  ; INPUT    - NONE
0000113C                           298  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           299  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           300  ; -----------------------------------------------------------------------------
0000113C  41F9 00001BC0            301              LEA     DMMDATA,A0
00001142  4A58                     302  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                303              BNE     DMMFRFND
00001148  D1FC 0000003E            304              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 0000283F            305  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     306              BLT     DMMFRLOP
00001156  207C 00000000            307              MOVE.L  #0,A0
0000115C  4E75                     308  DMMFRFND    RTS
0000115E                           309  
0000115E                           310  ; -----------------------------------------------------------------------------
0000115E                           311  DMMNEXT
0000115E                           312  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           313  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           314  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           315  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           316  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           317  ; -----------------------------------------------------------------------------
0000115E  2F00                     318              MOVE.L  D0,-(A7)
00001160  2008                     319              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            320              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            321              ADD.L   #DMMBSIZE,D0
0000116E  2040                     322              MOVE.L  D0,A0
00001170  201F                     323              MOVE.L  (A7)+,D0
00001172  60DA                     324              BRA     DMMFRCOM
00001174                           325  
00001174                           326  ; -----------------------------------------------------------------------------
00001174                           327  DMMFRSTO
00001174                           328  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           329  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           330  ; INPUT    - D0.W : ID TO SEARCH
00001174                           331  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           332  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           333  ; -----------------------------------------------------------------------------
00001174  41F9 00001BC0            334              LEA     DMMDATA,A0
0000117A  B058                     335  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                336              BEQ     DMMFFND
00001180  D1FC 0000003E            337              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 0000283F            338  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     339              BLT     DMMFLOOP
0000118E  207C 00000000            340              MOVE.L  #0,A0
00001194  4E75                     341  DMMFFND     RTS
00001196                           342  
00001196                           343  ; -----------------------------------------------------------------------------
00001196                           344  DMMNEXTO
00001196                           345  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           346  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           347  ; INPUT    - D0.W : ID TO SEARCH
00001196                           348  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           351  ; -----------------------------------------------------------------------------
00001196  2F00                     352              MOVE.L  D0,-(A7)
00001198  2008                     353              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011A6  2040                     356              MOVE.L  D0,A0
000011A8  201F                     357              MOVE.L  (A7)+,D0
000011AA  60DA                     358              BRA     DMMFCOM
000011AC                           359  
000011AC                           360  ; -----------------------------------------------------------------------------
000011AC                           361  DMMALLOC
000011AC                           362  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           363  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           364  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           367  ; -----------------------------------------------------------------------------
000011AC  3F00                     368              MOVE.W  D0,-(A7)
000011AE  4240                     369              CLR.W   D0
000011B0  4EB8 1174                370              JSR     DMMFRSTO
000011B4  301F                     371              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            372              CMP.L   #0,A0
000011BC  6700 0006                373              BEQ     .END
000011C0  3140 FFFE                374              MOVE.W  D0,-2(A0)
000011C4  4E75                     375  .END        RTS
000011C6                           376  
000011C6                           377  ; -----------------------------------------------------------------------------
000011C6                           378  DMMFREE
000011C6                           379  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           380  ; SYSTEM (0)
000011C6                           381  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           382  ; OUTPUT   - NONE
000011C6                           383  ; MODIFIES - NONE
000011C6                           384  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                385              MOVEM.L D0/A0,-(A7)
000011CA  2008                     386              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            387              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     388              MOVE.L  D0,A0
000011D4  4250                     389              CLR.W   (A0)
000011D6  4CDF 0101                390              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     391              RTS
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  
000011DC                           407  
000011DC                           408  
000011DC                           409  
000011DC                           410  
000011DC                           411  
000011DC                           412  
000011DC                           413  -------------------- end include --------------------
000011DC                           414              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           415  ; =============================================================================
000011DC                           416  ; CONSTANTS
000011DC                           417  ; =============================================================================
000011DC                           418  
000011DC                           419  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           420  
000011DC  =0000000E                421  INTTITX     EQU     14                      ; TITLE X COORDINATE
000011DC  =00000007                422  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                423  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000020                424  INTPRSX     EQU     32                      ; PRESS FIRE X COORDINATE
000011DC  =00000052                425  INTPRSY     EQU     82                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                426  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC  =00000012                427  TXBSIZE     EQU     18                      ;BIG SIZE LETTERS
000011DC  =00000010                428  TXMSIZE     EQU     16                      ;MEDIUM SIZE LETTERS
000011DC  =0000000A                429  TXSSIZE     EQU     10                      ;SMALL SIZE LETTERS
000011DC                           430  
000011DC                           431  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                432  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                433  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                434  STASPACE    EQU     1                       ; ESPERA EL ESPACIO PARA DISPARAR LA BOLA 
000011DC  =00000002                435  STAPLAY    EQU     2                       ; NORMAL GAME STATE
000011DC                           436  ;STAPLAY2    EQU     3
000011DC                           437  ;STAPLAY3    EQU     4
000011DC  =00000003                438  STAGOVR     EQU     3                       ; GAME OVER STATE
000011DC                           439  ;----------------------------------------------------------------------------
000011DC                           440  
000011DC                           441  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           442  
000011DC  =00000012                443  GOVERX      EQU     18                      ; GAME OVER X COORDINATE
000011DC  =00000007                444  GOVERY      EQU     7                       ; GAME OVER Y COORDINATE
000011DC  =0000FFFF                445  GOVERC      EQU     $0000FFFF               ; GAME OVER COLOR
000011DC                           446  
000011DC                           447  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =00000201                448  SCRCTRL     EQU     513   
000011DC  =00000005                449  SCRLWIDTH   EQU     5
000011DC  =00000040                450  LIVEWIDTH   EQU     64
000011DC  =00000010                451  LIVEHEIGHT  EQU     16
000011DC  =000000FF                452  LIVECOLOR   EQU     $000000FF               ;ROJO
000011DC  =00000215                453  LIVEPOSX    EQU     SCRCTRL+20
000011DC  =0000001E                454  LIVEPOSY    EQU     30
000011DC                           455  
000011DC                           456  ;----------------------------------------------------------------------------
000011DC                           457  
000011DC                           458  
000011DC                           459  ; PLAYER --------------------------------------------------------------------
000011DC                           460  
000011DC  =00000040                461  PINWIDTH1    EQU     64                      ; PLAYER INITIAL WIDTH (PIXELS)
000011DC  =00000038                462  PINWIDTH2    EQU     56
000011DC  =00000030                463  PINWIDTH3    EQU     48
000011DC  =0000000C                464  PHEIGHT     EQU     12                      ; PLAYER HEIGHT (PIXELS)
000011DC  =00ECD59D                465  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011DC  =00000003                466  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011DC  =00000008                467  PMOVE       EQU     8                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011DC  =000001D0                468  PPOSY       EQU     SCRHEIGH-PHEIGHT-4      ;POSICION DE LA PLATAFORMA Y
000011DC  =000000E0                469  PINPOSX1     EQU     SCRCTRL/2-PINWIDTH1/2
000011DC  =000000E4                470  PINPOSX2     EQU     SCRCTRL/2-PINWIDTH2/2
000011DC  =000000E8                471  PINPOSX3     EQU     SCRCTRL/2-PINWIDTH3/2
000011DC  =00000032                472  PSCORETX     EQU    50                       ; SCORE X COORDINATE
000011DC  =00000004                473  PSCORETY     EQU    4                       ; SCORE Y COORDINATE
000011DC  =00FFFFFF                474  PSCORECOL   EQU     $00FFFFFF
000011DC                           475  ; ---------------------------------------------------------------------------
000011DC                           476  
000011DC                           477  ; BALL ----------------------------------------------------------------------
000011DC  =0000000A                478  BDIAMET     EQU     10                       ;ANCHURA DE LA BOLA
000011DC  =000000FB                479  BINPOSX     EQU     SCRCTRL/2-BDIAMET/2     ;POSICION DE LA PELOTA X INICIAL
000011DC  =000001CE                480  BINPOSY     EQU     PPOSY-2                 ;POSICION DE LA PELOTA Y INICIAL
000011DC  =FFFFFFFD                481  BINSPEED    EQU     -3                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011DC                           482  
000011DC  =00FFFFFF                483  BINCOLOR    EQU     $00FFFFFF
000011DC                           484  
000011DC                           485  ; ---------------------------------------------------------------------------
000011DC                           486  
000011DC                           487  
000011DC                           488  ;BLOCKS-------------------------------------------------------------------------
000011DC  =00000040                489  BLWIDTH     EQU     64
000011DC  =00000010                490  BLHEIGHT     EQU     16
000011DC= 00F7E78E 004E8CF3 ...    491  COLORS      DC.L    BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE
0000120C  =0000000C                492  BLROW       EQU     12
0000120C  =00000008                493  BLCOL       EQU     8
0000120C                           494  
0000120C                           495  
0000120C                           496  ;-------------------------------------------------------------------------------
0000120C                           497  
0000120C                           498  ;COLORS-------------------------------------------------------------
0000120C  =004E8CF3                499  ORANGE      EQU     $004E8CF3
0000120C  =00F7E78E                500  BLUE        EQU     $00F7E78E
0000120C  =00FFACAC                501  PURPLE      EQU     $00FFACAC
0000120C  =0038EEF8                502  YELLOW      EQU     $0038EEF8
0000120C  =0095FF8C                503  GREEN       EQU     $0095FF8C
0000120C                           504  ;-------------------------------------------------------------------
0000120C                           505  
0000120C                           506  
0000120C                           507  
0000120C                           508  
0000120C                           509  
0000120C                           510  
0000120C                           511  
0000120C                           512  
0000120C                           513  
0000120C                           514  
0000120C                           515  
0000120C                           516  
0000120C                           517  
0000120C                           518  
0000120C                           519  
0000120C                           520  
0000120C                           521  
0000120C                           522  
0000120C                           523  
0000120C                           524  
0000120C                           525  
0000120C                           526  
0000120C                           527  
0000120C                           528  
0000120C                           529  
0000120C                           530  
0000120C                           531  -------------------- end include --------------------
0000120C                           532              INCLUDE "UTIL.X68"
0000120C                           533  ; =============================================================================
0000120C                           534  ; UTILITY MACROS
0000120C                           535  ; =============================================================================
0000120C                           536  
0000120C                           537  UTLSPEN     MACRO
0000120C                           538  ; WRAPPER FOR SET PEN TRAP 15 TASK.
0000120C                           539  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
0000120C                           540  ; OUTPUT   - NONE
0000120C                           541  ; MODIFIES - D0,D1
0000120C                           542  ; -----------------------------------------------------------------------------
0000120C                           543              MOVE.B  #80,D0
0000120C                           544              MOVE.L  \1,D1
0000120C                           545              TRAP    #15
0000120C                           546              ENDM
0000120C                           547  
0000120C                           548  ; -----------------------------------------------------------------------------
0000120C                           549  UTLSIZC     MACRO
0000120C                           550  ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
0000120C                           551  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR \2 SIZE (8, 9, 10, 12, 14, 16, 18))
0000120C                           552  ; OUTPUT   - NONE
0000120C                           553  ; MODIFIES - D0,D1
0000120C                           554  ; -----------------------------------------------------------------------------
0000120C                           555              MOVE.L  \1,D1
0000120C                           556              MOVE.L  #\2<<16|1,D2
0000120C                           557              MOVE.B  #21,D0
0000120C                           558              TRAP    #15
0000120C                           559              ENDM
0000120C                           560  ; -----------------------------------------------------------------------------
0000120C                           561  UTLSFIL     MACRO
0000120C                           562  ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000120C                           563  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
0000120C                           564  ; OUTPUT   - NONE
0000120C                           565  ; MODIFIES - D0,D1
0000120C                           566  ; -----------------------------------------------------------------------------
0000120C                           567              MOVE.B  #81,D0
0000120C                           568              MOVE.L  \1,D1
0000120C                           569              TRAP    #15
0000120C                           570              ENDM
0000120C                           571              
0000120C                           572  ; -----------------------------------------------------------------------------
0000120C                           573  UTLLOCT     MACRO
0000120C                           574  ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
0000120C                           575  ; INPUT    - \1 X, \2 Y
0000120C                           576  ; OUTPUT   - NONE
0000120C                           577  ; MODIFIES - D0,D1
0000120C                           578  ; -----------------------------------------------------------------------------
0000120C                           579              MOVE.W  #\1<<8|\2, D1
0000120C                           580              MOVE.B  #11,D0
0000120C                           581              TRAP    #15
0000120C                           582              ENDM
0000120C                           583     
0000120C                           584  ; -----------------------------------------------------------------------------
0000120C                           585  UTLSNDS     MACRO
0000120C                           586  ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000120C                           587  ; INPUT    - \1 ADDRESS TO STRING WITH NAME OF THE FILE, \2 NUM SOUNDS, 
0000120C                           588  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000120C                           589  ; MODIFIES - D0,A1
0000120C                           590  ; -----------------------------------------------------------------------------
0000120C                           591              LEA     \1, A1             ;PLAY EXPLOSION SOUND
0000120C                           592              MOVE.W  \2,D1
0000120C                           593              MOVE.B  #71,D0
0000120C                           594              TRAP    #15
0000120C                           595              MOVE.B  #72,D0
0000120C                           596              TRAP    #15
0000120C                           597              
0000120C                           598              ENDM
0000120C                           599              
0000120C                           600  ; -----------------------------------------------------------------------------
0000120C                           601  UTLSNDST     MACRO
0000120C                           602  ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
0000120C                           603  ; INPUT    - NONE 
0000120C                           604  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000120C                           605  ; MODIFIES - D0,A1
0000120C                           606  ; -----------------------------------------------------------------------------
0000120C                           607              MOVE.L  #3,D2
0000120C                           608              MOVE.B  #76,D0
0000120C                           609              TRAP    #15
0000120C                           610              
0000120C                           611              ENDM
0000120C                           612              
0000120C                           613  ; =============================================================================
0000120C                           614  ; UTILITY SUBROUTINES
0000120C                           615  ; =============================================================================
0000120C                           616  ; -----------------------------------------------------------------------------
0000120C                           617  UTLCHCOLW
0000120C                           618  ; CHECKS COLLISION WITH WALL
0000120C                           619  ; INPUT    - D0.W BPOSX1
0000120C                           620  ;            D1.W BPOSY1
0000120C                           621  ;            D2.W BPOSX2
0000120C                           622  ;            D3.W BPOSY2
0000120C                           623  ; OUTPUT   - 
0000120C                           624  ; MODIFIES - 
0000120C                           625  ; -----------------------------------------------------------------------------
0000120C  48E7 F080                626              MOVEM.L D0-D3/A0,-(A7)
00001210  41F9 000012EE            627              LEA.L   .COLLISIONS,A0
00001216  B258                     628              CMP.W   (A0)+,D1      ;UP
00001218  6E00 001C                629              BGT     .LEFT
0000121C                           630  
0000121C  4479 00002852            631              NEG.W   BSPEEDY
00001222  4279 0000285A            632              CLR.W   BPOSY1
00001228  33FC 000A 0000285C       633              MOVE.W  #BDIAMET,BPOSY2
00001230  4EF9 000012E8            634              JMP     .END 
00001236                           635  .LEFT        
00001236  B058                     636              CMP.W   (A0)+,D0
00001238  6E00 001C                637              BGT     .RIGHT
0000123C  4479 00002850            638              NEG.W   BSPEEDX
00001242  4279 00002856            639              CLR.W   BPOSX1
00001248  33FC 000A 00002858       640              MOVE.W  #BDIAMET,BPOSX2
00001250  4EF9 000012E8            641              JMP     .END
00001256                           642  .RIGHT      
00001256                           643              
00001256  B458                     644              CMP.W   (A0)+,D2
00001258  6D00 001E                645              BLT     .DOWN
0000125C  4479 00002850            646              NEG.W   BSPEEDX
00001262  33FC 0201 00002858       647              MOVE.W  #SCRCTRL,BPOSX2
0000126A  33FC 01F7 00002856       648              MOVE.W  #SCRCTRL-BDIAMET,BPOSX1
00001272  4EF9 000012E8            649              JMP     .END
00001278                           650  .DOWN       
00001278  B658                     651              CMP.W   (A0)+,D3         
0000127A  6E00 0008                652              BGT     .MINLIVE                  
0000127E  4EF9 000012E8            653              JMP     .END  
00001284                           654  .MINLIVE       
00001284                           655m             UTLSNDS .SOUNDL,#1
00001284                           656m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001284                           657m ; INPUT    - .SOUNDL ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001284                           658m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001284                           659m ; MODIFIES - D0,A1
00001284                           660m ; -----------------------------------------------------------------------------
0000129A  33FC 01E0 0000285C       661              MOVE.W  #SCRHEIGH,BPOSY2
000012A2  33FC 01D6 0000285A       662              MOVE.W  #SCRHEIGH-BDIAMET,BPOSY1 
000012AA  5379 00002848            663              SUB.W   #1,PLIVES                
000012B0  6600 002E                664              BNE     .RESET               ;SALTA SI NO SE HAN AGOTADO LAS VIDAS              
000012B4                           665m             UTLSNDST
000012B4                           666m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
000012B4                           667m ; INPUT    - NONE 
000012B4                           668m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012B4                           669m ; MODIFIES - D0,A1
000012B4                           670m ; -----------------------------------------------------------------------------
000012BC                           671m             UTLSNDS .SOUNDG,#1
000012BC                           672m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000012BC                           673m ; INPUT    - .SOUNDG ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000012BC                           674m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012BC                           675m ; MODIFIES - D0,A1
000012BC                           676m ; -----------------------------------------------------------------------------
000012D2  33FC 0003 00002842       677              MOVE.W  #STAGOVR,(STANEXT)
000012DA  4EF9 000012E8            678              JMP     .END
000012E0                           679  .RESET     
000012E0                           680              
000012E0  33FC 0001 00002842       681              MOVE.W  #STASPACE,(STANEXT) 
000012E8                           682             
000012E8                           683  .END        
000012E8  4CDF 010F                684              MOVEM.L (A7)+,D0-D3/A0
000012EC  4E75                     685              RTS
000012EE= 0000 0000 0201 01E0      686  .COLLISIONS DC.W    0,0,SCRCTRL,SCRHEIGH
000012F6= 67616D65 206F7665 ...    687  .SOUNDG      DC.L    'game over.wav',0
0000130A= 6C6F7365 206C6966 ...    688  .SOUNDL     DC.L    'lose life.wav',0
0000131E                           689  ; -----------------------------------------------------------------------------
0000131E                           690  UTLCHCOLP
0000131E                           691  ; CHECKS COLLISION WITH PLATAFORM
0000131E                           692  ; INPUT    - D0.W BPOSX1
0000131E                           693  ;            D1.W BPOSY1
0000131E                           694  ;            D2.W PPOSX2
0000131E                           695  ;            D3.W PPOSY2
0000131E                           696  ; OUTPUT   
0000131E                           697  ;           
0000131E                           698  ; MODIFIES - D4,D5
0000131E                           699  ; -----------------------------------------------------------------------------
0000131E  48E7 0C00                700              MOVEM.L D4-D5,-(A7)
00001322  383C 01D0                701              MOVE.W  #PPOSY,D4
00001326  B644                     702              CMP.W   D4,D3
00001328  6D00 0086                703              BLT     .END                    ;SI ESTÁ MÁS A ARRIBA DE LA PLATAFORMA NO HAY COLISIÓN
0000132C  3839 00002844            704              MOVE.W  PPOSX,D4
00001332  B444                     705              CMP.W   D4,D2
00001334  6D00 007A                706              BLT     .END                    ;SI ESTÁ MÁS A LA IZQUIERDA DE LA PLATAFORMA NO HAY COLISIÓN
00001338  D879 00002846            707              ADD.W   PWIDTH,D4
0000133E  B044                     708              CMP.W    D4,D0
00001340  6E00 006E                709              BGT     .END                    ;SI ESTÁ MÁS A LA DERECHA NO HAY COLISIÓN
00001344                           710              ;AQUÍ HAY COLISIÓN, TENEMOS QUE DETECTAR CUAL
00001344  383C 01D0                711              MOVE.W  #PPOSY,D4
00001348  B244                     712              CMP.W   D4,D1
0000134A  6E00 005E                713              BGT     .LADOS
0000134E  4479 00002852            714              NEG.W   BSPEEDY                 ;COLISIÓN CON LA PARTE DE ARRIBA
00001354  33C4 0000285C            715              MOVE.W  D4,BPOSY2
0000135A  0444 000A                716              SUB.W   #BDIAMET,D4
0000135E  33C4 0000285A            717              MOVE.W  D4,BPOSY1       
00001364                           718  .PLRXMIDDLE 
00001364  3839 00002846            719              MOVE.W  PWIDTH,D4
0000136A  E24C                     720              LSR.W   #1,D4
0000136C  3A39 00002844            721              MOVE.W  PPOSX,D5 
00001372  DA44                     722              ADD.W   D4,D5                   ;D5 = CENTRO PLATAFORMA
00001374  BA42                     723              CMP.W   D2,D5                   ;CENTRO - POS PEL
00001376  6B00 001A                724              BMI     .PLRXRIGHT
0000137A  3839 00002850            725              MOVE.W  BSPEEDX,D4
00001380  6B00 002E                726              BMI     .END
00001384                           727                                           
00001384  4444                     728              NEG.W   D4
00001386  33C4 00002850            729              MOVE.W  D4,BSPEEDX
0000138C  4EF9 000013B0            730              JMP     .END
00001392                           731              
00001392                           732  .PLRXRIGHT             
00001392  3839 00002850            733              MOVE.W  BSPEEDX,D4
00001398  6A00 0016                734              BPL     .END              ;SI ES POSITIVO SOLO NEGAMOS Y
0000139C  4444                     735              NEG.W   D4
0000139E  33C4 00002850            736              MOVE.W  D4,BSPEEDX
000013A4  4EF9 000013B0            737              JMP     .END
000013AA                           738  
000013AA  4479 00002850            739  .LADOS      NEG.W   BSPEEDX                 ;COLISIÓN CON LOS LADOS
000013B0  4CDF 0030                740  .END        MOVEM.L (A7)+,D4-D5 
000013B4  4E75                     741              RTS
000013B6                           742  
000013B6                           743  
000013B6                           744  ; -----------------------------------------------------------------------------
000013B6                           745  UTLCOLBL   
000013B6                           746  ; CHECKS COLLISION WITH BLOCKS
000013B6                           747  ; INPUT    - POSITION BALL \1 X \2 Y TO CHECK COLLISION WITH BLOCK
000013B6                           748  ; OUTPUT   
000013B6                           749  ;           
000013B6                           750  ; MODIFIES - NONE
000013B6                           751  ; -----------------------------------------------------------------------------
000013B6  E849                     752              LSR.W   #4,D1           ;POSY/BLHEIGHT. D1 -> FILA
000013B8  343C 000B                753              MOVE.W  #BLROW-1,D2
000013BC  B441                     754              CMP.W   D1,D2           ;SI ESTÁ POR DEBAJO DE LA ÚLTIMA FILA SALTA DIRECTO A END
000013BE  6D00 00CA                755              BLT     .ENDNOCOLISION                    
000013C2  41F9 00002860            756              LEA.L   BLMATRIX,A0
000013C8  D1C1                     757              ADDA.L  D1,A0           ;CARGAMOS EN A0 LA DIRECCIÓN DEL BYTE DE LA FILA
000013CA                           758                                          
000013CA  EC48                     759              LSR.W   #6,D0           ;D0 -> COLUMNA 
000013CC  363C 0007                760              MOVE.W  #BLCOL-1,D3                           
000013D0  9640                     761              SUB.W   D0,D3           ;D3 -> COLUMNA (DESDE DRCHA) DONDE ESTÁ LA BOLA
000013D2  3E03                     762              MOVE.W  D3,D7
000013D4  6A00 0004                763              BPL     .TEST  
000013D8  4283                     764              CLR.L   D3              ;POR SI SALE NEGATIVO LA REAJUSTAMOS
000013DA                           765  .TEST
000013DA  0710                     766              BTST.B  D3,(A0)         ;MIRAMOS EL BIT DONDE ESTA 
000013DC  6700 00AC                767              BEQ     .ENDNOCOLISION  ; SALTA SI EN ESA POSICION YA HABIA UN 0
000013E0                           768  
000013E0                           769  .IZQ        
000013E0  EC4D                     770              LSR.W   #6,D5           ;D5 -> COLUMNA
000013E2  343C 0007                771              MOVE.W  #BLCOL-1,D2
000013E6  9445                     772              SUB.W   D5,D2           ;D2 -> COLUMNA (DESDE DERECHA) DONDE ESTA EL PUNTO CONTRARIO (SI 1 ENTONCES 2)
000013E8  B443                     773              CMP     D3,D2                  
000013EA  6F00 000E                774              BLE     .CHOQUEDOBLE
000013EE  4479 00002850            775              NEG.W   BSPEEDX
000013F4                           776              
000013F4  4EF9 00001452            777              JMP     .ENDCOLISION    ;  (|)______|  COLISION DELADO IZQUIERDO COLISIONANDO POR LA IZQ DEL NLOQUE 
000013FA                           778              
000013FA                           779  
000013FA                           780  
000013FA                           781  
000013FA                           782  .CHOQUEDOBLE                        ;SI ESTA EN MEDIO DEL BLOQUE  |___()___| COLISION EN MEDIO
000013FA                           783                                      ;COMPARAMOS SI LE HA DADO A DOS A LA VEZ |______(|)______|
000013FA  B443                     784              CMP     D3,D2
000013FC  6700 0036                785              BEQ     .ENMEDIO
00001400                           786              
00001400  5A40                     787              ADDI.W  #BDIAMET/2,D0
00001402  EC48                     788              LSR.W   #6,D0
00001404  3A3C 0007                789              MOVE.W  #BLCOL-1,D5     ;D1 -> COLUMNA DONDE SE ENCUENTRA EL PUNTO MEDIO DE LA BOLA                         
00001408                           790              
00001408  9A40                     791              SUB.W   D0,D5
0000140A  6A00 0004                792              BPL     .TEST2  
0000140E  4285                     793              CLR.L   D5              ;POR SI SALE NEGATIVO LA REAJUSTAMOS
00001410                           794  .TEST2
00001410                           795              
00001410  0B10                     796              BTST.B  D5,(A0)         ;MIRAMOS EL BIT DONDE ESTA 
00001412  6700 0020                797              BEQ     .ENMEDIO
00001416  BE45                     798              CMP     D5,D7
00001418  6700 000E                799              BEQ     .CHOQUEDOBLEIZQ
0000141C  4479 00002852            800              NEG.W   BSPEEDY
00001422  4EF9 00001452            801              JMP     .ENDCOLISION
00001428                           802  .CHOQUEDOBLEIZQ
00001428  4479 00002850            803              NEG.W   BSPEEDX
0000142E  4EF9 00001452            804              JMP     .ENDCOLISION
00001434                           805  
00001434                           806              
00001434                           807  .ENMEDIO            
00001434                           808              ;COMPARAMOS SI LA PARTE CONTRARIA ESTA DENTO DEL BLOQUE O FUERA
00001434  B443                     809              CMP     D3,D2
00001436  6D00 000E                810              BLT     .DERECHA
0000143A  4479 00002852            811              NEG.W   BSPEEDY
00001440  4EF9 00001452            812              JMP     .ENDCOLISION
00001446                           813  .DERECHA
00001446  4479 00002850            814              NEG.W   BSPEEDX
0000144C  4EF9 00001452            815              JMP     .ENDCOLISION
00001452                           816              
00001452                           817  
00001452                           818  .ENDCOLISION
00001452  383C 0001                819              MOVE.W  #1,D4
00001456  0790                     820              BCLR    D3,(A0)
00001458  5379 0000285E            821              SUB.W   #1,BLCOUNTER       
0000145E  0679 0064 0000284A       822              ADD.W   #100,PSCORE
00001466                           823m             UTLSNDST
00001466                           824m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001466                           825m ; INPUT    - NONE 
00001466                           826m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001466                           827m ; MODIFIES - D0,A1
00001466                           828m ; -----------------------------------------------------------------------------
0000146E                           829m             UTLSNDS  .SOUND,#1
0000146E                           830m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000146E                           831m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
0000146E                           832m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000146E                           833m ; MODIFIES - D0,A1
0000146E                           834m ; -----------------------------------------------------------------------------
00001484  5379 0000285E            835              SUB.W   #1,BLCOUNTER
0000148A                           836  .ENDNOCOLISION
0000148A  4E75                     837              RTS
0000148C= 626C6F63 6B732E77 ...    838  .SOUND      DC.L    'blocks.wav',0
0000149C                           839  ; -----------------------------------------------------------------------------
0000149C                           840  UTLCHCOL
0000149C                           841  ; CHECKS COLLISION
0000149C                           842  ; INPUT    - D0.W X0 COORDINATE ball
0000149C                           843  ;            D1.W Y0 COORDINATE ball
0000149C                           844  ;            D2.W X1 COORDINATE plataforma
0000149C                           845  ;            D3.W Y1 COORDINATE plataforma
0000149C                           846  ;            D4.W WIDTH 0      ball
0000149C                           847  ;            D5.W WIDTH 1      plataforma 
0000149C                           848  ;            D6.W HEIGHT 0     ball
0000149C                           849  ;            D7.W HEIGHT 1     plataforma
0000149C                           850  ; OUTPUT   - D0.B=FF - COLLISION, =0 - NO COLLISION
0000149C                           851  ; MODIFIES - NONE
0000149C                           852  ; -----------------------------------------------------------------------------
0000149C  48A7 0F00                853              MOVEM.W D4-D7,-(A7)
000014A0  D840                     854              ADD.W   D0,D4
000014A2  B842                     855              CMP.W   D2,D4
000014A4  6F00 0022                856              BLE     .NOCOL
000014A8  DA42                     857              ADD.W   D2,D5
000014AA  BA40                     858              CMP.W   D0,D5
000014AC  6F00 001A                859              BLE     .NOCOL
000014B0  DC41                     860              ADD.W   D1,D6
000014B2  BC43                     861              CMP.W   D3,D6
000014B4  6F00 0012                862              BLE     .NOCOL
000014B8  DE43                     863              ADD.W   D3,D7
000014BA  BE41                     864              CMP.W   D1,D7
000014BC  6F00 000A                865              BLE     .NOCOL
000014C0  103C 00FF                866              MOVE.B  #$FF,D0
000014C4  6000 0004                867              BRA     .END
000014C8  4200                     868  .NOCOL      CLR.B   D0
000014CA  4C9F 00F0                869  .END        MOVEM.W (A7)+,D4-D7
000014CE  4E75                     870              RTS
000014D0                           871  
000014D0                           872  
000014D0                           873  
000014D0                           874  UTLSCTRLP
000014D0  48E7 FC40                875              MOVEM.L D0-D5/A1,-(A7)    
000014D4                           876              ;DIBUJA LA BARRA DE SEPARACIÓN
000014D4  223C 00FFFFFF            877              MOVE.L  #$00FFFFFF,D1  ;COLOR
000014DA  103C 0050                878              MOVE.B  #80,D0
000014DE  4E4F                     879              TRAP    #15
000014E0                           880              
000014E0  C2BC 00FFFFFF            881              AND.L   #$00FFFFFF,D1  ;COLOR
000014E6  103C 0051                882              MOVE.B  #81,D0
000014EA  4E4F                     883              TRAP    #15
000014EC                           884              
000014EC  103C 0057                885              MOVE.B  #87,D0
000014F0  323C 0201                886              MOVE.W  #SCRCTRL,D1
000014F4  363C 0206                887              MOVE.W  #SCRCTRL+SCRLWIDTH,D3
000014F8  4282                     888              CLR.L   D2
000014FA  383C 01E0                889              MOVE.W  #SCRHEIGH,D4
000014FE  4E4F                     890              TRAP    #15
00001500                           891              
00001500                           892              ;SCORE
00001500                           893m             UTLLOCT PSCORETX,PSCORETY            
00001500                           894m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001500                           895m ; INPUT    - PSCORETX X, PSCORETY Y
00001500                           896m ; OUTPUT   - NONE
00001500                           897m ; MODIFIES - D0,D1
00001500                           898m ; -----------------------------------------------------------------------------
0000150A                           899m             UTLSIZC #PSCORECOL,TXMSIZE           ;PENCOLOR Y TAMAÑO
0000150A                           900m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
0000150A                           901m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR TXMSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
0000150A                           902m ; OUTPUT   - NONE
0000150A                           903m ; MODIFIES - D0,D1
0000150A                           904m ; -----------------------------------------------------------------------------
0000151C                           905m             UTLSFIL #$00000000
0000151C                           906m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000151C                           907m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
0000151C                           908m ; OUTPUT   - NONE
0000151C                           909m ; MODIFIES - D0,D1
0000151C                           910m ; -----------------------------------------------------------------------------
00001524  43F9 0000153C            911              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
0000152A  3239 0000284A            912              MOVE.W  PSCORE,D1
00001530  103C 0011                913              MOVE.B  #17,D0
00001534  4E4F                     914              TRAP    #15
00001536                           915              
00001536  4CDF 023F                916              MOVEM.L (A7)+,D0-D5/A1
0000153A  4E75                     917              RTS   
0000153C= 53 43 4F 52 45 3A ...    918  .TXTSCORE   DC.B    'SCORE: ',0
00001544                           919              DS.W    0
00001544                           920  
00001544                           921  
00001544                           922  
00001544                           923  
00001544                           924  
00001544                           925  
00001544                           926  
00001544                           927  
00001544                           928  
00001544                           929  
00001544                           930  -------------------- end include --------------------
00001544                           931              INCLUDE "PLAYER.X68"            ;EL JUGADOR
00001544                           932  ; -----------------------------------------------------------------------------
00001544                           933  ;           PLAYER
00001544                           934  ; -----------------------------------------------------------------------------
00001544                           935  PLRINIT
00001544                           936  ; INITIALIZES THE PLAYER
00001544                           937  ; INPUT    - NONE
00001544                           938  ; OUTPUT   - NONE
00001544                           939  ; MODIFIES - NONE
00001544                           940  ; -----------------------------------------------------------------------------
00001544                           941              
00001544  33FC 00E0 00002844       942              MOVE.W  #PINPOSX1,PPOSX
0000154C  33FC 0040 00002846       943              MOVE.W  #PINWIDTH1,PWIDTH
00001554                           944              
00001554                           945            
00001554  4E75                     946              RTS
00001556                           947              
00001556                           948  ; -----------------------------------------------------------------------------
00001556                           949  PLRREV
00001556                           950  ; PLAYER REVIVES, INITIALIZE POSITION
00001556                           951  ; INPUT    - NONE
00001556                           952  ; OUTPUT   - NONE
00001556                           953  ; MODIFIES - NONE
00001556                           954  ; -----------------------------------------------------------------------------
00001556                           955              ;DEBERIAMOS CALCULAR LA POSICION NUEVA A PARTIR DE LA WIDTH QUE NOS PASEN
00001556                           956              
00001556  33FC 00E0 00002844       957              MOVE.W  #PINPOSX1,PPOSX
0000155E  33FC 0040 00002846       958              MOVE.W  #PINWIDTH1,PWIDTH
00001566                           959            
00001566  4E75                     960              RTS
00001568                           961  
00001568                           962  ; -----------------------------------------------------------------------------
00001568                           963  
00001568                           964  PLRUPD      
00001568  48E7 6000                965              MOVEM.L D1-D2,-(A7)
0000156C  1239 00001BA4            966              MOVE.B  KBDVAL,D1  
00001572  E219                     967              ROR.B   #1,D1                   ;IZQUIERDA
00001574  6400 0016                968              BCC     .RIGHTKEY               ;CUANDO C = 0
00001578                           969              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
00001578  3439 00002844            970              MOVE.W  PPOSX,D2
0000157E  B47C 0000                971              CMP.W    #0,D2
00001582  6F00 0008                972              BLE     .RIGHTKEY
00001586  5179 00002844            973              SUB.W   #PMOVE,(PPOSX)
0000158C                           974  .RIGHTKEY
0000158C  E209                     975              LSR.B   #1,D1                   
0000158E  E219                     976              ROR.B   #1,D1                   
00001590  6400 001C                977              BCC     .END
00001594                           978              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
00001594  3439 00002844            979              MOVE.W  PPOSX,D2
0000159A  D479 00002846            980              ADD.W   PWIDTH,D2 
000015A0                           981  
000015A0  B47C 01FC                982              CMP.W    #SCRCTRL-SCRLWIDTH,D2
000015A4  6C00 0008                983              BGE     .END
000015A8  5079 00002844            984              ADD.W   #PMOVE,PPOSX
000015AE                           985  .END
000015AE  4CDF 0006                986              MOVEM.L (A7)+,D1-D2
000015B2  4E75                     987              RTS
000015B4                           988  
000015B4                           989  
000015B4                           990  PPLOT
000015B4  48E7 FC40                991              MOVEM.L  D0-D5/A1,-(A7)
000015B8                           992              ;PLOT THE PLATAFORM
000015B8                           993m             UTLSPEN #PCOLOR 
000015B8                           994m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000015B8                           995m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
000015B8                           996m ; OUTPUT   - NONE
000015B8                           997m ; MODIFIES - D0,D1
000015B8                           998m ; -----------------------------------------------------------------------------
000015C4                           999m             UTLSFIL #PCOLOR
000015C4                          1000m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000015C4                          1001m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
000015C4                          1002m ; OUTPUT   - NONE
000015C4                          1003m ; MODIFIES - D0,D1
000015C4                          1004m ; -----------------------------------------------------------------------------
000015D0  3239 00002844           1005              MOVE.W  PPOSX,D1
000015D6  343C 01D0               1006              MOVE.W  #PPOSY,D2                    
000015DA  3639 00002844           1007              MOVE.W  PPOSX,D3
000015E0  3839 00002846           1008              MOVE.W  PWIDTH,D4 
000015E6  D644                    1009              ADD.W   D4,D3
000015E8  383C 01DC               1010              MOVE.W  #PPOSY+PHEIGHT,D4
000015EC  303C 0057               1011              MOVE.W  #87,D0
000015F0  4E4F                    1012              TRAP    #15
000015F2                          1013              
000015F2                          1014              ;PLOT LIFE
000015F2  3A39 00002848           1015              MOVE.W  PLIVES,D5
000015F8  6700 0076               1016              BEQ     .END
000015FC                          1017m             UTLSPEN #$00FFFFFF  
000015FC                          1018m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000015FC                          1019m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
000015FC                          1020m ; OUTPUT   - NONE
000015FC                          1021m ; MODIFIES - D0,D1
000015FC                          1022m ; -----------------------------------------------------------------------------
00001608                          1023m             UTLSFIL #LIVECOLOR
00001608                          1024m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001608                          1025m ; INPUT    - #LIVECOLOR COLOR IN FORMAT $00BBGGRR
00001608                          1026m ; OUTPUT   - NONE
00001608                          1027m ; MODIFIES - D0,D1
00001608                          1028m ; -----------------------------------------------------------------------------
00001614  5345                    1029              SUB.W   #1,D5             
00001616  103C 0057               1030              MOVE.B  #87,D0
0000161A  323C 0215               1031              MOVE.W  #LIVEPOSX,D1
0000161E  3601                    1032              MOVE.W  D1,D3
00001620  0643 0040               1033              ADD.W   #LIVEWIDTH,D3
00001624  343C 001E               1034              MOVE.W  #LIVEPOSY,D2
00001628  3802                    1035              MOVE.W  D2,D4
0000162A  0644 0010               1036              ADD.W   #LIVEHEIGHT,D4
0000162E                          1037  .LOOP           
0000162E  4E4F                    1038              TRAP    #15
00001630  3203                    1039              MOVE.W  D3,D1
00001632  0643 0040               1040              ADD.W   #LIVEWIDTH,D3
00001636  51CD FFF6               1041              DBRA    D5,.LOOP
0000163A                          1042              
0000163A                          1043              ;PLOT SCORE
0000163A                          1044m             UTLLOCT PSCORETX,PSCORETY            
0000163A                          1045m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
0000163A                          1046m ; INPUT    - PSCORETX X, PSCORETY Y
0000163A                          1047m ; OUTPUT   - NONE
0000163A                          1048m ; MODIFIES - D0,D1
0000163A                          1049m ; -----------------------------------------------------------------------------
00001644                          1050m             UTLSIZC #PSCORECOL,TXMSIZE           ;PENCOLOR Y TAMAÑO
00001644                          1051m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001644                          1052m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR TXMSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001644                          1053m ; OUTPUT   - NONE
00001644                          1054m ; MODIFIES - D0,D1
00001644                          1055m ; -----------------------------------------------------------------------------
00001656                          1056m             UTLSFIL #$00000000
00001656                          1057m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001656                          1058m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001656                          1059m ; OUTPUT   - NONE
00001656                          1060m ; MODIFIES - D0,D1
00001656                          1061m ; -----------------------------------------------------------------------------
0000165E  43F9 00001676           1062              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
00001664  3239 0000284A           1063              MOVE.W  PSCORE,D1
0000166A  103C 0011               1064              MOVE.B  #17,D0
0000166E  4E4F                    1065              TRAP    #15
00001670                          1066              
00001670                          1067  .END            
00001670  4CDF 023F               1068              MOVEM.L (A7)+,D0-D5/A1
00001674  4E75                    1069              RTS
00001676                          1070              
00001676= 53 43 4F 52 45 3A ...   1071  .TXTSCORE   DC.B    'SCORE: ',0
0000167E                          1072              DS.W    0
0000167E                          1073  
0000167E                          1074  
0000167E                          1075  
0000167E                          1076  
0000167E                          1077  
0000167E                          1078  
0000167E                          1079  
0000167E                          1080  
0000167E                          1081  
0000167E                          1082  
0000167E                          1083  
0000167E                          1084  
0000167E                          1085  
0000167E                          1086  
0000167E                          1087  
0000167E                          1088  
0000167E                          1089  
0000167E                          1090  -------------------- end include --------------------
0000167E                          1091              INCLUDE "STATES.X68"            ;
0000167E                          1092  ; =============================================================================
0000167E                          1093  ; GAME STATE MANAGEMENT
0000167E                          1094  ; =============================================================================
0000167E                          1095  
0000167E                          1096  ; -----------------------------------------------------------------------------
0000167E                          1097  STAINIT
0000167E                          1098  ; INITALIZES THE STATE MANAGER
0000167E                          1099  ; INPUT    - NONE
0000167E                          1100  ; OUTPUT   - NONE
0000167E                          1101  ; MODIFIES - NONE
0000167E                          1102  ; -----------------------------------------------------------------------------
0000167E  33FC FFFF 00002840      1103              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
00001686                          1104             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
00001686  33FC 0000 00002842      1105              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
0000168E  4E75                    1106              RTS
00001690                          1107  
00001690                          1108  ; -----------------------------------------------------------------------------
00001690                          1109  STAUPD
00001690                          1110  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
00001690                          1111  ; INPUT    - NONE
00001690                          1112  ; OUTPUT   - NONE
00001690                          1113  ; MODIFIES - NONE
00001690                          1114  ; -----------------------------------------------------------------------------
00001690  48E7 8080               1115              MOVEM.L D0/A0,-(A7)
00001694  4280                    1116              CLR.L   D0
00001696  3039 00002842           1117              MOVE.W  (STANEXT),D0
0000169C  B079 00002840           1118              CMP.W   (STACUR),D0
000016A2  6700 0012               1119              BEQ     .DOUPD
000016A6  33C0 00002840           1120              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
000016AC  E588                    1121              LSL.L   #2,D0
000016AE  2040                    1122              MOVE.L  D0,A0
000016B0  2068 16CE               1123              MOVE.L  .INITBL(A0),A0
000016B4  4E90                    1124              JSR     (A0)
000016B6  4280                    1125  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
000016B8  3039 00002840           1126              MOVE.W  (STACUR),D0
000016BE  E588                    1127              LSL.L   #2,D0
000016C0  2040                    1128              MOVE.L  D0,A0
000016C2  2068 16DA               1129              MOVE.L  .UPDTBL(A0),A0
000016C6  4E90                    1130              JSR     (A0)
000016C8  4CDF 0101               1131              MOVEM.L (A7)+,D0/A0
000016CC  4E75                    1132              RTS
000016CE= 00001762 00001718 ...   1133  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTY ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
000016DA                          1134                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
000016DA                          1135                                               ;EL 2 ES NO HACER NADA 
000016DA= 00001792 00001724 ...   1136  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAGOVRU
000016EA                          1137                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
000016EA                          1138                                              ;EL 2 HACE QUE SE UPDATE 
000016EA                          1139  
000016EA                          1140  ; -----------------------------------------------------------------------------
000016EA                          1141  STAPLOT
000016EA                          1142  ; PERFORMS STATE PLOT
000016EA                          1143  ; INPUT    - NONE
000016EA                          1144  ; OUTPUT   - NONE
000016EA                          1145  ; MODIFIES - NONE
000016EA                          1146  ; -----------------------------------------------------------------------------
000016EA  48E7 8080               1147              MOVEM.L D0/A0,-(A7)
000016EE  4280                    1148              CLR.L   D0
000016F0  3039 00002840           1149              MOVE.W  (STACUR),D0
000016F6  E588                    1150              LSL.L   #2,D0
000016F8  2040                    1151              MOVE.L  D0,A0
000016FA  2068 1706               1152              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
000016FE  4E90                    1153              JSR     (A0)
00001700  4CDF 0101               1154              MOVEM.L (A7)+,D0/A0
00001704  4E75                    1155              RTS
00001706= 000017C4 0000174C ...   1156  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAGOVRP
00001716                          1157                             ;SPACE      NIVEL1   NIVEL2    NIVEL3   
00001716                          1158  
00001716                          1159  ; -----------------------------------------------------------------------------
00001716                          1160  STAEMPTY
00001716                          1161  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
00001716                          1162  ; INPUT    - NONE
00001716                          1163  ; OUTPUT   - NONE
00001716                          1164  ; MODIFIES - NONE
00001716                          1165  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
00001716                          1166  ; -----------------------------------------------------------------------------
00001716  4E75                    1167              RTS
00001718                          1168  
00001718                          1169  ; -----------------------------------------------------------------------------
00001718                          1170  STAPLAYI    ;DEL NIVEL1, COMIENZO
00001718                          1171  
00001718                          1172  ; PLAY STATE INITIALIZATION.
00001718                          1173  ; INPUT    - NONE
00001718                          1174  ; OUTPUT   - NONE
00001718                          1175  ; MODIFIES - NONE
00001718                          1176  ; NOTE     - JUST A WRAPPER FOR PLRINIT
00001718                          1177  ; -----------------------------------------------------------------------------
00001718  4EB8 1544               1178              JSR     PLRINIT
0000171C  4EB9 0000189C           1179              JSR     BINIT
00001722  4E75                    1180              RTS
00001724                          1181  ; -----------------------------------------------------------------------------
00001724                          1182  STASPACEU
00001724                          1183  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
00001724                          1184  ; INPUT    - NONE
00001724                          1185  ; OUTPUT   - NONE
00001724                          1186  ; MODIFIES - NONE
00001724                          1187  ; -----------------------------------------------------------------------------
00001724                          1188             
00001724  0839 0004 00001BA5      1189              BTST.B  #KBDBITF1,(KBDEDGE)
0000172C  6700 000A               1190              BEQ     .END
00001730  33FC 0002 00002842      1191              MOVE.W  #STAPLAY,(STANEXT)
00001738                          1192  .END        
00001738  4E75                    1193              RTS
0000173A                          1194                               
0000173A                          1195  
0000173A                          1196  ; -----------------------------------------------------------------------------
0000173A                          1197  STAPLAYU
0000173A                          1198  ; PLAY STATE UPDATE
0000173A                          1199  ; INPUT    - NONE
0000173A                          1200  ; OUTPUT   - NONE
0000173A                          1201  ; MODIFIES - NONE
0000173A                          1202  ; -----------------------------------------------------------------------------
0000173A                          1203              
0000173A  4EB8 1568               1204              JSR     PLRUPD
0000173E  4EB9 00001930           1205              JSR     BUPD    
00001744  4EB9 00001ACC           1206              JSR     BLUPD                
0000174A  4E75                    1207              RTS
0000174C                          1208  ; -----------------------------------------------------------------------------
0000174C                          1209  STAPLAYP
0000174C                          1210  ; PLAY STATE PLOT
0000174C                          1211  ; INPUT    - NONE
0000174C                          1212  ; OUTPUT   - NONE
0000174C                          1213  ; MODIFIES - NONE
0000174C                          1214  ; -----------------------------------------------------------------------------
0000174C  4EB9 00001B12           1215              JSR     BLPLOT
00001752  4EB8 15B4               1216              JSR     PPLOT
00001756  4EB9 000019FC           1217              JSR     BPLOT
0000175C  4EB8 14D0               1218              JSR     UTLSCTRLP
00001760  4E75                    1219              RTS
00001762                          1220  
00001762                          1221  ; -----------------------------------------------------------------------------
00001762                          1222  STAINTRI                  ;VACIA LA MEMORIA DEL JUEGO
00001762                          1223  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
00001762                          1224  
00001762                          1225  ; INTRO STATE INIT
00001762                          1226  ; INPUT    - NONE
00001762                          1227  ; OUTPUT   - NONE
00001762                          1228  ; MODIFIES - NONE
00001762                          1229  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
00001762                          1230  ; -----------------------------------------------------------------------------
00001762                          1231m             UTLSNDS .SOUND,#1
00001762                          1232m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001762                          1233m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001762                          1234m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001762                          1235m ; MODIFIES - D0,A1
00001762                          1236m ; -----------------------------------------------------------------------------
00001778  4EB8 111A               1237              JSR     DMMINIT
0000177C  4E75                    1238              RTS
0000177E= 73746172 74206C61 ...   1239  .SOUND      DC.L    'start largo.wav',0
00001792                          1240  ; -----------------------------------------------------------------------------
00001792                          1241  STAINTRU
00001792                          1242  ; INTRO STATE UPDATE
00001792                          1243  ; INPUT    - NONE
00001792                          1244  ; OUTPUT   - NONE
00001792                          1245  ; MODIFIES - NONE
00001792                          1246  ; -----------------------------------------------------------------------------
00001792                          1247              
00001792  0839 0004 00001BA5      1248              BTST.B  #KBDBITF1,(KBDEDGE)
0000179A  6700 0026               1249              BEQ     .END
0000179E                          1250m             UTLSNDST
0000179E                          1251m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
0000179E                          1252m ; INPUT    - NONE 
0000179E                          1253m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000179E                          1254m ; MODIFIES - D0,A1
0000179E                          1255m ; -----------------------------------------------------------------------------
000017A6  33FC 0001 00002842      1256              MOVE.W  #STASPACE,(STANEXT)
000017AE  4EB9 00001A3C           1257              JSR     BLINIT
000017B4  33FC 0003 00002848      1258              MOVE.W  #PINLIVE,PLIVES
000017BC  4279 0000284A           1259              CLR.W   PSCORE            
000017C2  4E75                    1260  .END        RTS
000017C4                          1261  
000017C4                          1262  ; -----------------------------------------------------------------------------
000017C4                          1263  STAINTRP
000017C4                          1264  ; INTRO STATE PLOT
000017C4                          1265  ; INPUT    - NONE
000017C4                          1266  ; OUTPUT   - NONE
000017C4                          1267  ; MODIFIES - NONE
000017C4                          1268  ; -----------------------------------------------------------------------------
000017C4  48E7 E040               1269              MOVEM.L A1/D0-D2,-(A7)
000017C8                          1270              ;TITULO
000017C8                          1271m             UTLLOCT INTTITX,INTTITY      
000017C8                          1272m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000017C8                          1273m ; INPUT    - INTTITX X, INTTITY Y
000017C8                          1274m ; OUTPUT   - NONE
000017C8                          1275m ; MODIFIES - D0,D1
000017C8                          1276m ; -----------------------------------------------------------------------------
000017D2                          1277m             UTLSIZC #INTTITC,TXBSIZE
000017D2                          1278m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
000017D2                          1279m ; INPUT    - #INTTITC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
000017D2                          1280m ; OUTPUT   - NONE
000017D2                          1281m ; MODIFIES - D0,D1
000017D2                          1282m ; -----------------------------------------------------------------------------
000017E4  43F9 0000181E           1283              LEA     .TITSTR,A1            
000017EA  103C 000E               1284              MOVE.B  #14,D0
000017EE  4E4F                    1285              TRAP    #15
000017F0                          1286              
000017F0                          1287              ;START
000017F0                          1288m             UTLLOCT INTPRSX,INTPRSY
000017F0                          1289m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000017F0                          1290m ; INPUT    - INTPRSX X, INTPRSY Y
000017F0                          1291m ; OUTPUT   - NONE
000017F0                          1292m ; MODIFIES - D0,D1
000017F0                          1293m ; -----------------------------------------------------------------------------
000017FA                          1294m             UTLSIZC #INTPRSC,TXSSIZE
000017FA                          1295m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
000017FA                          1296m ; INPUT    - #INTPRSC COLOR IN FORMAT $00BBGGRR TXSSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
000017FA                          1297m ; OUTPUT   - NONE
000017FA                          1298m ; MODIFIES - D0,D1
000017FA                          1299m ; -----------------------------------------------------------------------------
0000180C  43F9 0000182E           1300              LEA     .PRSSTR,A1
00001812  103C 000E               1301              MOVE.B  #14,D0
00001816  4E4F                    1302              TRAP    #15
00001818                          1303              
00001818  4CDF 0207               1304              MOVEM.L (A7)+,A1/D0-D2
0000181C  4E75                    1305              RTS
0000181E                          1306  
0000181E= 42 72 65 61 6B 69 ...   1307  .TITSTR     DC.B    'Breaking Blocks',0
0000182E= 50 55 53 48 20 46 ...   1308  .PRSSTR     DC.B    'PUSH FIRE TO START',0
00001842                          1309              DS.W    0
00001842                          1310  ; -----------------------------------------------------------------------------
00001842                          1311  STAGOVRU
00001842                          1312  ; GAME OVER STATE UPDATE
00001842                          1313  ; INPUT    - NONE
00001842                          1314  ; OUTPUT   - NONE
00001842                          1315  ; MODIFIES - NONE
00001842                          1316  ; -----------------------------------------------------------------------------
00001842  0839 0004 00001BA5      1317              BTST.B  #KBDBITF1,(KBDEDGE)
0000184A  6700 0012               1318              BEQ     .END
0000184E                          1319m             UTLSNDST
0000184E                          1320m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
0000184E                          1321m ; INPUT    - NONE 
0000184E                          1322m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000184E                          1323m ; MODIFIES - D0,A1
0000184E                          1324m ; -----------------------------------------------------------------------------
00001856  33FC 0000 00002842      1325              MOVE.W  #STAINTR,(STANEXT)
0000185E  4E75                    1326  .END        RTS
00001860                          1327  
00001860                          1328  ; -----------------------------------------------------------------------------
00001860                          1329  STAGOVRP
00001860                          1330  ; GAME OVER STATE PLOT
00001860                          1331  ; INPUT    - NONE
00001860                          1332  ; OUTPUT   - NONE
00001860                          1333  ; MODIFIES - NONE
00001860                          1334  ; -----------------------------------------------------------------------------
00001860                          1335  
00001860  48E7 E040               1336              MOVEM.L A1/D0-D2,-(A7)
00001864                          1337              
00001864                          1338              ;GAME OVER TEXT
00001864                          1339m             UTLLOCT GOVERX,GOVERY            
00001864                          1340m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001864                          1341m ; INPUT    - GOVERX X, GOVERY Y
00001864                          1342m ; OUTPUT   - NONE
00001864                          1343m ; MODIFIES - D0,D1
00001864                          1344m ; -----------------------------------------------------------------------------
0000186E                          1345m             UTLSIZC #GOVERC,TXBSIZE
0000186E                          1346m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
0000186E                          1347m ; INPUT    - #GOVERC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
0000186E                          1348m ; OUTPUT   - NONE
0000186E                          1349m ; MODIFIES - D0,D1
0000186E                          1350m ; -----------------------------------------------------------------------------
00001880  43F9 00001892           1351              LEA     .GOVSTR,A1              ;PONE EL TEXTO
00001886  103C 000E               1352              MOVE.B  #14,D0
0000188A  4E4F                    1353              TRAP    #15
0000188C                          1354  
0000188C  4CDF 0207               1355              MOVEM.L (A7)+,A1/D0-D2
00001890  4E75                    1356              RTS
00001892= 47 41 4D 45 20 4F ...   1357  .GOVSTR     DC.B    'GAME OVER',0
0000189C                          1358              DS.W    0
0000189C                          1359  
0000189C                          1360  
0000189C                          1361  
0000189C                          1362  
0000189C                          1363  
0000189C                          1364  
0000189C                          1365  
0000189C                          1366  
0000189C                          1367  
0000189C                          1368  -------------------- end include --------------------
0000189C                          1369              INCLUDE "BALL.X68"              ;LA PELOTA
0000189C                          1370  ; =============================================================================
0000189C                          1371  ; BALL
0000189C                          1372  ; =============================================================================
0000189C                          1373  ;----------------------------------
0000189C                          1374  BINIT
0000189C                          1375  ;INITIALIZE THE BALL
0000189C                          1376  ;----------------------------------
0000189C  33FC 00FB 00002856      1377              MOVE.W  #BINPOSX,BPOSX1
000018A4  33FC 01CE 0000285C      1378              MOVE.W  #BINPOSY,BPOSY2
000018AC  33FC 0105 00002858      1379              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
000018B4  33FC 01C4 0000285A      1380              MOVE.W  #BINPOSY-BDIAMET,BPOSY1
000018BC  33FC FFFD 00002850      1381              MOVE.W  #BINSPEED,BSPEEDX
000018C4  33FC FFFD 00002852      1382              MOVE.W  #BINSPEED,BSPEEDY
000018CC  4E75                    1383              RTS
000018CE                          1384  ;----------------------------------         
000018CE                          1385  BNXTLEV
000018CE                          1386  ;INITIALIZE THE BALL TO THE NEXT LEVEL
000018CE                          1387  ;----------------------------------
000018CE                          1388  ;BALL NEXT LEVEL       (NEXT LEVEL)
000018CE  48E7 8000               1389              MOVEM.L D0,-(A7)
000018D2  33FC 00FB 00002856      1390              MOVE.W  #BINPOSX,BPOSX1
000018DA  33FC 01CE 0000285A      1391              MOVE.W  #BINPOSY,BPOSY1
000018E2  33FC 0105 00002858      1392              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
000018EA  33FC 0105 0000285C      1393              MOVE.W  #BINPOSX+BDIAMET,BPOSY2
000018F2  3039 00002852           1394              MOVE.W  BSPEEDY,D0
000018F8  6B00 000E               1395              BMI     .NEGY
000018FC  5279 00002852           1396              ADD.W   #1,BSPEEDY
00001902  4EB9 0000190E           1397              JSR     .X
00001908                          1398  .NEGY        
00001908  5379 00002852           1399              SUB.W   #1,BSPEEDY
0000190E                          1400  .X          
0000190E  3039 00002850           1401              MOVE.W  BSPEEDX,D0
00001914  6B00 000E               1402              BMI     .NEGX 
00001918  5279 00002850           1403              ADD.W   #1,BSPEEDX
0000191E  4EB9 0000192A           1404              JSR     .END
00001924                          1405  .NEGX       
00001924  5379 00002850           1406              SUB.W   #1,BSPEEDX 
0000192A                          1407  .END        
0000192A  4CDF 0001               1408              MOVEM.L (A7)+,D0
0000192E  4E75                    1409              RTS
00001930                          1410        
00001930                          1411  ;-----------------------------------------------------------------------------
00001930                          1412  BUPD
00001930                          1413  ;UPDATES THE BALL
00001930                          1414  ;-----------------------------------
00001930                          1415  ; UPDATES THE BALL MOTION
00001930                          1416  ; INPUT    - NONE 
00001930                          1417  ; OUTPUT   - NONE 
00001930                          1418  ; MODIFIES - NONE
00001930                          1419  ; -----------------------------------------------------------------------------
00001930                          1420  
00001930  48E7 FF80               1421              MOVEM.L D0-D7/A0,-(A7)
00001934                          1422              ;COMPRUEBA COLISIONES CON LAS 4 PAREDES
00001934                          1423              ;Y SI PASA LA DE ABAJO LE ELIMINA UNA VIDA, O ENVIA LA PANTALLA GAME OVER
00001934  3039 00002856           1424              MOVE.W  BPOSX1,D0
0000193A  3239 0000285A           1425              MOVE.W  BPOSY1,D1
00001940  3439 00002858           1426              MOVE.W  BPOSX2,D2
00001946  3639 0000285C           1427              MOVE.W  BPOSY2,D3
0000194C  4EB8 120C               1428              JSR     UTLCHCOLW               ;COMPRUEBA COLISIÓN CON PAREDES               
00001950  4EB8 131E               1429              JSR     UTLCHCOLP               ;COMPRUEBA COLISIÓN CON PLATAFORMA
00001954  4284                    1430              CLR.L  D4
00001956  3A39 00002858           1431              MOVE.W  BPOSX2,D5
0000195C  3C39 0000285C           1432              MOVE.W  BPOSY2,D6
00001962  4EB8 13B6               1433              JSR     UTLCOLBL
00001966                          1434              
00001966  B87C 0000               1435              CMP     #0,D4
0000196A  6600 0066               1436              BNE     .END
0000196E  3039 00002858           1437              MOVE.W  BPOSX2,D0
00001974  3239 0000285A           1438              MOVE.W  BPOSY1,D1
0000197A  3A39 00002856           1439              MOVE.W  BPOSX1,D5
00001980  3C39 0000285C           1440              MOVE.W  BPOSY2,D6
00001986  4EB8 13B6               1441              JSR     UTLCOLBL
0000198A  B87C 0000               1442              CMP     #0,D4
0000198E  6600 0042               1443              BNE     .END
00001992  3039 00002856           1444              MOVE.W  BPOSX1,D0
00001998  3239 0000285C           1445              MOVE.W  BPOSY2,D1
0000199E  3A39 00002858           1446              MOVE.W  BPOSX2,D5
000019A4  3C39 0000285A           1447              MOVE.W  BPOSY1,D6
000019AA  4EB8 13B6               1448              JSR     UTLCOLBL
000019AE  B87C 0000               1449              CMP     #0,D4
000019B2  6600 001E               1450              BNE     .END
000019B6  3039 00002858           1451              MOVE.W  BPOSX2,D0
000019BC  3239 0000285C           1452              MOVE.W  BPOSY2,D1
000019C2  3A39 00002856           1453              MOVE.W  BPOSX1,D5
000019C8  3C39 0000285A           1454              MOVE.W  BPOSY1,D6
000019CE  4EB8 13B6               1455              JSR     UTLCOLBL   
000019D2                          1456  
000019D2                          1457  .END            
000019D2                          1458  
000019D2  3039 00002850           1459              MOVE.W  BSPEEDX,D0              ;POSICIÓN = POSICIÓN + VELOCIDAD
000019D8  D179 00002856           1460              ADD.W   D0,BPOSX1
000019DE  D179 00002858           1461              ADD.W   D0,BPOSX2
000019E4                          1462              
000019E4  3239 00002852           1463              MOVE.W  BSPEEDY,D1
000019EA  D379 0000285A           1464              ADD.W   D1,BPOSY1
000019F0  D379 0000285C           1465              ADD.W   D1,BPOSY2
000019F6  4CDF 01FF               1466              MOVEM.L (A7)+,D0-D7/A0
000019FA                          1467              
000019FA  4E75                    1468              RTS
000019FC                          1469  
000019FC                          1470  BPLOT       
000019FC  48E7 F800               1471              MOVEM.L  D0-D4,-(A7)
00001A00                          1472              ;CONTOUR COLOR
00001A00  223C 00FFFFFF           1473              MOVE.L  #BINCOLOR,D1  
00001A06  103C 0050               1474              MOVE.B  #80,D0
00001A0A  4E4F                    1475              TRAP    #15
00001A0C                          1476      
00001A0C                          1477               ;FILL COLOR
00001A0C  223C 00FFFFFF           1478              MOVE.L   #BINCOLOR,D1  
00001A12  103C 0051               1479              MOVE.B  #81,D0
00001A16  4E4F                    1480              TRAP    #15
00001A18                          1481   
00001A18                          1482              ;CIRCLE
00001A18                          1483  
00001A18  3239 00002856           1484              MOVE.W  BPOSX1,D1
00001A1E  3439 0000285A           1485              MOVE.W  BPOSY1,D2
00001A24  3639 00002858           1486              MOVE.W  BPOSX2,D3
00001A2A  3839 0000285C           1487              MOVE.W  BPOSY2,D4
00001A30  103C 0058               1488              MOVE.B  #88,D0
00001A34  4E4F                    1489              TRAP    #15
00001A36                          1490      
00001A36  4CDF 001F               1491              MOVEM.L  (A7)+,D0-D4
00001A3A                          1492  
00001A3A  4E75                    1493              RTS
00001A3C                          1494  
00001A3C                          1495  
00001A3C                          1496  
00001A3C                          1497  
00001A3C                          1498  
00001A3C                          1499  
00001A3C                          1500  
00001A3C                          1501  
00001A3C                          1502  
00001A3C                          1503  
00001A3C                          1504  
00001A3C                          1505  
00001A3C                          1506  
00001A3C                          1507  
00001A3C                          1508  
00001A3C                          1509  
00001A3C                          1510  
00001A3C                          1511  
00001A3C                          1512  
00001A3C                          1513  
00001A3C                          1514  
00001A3C                          1515  
00001A3C                          1516  
00001A3C                          1517  
00001A3C                          1518  
00001A3C                          1519  
00001A3C                          1520  
00001A3C                          1521  
00001A3C                          1522  -------------------- end include --------------------
00001A3C                          1523              INCLUDE "BLOCKS.X68"           ;BLOQUES
00001A3C                          1524  ;-----------------------------------------------------------
00001A3C                          1525  ;           BLOCKS
00001A3C                          1526  ;-----------------------------------------------------------
00001A3C                          1527    
00001A3C                          1528  BLINIT
00001A3C                          1529  
00001A3C  48E7 8080               1530              MOVEM.L D0/A0,-(A7)
00001A40  41F9 00002860           1531              LEA.L   BLMATRIX,A0
00001A46  303C 0005               1532              MOVE.W  #BLROW-7,D0             ;7
00001A4A                          1533  .LOOP       
00001A4A                          1534             
00001A4A  10FC 00FF               1535              MOVE.B  #%11111111,(A0)+
00001A4E  51C8 FFFA               1536              DBRA    D0,.LOOP
00001A52  4279 0000285E           1537              CLR.W   BLCOUNTER
00001A58  4279 0000284E           1538              CLR.W   LEVEL
00001A5E  4CDF 0101               1539              MOVEM.L (A7)+,D0/A0
00001A62  4E75                    1540              RTS
00001A64                          1541              
00001A64                          1542  BLLEV2           
00001A64  48E7 8080               1543              MOVEM.L D0/A0,-(A7)
00001A68  41F9 00002860           1544              LEA.L   BLMATRIX,A0
00001A6E  303C 000B               1545              MOVE.W  #BLROW-1,D0             
00001A72                          1546  .LOOP       
00001A72  10FC 005A               1547              MOVE.B  #%01011010,(A0)+
00001A76  51C8 FFFA               1548              DBRA    D0,.LOOP
00001A7A  4279 0000285E           1549              CLR.W   BLCOUNTER
00001A80  4CDF 0101               1550              MOVEM.L (A7)+,D0/A0
00001A84  4E75                    1551              RTS
00001A86                          1552              
00001A86                          1553  BLLEV3           
00001A86  48E7 8080               1554              MOVEM.L D0/A0,-(A7)
00001A8A  41F9 00002860           1555              LEA.L   BLMATRIX,A0         
00001A90  10FC 00F5               1556              MOVE.B  #%11110101,(A0)+
00001A94  10FC 00A5               1557              MOVE.B  #%10100101,(A0)+
00001A98  10FC 00A5               1558              MOVE.B  #%10100101,(A0)+
00001A9C  10FC 00A5               1559              MOVE.B  #%10100101,(A0)+
00001AA0  10FC 00A5               1560              MOVE.B  #%10100101,(A0)+
00001AA4  10FC 00E5               1561              MOVE.B  #%11100101,(A0)+
00001AA8  10FC 00A5               1562              MOVE.B  #%10100101,(A0)+
00001AAC  10FC 00A5               1563              MOVE.B  #%10100101,(A0)+
00001AB0  10FC 00A5               1564              MOVE.B  #%10100101,(A0)+
00001AB4  10FC 00A5               1565              MOVE.B  #%10100101,(A0)+
00001AB8  10FC 00A5               1566              MOVE.B  #%10100101,(A0)+
00001ABC  10FC 00F5               1567              MOVE.B  #%11110101,(A0)+
00001AC0  4279 0000285E           1568              CLR.W   BLCOUNTER
00001AC6  4CDF 0101               1569              MOVEM.L (A7)+,D0/A0
00001ACA  4E75                    1570              RTS
00001ACC                          1571              
00001ACC                          1572  BLUPD       
00001ACC  48E7 C000               1573              MOVEM.L D0-D1,-(A7)
00001AD0  3039 0000285E           1574              MOVE.W  BLCOUNTER,D0
00001AD6  6700 0008               1575              BEQ     .NEXTLEVEL
00001ADA  4EF9 00001B0C           1576              JMP     .END
00001AE0                          1577  .NEXTLEVEL  
00001AE0  5279 0000284E           1578              ADD.W   #1,LEVEL
00001AE6  B27C 0002               1579              CMP     #2,D1                   ;2 = LEVEL 3, 1-2= -1 = EMPEZAR LEVEL 2,  
00001AEA  6D00 0014               1580              BLT     .NIVEL2
00001AEE  4EF8 1A86               1581              JMP     BLLEV3
00001AF2  33FC 0001 00002842      1582              MOVE.W  #STASPACE,(STANEXT)
00001AFA  4EF9 00001B0C           1583              JMP     .END
00001B00                          1584  .NIVEL2
00001B00  4EF8 1A64               1585              JMP     BLLEV2   
00001B04  33FC 0001 00002842      1586              MOVE.W  #STASPACE,(STANEXT)
00001B0C                          1587              
00001B0C                          1588  .END        
00001B0C  4CDF 0003               1589              MOVEM.L (A7)+,D0-D1  
00001B10  4E75                    1590              RTS          
00001B12                          1591  
00001B12                          1592  BLPLOT
00001B12  48E7 FFC0               1593              MOVEM.L D0-D7/A0-A1,-(A7)
00001B16  103C 0050               1594              MOVE.B  #80,D0                  ;SET PEN COLOR
00001B1A  7200                    1595              MOVE.L  #0,D1
00001B1C  4E4F                    1596              TRAP    #15
00001B1E                          1597              
00001B1E  4242                    1598              CLR.W   D2                      ;UPPER Y
00001B20  383C 0010               1599              MOVE.W  #BLHEIGHT,D4            ;DOWN Y
00001B24  41F8 11DC               1600              LEA     COLORS,A0
00001B28                          1601              
00001B28  3A3C 000B               1602              MOVE.W  #BLROW-1,D5    ;DBRA
00001B2C  227C 00000000           1603              MOVE.L  #0,A1                      ;PARA SABER CUAL PONER D6= FILA
00001B32                          1604              
00001B32                          1605  .LOOP2                                      ;BUCLE DE FILAS
00001B32                          1606   
00001B32  103C 0051               1607              MOVE.B  #81,D0                  ;SET COLOR
00001B36  2218                    1608              MOVE.L  (A0)+,D1
00001B38  4E4F                    1609              TRAP    #15
00001B3A                          1610                                        ;BUCLE FILAS
00001B3A                          1611              
00001B3A  363C 0040               1612              MOVE.W  #BLWIDTH,D3             ;RIGHT X
00001B3E  4241                    1613              CLR.W   D1                      ;LEFT X
00001B40                          1614              
00001B40  3F05                    1615              MOVE.W  D5,-(A7)                ;GUARDO EL VALOR DEL DECREMENTO DE LOOP2
00001B42  3A3C 0007               1616              MOVE.W  #BLCOL-1,D5
00001B46  1C29 2860               1617              MOVE.B  BLMATRIX(A1),D6
00001B4A                          1618  .LOOP1                                      ; BUCLE COLUMNAS
00001B4A                          1619             
00001B4A  E31E                    1620              ROL.B   #1,D6
00001B4C  6400 000E               1621              BCC     .SALTO                  ; SALTA SI CARRY = 0
00001B50                          1622              
00001B50  103C 0057               1623              MOVE.B  #87,D0                  ; DIBUJAMOS EL CUADRADO
00001B54  4E4F                    1624              TRAP    #15
00001B56  5279 0000285E           1625              ADD.W   #1,BLCOUNTER
00001B5C                          1626  .SALTO
00001B5C  3203                    1627              MOVE.W  D3,D1
00001B5E  0643 0040               1628              ADD.W   #BLWIDTH, D3
00001B62  5247                    1629              ADDI.W  #1,D7
00001B64  51CD FFE4               1630              DBRA    D5,.LOOP1 
00001B68  3A1F                    1631              MOVE.W  (A7)+,D5              
00001B6A                          1632  
00001B6A  5249                    1633              ADDA.W  #1,A1
00001B6C  3404                    1634              MOVE.W  D4,D2
00001B6E  0644 0010               1635              ADD.W   #BLHEIGHT,D4
00001B72  51CD FFBE               1636              DBRA    D5,.LOOP2
00001B76  4CDF 03FF               1637              MOVEM.L (A7)+,D0-D7/A0-A1
00001B7A  4E75                    1638              RTS
00001B7C                          1639  
00001B7C                          1640  
00001B7C                          1641  
00001B7C                          1642  
00001B7C                          1643  -------------------- end include --------------------
00001B7C                          1644  
00001B7C                          1645  ; --- INITIALIZE --------------------------------------------------------------
00001B7C                          1646              
00001B7C  4EB8 1000               1647  START       JSR     SYSINIT
00001B80                          1648              ; TO DO: CALL GAME INITIALIZATION CODE HERE
00001B80  4EB8 167E               1649              JSR     STAINIT                 ;INICIA LAS PANTALLAS            
00001B84                          1650              
00001B84                          1651  ; --- UPDATE ------------------------------------------------------------------
00001B84                          1652  
00001B84  4E40                    1653  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
00001B86                          1654                                              ; UPDATE DEPENDING ON THE STATE
00001B86                          1655              ; TO DO: CALL GAME UPDATE CODE HERE
00001B86  4EB8 1690               1656              JSR     STAUPD
00001B8A                          1657  
00001B8A                          1658  ; --- WAIT SYNCH --------------------------------------------------------------
00001B8A                          1659  
00001B8A  4A39 00001BA6           1660  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001B90  67F8                    1661              BEQ     .WINT
00001B92                          1662              
00001B92  4239 00001BA6           1663              CLR.B   (SCRINTCT)
00001B98                          1664  
00001B98                          1665  ; --- PLOT --------------------------------------------------------------------
00001B98                          1666              
00001B98                          1667              ; TO DO: CALL GAME PLOT CODE HERE
00001B98  4EB8 16EA               1668              JSR     STAPLOT
00001B9C                          1669  
00001B9C  4E41                    1670              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001B9E  60E4                    1671              BRA     .LOOP
00001BA0  FFFF FFFF               1672              SIMHALT
00001BA4                          1673  
00001BA4                          1674  ; --- VARIABLES ---------------------------------------------------------------
00001BA4                          1675  
00001BA4                          1676              INCLUDE "SYSVAR.X68"
00001BA4                          1677  ; =============================================================================
00001BA4                          1678  ; SYSTEM VARS
00001BA4                          1679  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
00001BA4                          1680  ; THEY MUST NOT BE IN PROTECTED MEMORY.
00001BA4                          1681  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
00001BA4                          1682  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
00001BA4                          1683  ; THIS IS GOOD ENOUGH.
00001BA4                          1684  ; =============================================================================
00001BA4                          1685  
00001BA4                          1686  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001BA4                          1687  
00001BA4                          1688  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001BA5                          1689  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001BA6                          1690  
00001BA6                          1691              DS.W    0
00001BA6                          1692  
00001BA6                          1693  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001BA6                          1694  
00001BA6                          1695  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001BA7                          1696  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001BA8                          1697              DS.W    0
00001BA8                          1698  
00001BA8                          1699  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001BA8                          1700  
00001BC0                          1701              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001BC0                          1702  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002840                          1703              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002840                          1704  
00002840                          1705  
00002840                          1706  
00002840                          1707  -------------------- end include --------------------
00002840                          1708              INCLUDE "VAR.X68"
00002840                          1709  ; =============================================================================
00002840                          1710  ; GAME VARS
00002840                          1711  ; =============================================================================
00002840                          1712  
00002840                          1713  ; TO DO: DECLARE GAME VARIABLES HERE.
00002840                          1714  
00002840                          1715  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
00002840                          1716  
00002840                          1717  STACUR      DS.W    1                       ; CURRENT GAME STATE
00002842                          1718  STANEXT     DS.W    1                       ; NEXT GAME STATE
00002844                          1719  ;----------------------------------------------------------------------------
00002844                          1720  
00002844                          1721  ; PLAYER --------------------------------------------------------------------
00002844                          1722  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
00002846                          1723  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
00002848                          1724  PLIVES      DS.W    1                       ;LIVES LEFT
0000284A                          1725  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
0000284C                          1726  PSPEED      DS.W    1
0000284E                          1727  LEVEL       DS.B    2
00002850                          1728  
00002850                          1729  ;----------------------------------------------------------------------------
00002850                          1730  
00002850                          1731  ; BALL ----------------------------------------------------------------------
00002850                          1732  ;BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
00002850                          1733  ;BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
00002850                          1734  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
00002852                          1735  BSPEEDY     DS.W    1
00002854                          1736  BCOLOR      DS.W    1
00002856                          1737  BPOSX1      DS.W    1
00002858                          1738  BPOSX2      DS.W    1
0000285A                          1739  BPOSY1      DS.W    1
0000285C                          1740  BPOSY2      DS.W    1
0000285E                          1741  ; BLOCKS --------------------------------------------------------------------
0000285E                          1742  BLCOUNTER   DS.W    1
00002860                          1743  BLMATRIX    DS.B    BLROW  ;12*8
0000286C                          1744              DS.W    0
0000286C                          1745              
0000286C                          1746  
0000286C                          1747  
0000286C                          1748  
0000286C                          1749  
0000286C                          1750  
0000286C                          1751  
0000286C                          1752  
0000286C                          1753  -------------------- end include --------------------
0000286C                          1754              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              2854
BDIAMET             A
BINCOLOR            FFFFFF
BINIT               189C
BINPOSX             FB
BINPOSY             1CE
BINSPEED            FFFFFFFD
BLCOL               8
BLCOUNTER           285E
BLHEIGHT            10
BLINIT              1A3C
BLINIT:LOOP         1A4A
BLLEV2              1A64
BLLEV2:LOOP         1A72
BLLEV3              1A86
BLMATRIX            2860
BLPLOT              1B12
BLPLOT:LOOP1        1B4A
BLPLOT:LOOP2        1B32
BLPLOT:SALTO        1B5C
BLROW               C
BLUE                F7E78E
BLUPD               1ACC
BLUPD:END           1B0C
BLUPD:NEXTLEVEL     1AE0
BLUPD:NIVEL2        1B00
BLWIDTH             40
BNXTLEV             18CE
BNXTLEV:END         192A
BNXTLEV:NEGX        1924
BNXTLEV:NEGY        1908
BNXTLEV:X           190E
BPLOT               19FC
BPOSX1              2856
BPOSX2              2858
BPOSY1              285A
BPOSY2              285C
BSPEEDX             2850
BSPEEDY             2852
BUPD                1930
BUPD:END            19D2
COLORS              11DC
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1BC0
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
GOVERC              FFFF
GOVERX              12
GOVERY              7
GREEN               95FF8C
INTPRSC             FFFFFF
INTPRSX             20
INTPRSY             52
INTTITC             DCAA7C
INTTITX             E
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1BA5
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1BA4
LEVEL               284E
LIVECOLOR           FF
LIVEHEIGHT          10
LIVEPOSX            215
LIVEPOSY            1E
LIVEWIDTH           40
ORANGE              4E8CF3
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX1            E0
PINPOSX2            E4
PINPOSX3            E8
PINWIDTH1           40
PINWIDTH2           38
PINWIDTH3           30
PLIVES              2848
PLRINIT             1544
PLRREV              1556
PLRUPD              1568
PLRUPD:END          15AE
PLRUPD:RIGHTKEY     158C
PMOVE               8
PPLOT               15B4
PPLOT:END           1670
PPLOT:LOOP          162E
PPLOT:TXTSCORE      1676
PPOSX               2844
PPOSY               1D0
PSCORE              284A
PSCORECOL           FFFFFF
PSCORETX            32
PSCORETY            4
PSPEED              284C
PURPLE              FFACAC
PWIDTH              2846
SCRCTRL             201
SCRCYCCT            1BA7
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1BA6
SCRIRQ              1
SCRISR              107E
SCRLWIDTH           5
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            2E4
STACUR              2840
STAEMPTY            1716
STAGOVR             3
STAGOVRP            1860
STAGOVRP:GOVSTR     1892
STAGOVRU            1842
STAGOVRU:END        185E
STAINIT             167E
STAINTR             0
STAINTRI            1762
STAINTRI:SOUND      177E
STAINTRP            17C4
STAINTRP:PRSSTR     182E
STAINTRP:TITSTR     181E
STAINTRU            1792
STAINTRU:END        17C2
STANEXT             2842
STANONE             FFFFFFFF
STAPLAY             2
STAPLAYI            1718
STAPLAYP            174C
STAPLAYU            173A
STAPLOT             16EA
STAPLOT:PLTTBL      1706
START               1B7C
START:LOOP          1B84
START:WINT          1B8A
STASPACE            1
STASPACEU           1724
STASPACEU:END       1738
STAUPD              1690
STAUPD:DOUPD        16B6
STAUPD:INITBL       16CE
STAUPD:UPDTBL       16DA
SYSINIT             1000
TXBSIZE             12
TXMSIZE             10
TXSSIZE             A
UTLCHCOL            149C
UTLCHCOL:END        14CA
UTLCHCOL:NOCOL      14C8
UTLCHCOLP           131E
UTLCHCOLP:END       13B0
UTLCHCOLP:LADOS     13AA
UTLCHCOLP:PLRXMIDDLE  1364
UTLCHCOLP:PLRXRIGHT  1392
UTLCHCOLW           120C
UTLCHCOLW:COLLISIONS  12EE
UTLCHCOLW:DOWN      1278
UTLCHCOLW:END       12E8
UTLCHCOLW:LEFT      1236
UTLCHCOLW:MINLIVE   1284
UTLCHCOLW:RESET     12E0
UTLCHCOLW:RIGHT     1256
UTLCHCOLW:SOUNDG    12F6
UTLCHCOLW:SOUNDL    130A
UTLCOLBL            13B6
UTLCOLBL:CHOQUEDOBLE  13FA
UTLCOLBL:CHOQUEDOBLEIZQ  1428
UTLCOLBL:DERECHA    1446
UTLCOLBL:ENDCOLISION  1452
UTLCOLBL:ENDNOCOLISION  148A
UTLCOLBL:ENMEDIO    1434
UTLCOLBL:IZQ        13E0
UTLCOLBL:SOUND      148C
UTLCOLBL:TEST       13DA
UTLCOLBL:TEST2      1410
UTLLOCT             3CF
UTLSCTRLP           14D0
UTLSCTRLP:TXTSCORE  153C
UTLSFIL             2A5
UTLSIZC             12A
UTLSNDS             4F7
UTLSNDST            6F3
UTLSPEN             0
YELLOW              38EEF8
