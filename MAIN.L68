00001DC6 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 30/12/2019 12:11:09

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION : 
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8              
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =000002E4                 81  SCRWIDTH    EQU     740                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  
00001000                            93  -------------------- end include --------------------
00001000                            94              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            95  ; =============================================================================
00001000                            96  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            97  ; =============================================================================
00001000                            98  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101  ; INITIALIZES THE SYSTEM
00001000                           102  ; INPUT    - NONE
00001000                           103  ; OUTPUT   - NONE
00001000                           104  ; MODIFIES - NONE
00001000                           105  ; -----------------------------------------------------------------------------
00001000  205F                     106              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            107              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            108              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            109              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                110              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     111              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     112              RTS
0000101C                           113  
0000101C                           114  ; =============================================================================
0000101C                           115  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           116  ; =============================================================================
0000101C                           117  
0000101C                           118  ; -----------------------------------------------------------------------------
0000101C                           119  SCRINIT
0000101C                           120  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           121  ; INPUT    - NONE
0000101C                           122  ; OUTPUT   - NONE
0000101C                           123  ; MODIFIES - D0,D1,D2,D3
0000101C                           124  ; -----------------------------------------------------------------------------
0000101C                           125              ; TO DO:
0000101C                           126              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                127              ORI.W   #$0700,SR
00001020                           128              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           129              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       130              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           131              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                132              MOVE.B  #33,D0
0000102C  223C 02E401E0            133              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     134              TRAP    #15
00001034                           135              ; - SET WINDOWED MODE
00001034  7201                     136              MOVE.L  #1,D1
00001036  4E4F                     137              TRAP    #15
00001038                           138              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                139              MOVE.B  #11,D0
0000103C  323C FF00                140              MOVE.W  #$FF00,D1
00001040  4E4F                     141              TRAP    #15
00001042                           142              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                143              MOVE.B  #92,D0
00001046  123C 0011                144              MOVE.B  #17,D1
0000104A  4E4F                     145              TRAP    #15
0000104C                           146              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     147              MOVE.L  #11,D0
0000104E  323C FF00                148              MOVE.W  #$FF00,D1
00001052  4E4F                     149              TRAP    #15
00001054                           150              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           151              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       152              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           153              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           154              ;   TASK 32)
0000105C  103C 0020                155              MOVE.B  #32,D0
00001060  123C 0006                156              MOVE.B  #6,D1
00001064                           157         
00001064  143C 0081                158              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     159              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     160              TRAP    #15
0000106C                           161              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 00001DF0            162              CLR.B   SCRINTCT
00001072  4239 00001DF1            163              CLR.B   SCRCYCCT
00001078                           164              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                165              ANDI.W  #$F8FF,SR
0000107C  4E75                     166              RTS
0000107E                           167  
0000107E                           168  ; -----------------------------------------------------------------------------
0000107E                           169  SCRISR
0000107E                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           171  ; INPUT    - NONE
0000107E                           172  ; OUTPUT   - NONE
0000107E                           173  ; MODIFIES - NONE
0000107E                           174  ; -----------------------------------------------------------------------------
0000107E  5239 00001DF0            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 00001DF1            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     177              RTE
0000108C                           178  
0000108C                           179  ; -----------------------------------------------------------------------------
0000108C                           180  SCRUPD
0000108C                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           182  ; BUFFER FOR THE NEXT ONE.
0000108C                           183  ; INPUT    - NONE
0000108C                           184  ; OUTPUT   - NONE
0000108C                           185  ; MODIFIES - NONE
0000108C                           186  ; -----------------------------------------------------------------------------
0000108C                           187              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                188              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                189              MOVE.B  #94,D0
00001094  4E4F                     190              TRAP    #15
00001096  103C 000B                191              MOVE.B  #11,D0
0000109A  323C FF00                192              MOVE.W  #$FF00,D1
0000109E  4E4F                     193              TRAP    #15
000010A0  4CDF 0003                194              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     195              RTE
000010A6                           196  
000010A6                           197  ; =============================================================================
000010A6                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           199  ; =============================================================================
000010A6                           200  
000010A6                           201  ; -----------------------------------------------------------------------------
000010A6                           202  KBDINIT
000010A6                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           204  ; INPUT    - NONE
000010A6                           205  ; OUTPUT   - NONE
000010A6                           206  ; MODIFIES - NONE
000010A6                           207  ; -----------------------------------------------------------------------------
000010A6  4239 00001DEE            208              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 00001DEF            209              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     211              RTS
000010BC                           212  
000010BC                           213  ; -----------------------------------------------------------------------------
000010BC                           214  KBDREAD
000010BC                           215  ; TRAP SERVICE ROUTINE.
000010BC                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           219  ; INPUT    - NONE
000010BC                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           221  ; MODIFIES - NONE
000010BC                           222  ; -----------------------------------------------------------------------------
000010BC                           223              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                224              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                225              MOVE.B  #19,D0
000010C4                           226              
000010C4  223C 50104D20            227              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     228              TRAP    #15
000010CC                           229          
000010CC  4202                     230              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                231              MOVE.W  #3,D4
000010D2                           232              
000010D2                           233  .LOOP1      
000010D2                           234       
000010D2  E189                     235              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     236              MOVE.W  SR,D3                   
000010D6  0243 0001                237              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     238              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     239              OR.B    D3,D2                   
000010DE  51CC FFF2                240              DBRA    D4,.LOOP1
000010E2                           241          
000010E2                           242              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           243              
000010E2  223C 28272625            244              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     245              TRAP    #15
000010EA                           246              
000010EA  383C 0003                247              MOVE.W  #3,D4
000010EE                           248  .LOOP2      
000010EE  E189                     249              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     250              MOVE.W  SR,D3
000010F2  0243 0001                251              ANDI.W  #$0001,D3    
000010F6  E30A                     252              LSL.B   #1,D2
000010F8  8403                     253              OR.B    D3,D2
000010FA                           254              
000010FA  51CC FFF2                255              DBRA    D4,.LOOP2
000010FE                           256              
000010FE                           257              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           258              
000010FE                           259              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 00001DEE            260              MOVE.B  KBDVAL,D3
00001104  4603                     261              NOT.B   D3
00001106  13C2 00001DEE            262              MOVE.B  D2,KBDVAL
0000110C  C602                     263              AND.B   D2,D3
0000110E  13C3 00001DEF            264              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                265              MOVEM.L (A7)+,D0-D4
00001118  4E73                     266              RTE
0000111A                           267  
0000111A                           268  ; =============================================================================
0000111A                           269  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           270  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           271  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           272  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           273  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           274  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           275  ; =============================================================================
0000111A                           276  
0000111A                           277  ; -----------------------------------------------------------------------------
0000111A                           278  DMMINIT
0000111A                           279  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           280  ; INPUT    - NONE
0000111A                           281  ; OUTPUT   - NONE
0000111A                           282  ; MODIFIES - NONE
0000111A                           283  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                284              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001E00            285              LEA     DMMDATA,A0
00001124  303C 0031                286              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                287  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            288              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                289              DBRA.W  D0,.LOOP
00001136  4CDF 0101                290              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     291              RTS
0000113C                           292  
0000113C                           293  ; -----------------------------------------------------------------------------
0000113C                           294  DMMFIRST
0000113C                           295  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           296  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           297  ; INPUT    - NONE
0000113C                           298  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           299  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           300  ; -----------------------------------------------------------------------------
0000113C  41F9 00001E00            301              LEA     DMMDATA,A0
00001142  4A58                     302  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                303              BNE     DMMFRFND
00001148  D1FC 0000003E            304              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 00002A7F            305  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     306              BLT     DMMFRLOP
00001156  207C 00000000            307              MOVE.L  #0,A0
0000115C  4E75                     308  DMMFRFND    RTS
0000115E                           309  
0000115E                           310  ; -----------------------------------------------------------------------------
0000115E                           311  DMMNEXT
0000115E                           312  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           313  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           314  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           315  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           316  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           317  ; -----------------------------------------------------------------------------
0000115E  2F00                     318              MOVE.L  D0,-(A7)
00001160  2008                     319              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            320              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            321              ADD.L   #DMMBSIZE,D0
0000116E  2040                     322              MOVE.L  D0,A0
00001170  201F                     323              MOVE.L  (A7)+,D0
00001172  60DA                     324              BRA     DMMFRCOM
00001174                           325  
00001174                           326  ; -----------------------------------------------------------------------------
00001174                           327  DMMFRSTO
00001174                           328  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           329  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           330  ; INPUT    - D0.W : ID TO SEARCH
00001174                           331  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           332  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           333  ; -----------------------------------------------------------------------------
00001174  41F9 00001E00            334              LEA     DMMDATA,A0
0000117A  B058                     335  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                336              BEQ     DMMFFND
00001180  D1FC 0000003E            337              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 00002A7F            338  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     339              BLT     DMMFLOOP
0000118E  207C 00000000            340              MOVE.L  #0,A0
00001194  4E75                     341  DMMFFND     RTS
00001196                           342  
00001196                           343  ; -----------------------------------------------------------------------------
00001196                           344  DMMNEXTO
00001196                           345  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           346  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           347  ; INPUT    - D0.W : ID TO SEARCH
00001196                           348  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           351  ; -----------------------------------------------------------------------------
00001196  2F00                     352              MOVE.L  D0,-(A7)
00001198  2008                     353              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011A6  2040                     356              MOVE.L  D0,A0
000011A8  201F                     357              MOVE.L  (A7)+,D0
000011AA  60DA                     358              BRA     DMMFCOM
000011AC                           359  
000011AC                           360  ; -----------------------------------------------------------------------------
000011AC                           361  DMMALLOC
000011AC                           362  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           363  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           364  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           367  ; -----------------------------------------------------------------------------
000011AC  3F00                     368              MOVE.W  D0,-(A7)
000011AE  4240                     369              CLR.W   D0
000011B0  4EB8 1174                370              JSR     DMMFRSTO
000011B4  301F                     371              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            372              CMP.L   #0,A0
000011BC  6700 0006                373              BEQ     .END
000011C0  3140 FFFE                374              MOVE.W  D0,-2(A0)
000011C4  4E75                     375  .END        RTS
000011C6                           376  
000011C6                           377  ; -----------------------------------------------------------------------------
000011C6                           378  DMMFREE
000011C6                           379  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           380  ; SYSTEM (0)
000011C6                           381  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           382  ; OUTPUT   - NONE
000011C6                           383  ; MODIFIES - NONE
000011C6                           384  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                385              MOVEM.L D0/A0,-(A7)
000011CA  2008                     386              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            387              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     388              MOVE.L  D0,A0
000011D4  4250                     389              CLR.W   (A0)
000011D6  4CDF 0101                390              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     391              RTS
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  
000011DC                           407  
000011DC                           408  
000011DC                           409  
000011DC                           410  
000011DC                           411  
000011DC                           412  
000011DC                           413  -------------------- end include --------------------
000011DC                           414              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           415  ; =============================================================================
000011DC                           416  ; CONSTANTS
000011DC                           417  ; =============================================================================
000011DC                           418  
000011DC                           419  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           420  
000011DC  =0000000E                421  INTTITX     EQU     14                      ; TITLE X COORDINATE
000011DC  =00000007                422  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                423  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000020                424  INTPRSX     EQU     32                      ; PRESS FIRE X COORDINATE
000011DC  =00000052                425  INTPRSY     EQU     82                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                426  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC  =00000012                427  TXBSIZE     EQU     18                      ;BIG SIZE LETTERS
000011DC  =00000010                428  TXMSIZE     EQU     16                      ;MEDIUM SIZE LETTERS
000011DC  =0000000A                429  TXSSIZE     EQU     10                      ;SMALL SIZE LETTERS
000011DC                           430  
000011DC                           431  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                432  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                433  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                434  STASPACE    EQU     1                       ; ESPERA EL ESPACIO PARA DISPARAR LA BOLA 
000011DC  =00000002                435  STAPLAY    EQU     2                       ; NORMAL GAME STATE
000011DC                           436  ;STAPLAY2    EQU     3
000011DC                           437  ;STAPLAY3    EQU     4
000011DC  =00000003                438  STAGOVR     EQU     3                       ; GAME OVER STATE
000011DC                           439  ;----------------------------------------------------------------------------
000011DC                           440  
000011DC                           441  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           442  
000011DC  =00000012                443  GOVERX      EQU     18                      ; GAME OVER X COORDINATE
000011DC  =00000007                444  GOVERY      EQU     7                       ; GAME OVER Y COORDINATE
000011DC  =0000FFFF                445  GOVERC      EQU     $0000FFFF               ; GAME OVER COLOR
000011DC                           446  
000011DC                           447  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =00000201                448  SCRCTRL     EQU     513   
000011DC  =00000005                449  SCRLWIDTH   EQU     5
000011DC  =00000040                450  LIVEWIDTH   EQU     64
000011DC  =00000010                451  LIVEHEIGHT  EQU     16
000011DC  =000000FF                452  LIVECOLOR   EQU     $000000FF               ;ROJO
000011DC  =00000215                453  LIVEPOSX    EQU     SCRCTRL+20
000011DC  =0000001E                454  LIVEPOSY    EQU     30
000011DC= 73 63 6F 72 65 2E ...    455  FILE        DC.B    'score.txt',0
000011E6                           456  ;----------------------------------------------------------------------------
000011E6                           457  
000011E6                           458  
000011E6                           459  ; PLAYER --------------------------------------------------------------------
000011E6                           460  
000011E6  =00000040                461  PINWIDTH1    EQU     64                      ; PLAYER INITIAL WIDTH (PIXELS)
000011E6  =00000038                462  PINWIDTH2    EQU     56
000011E6  =00000030                463  PINWIDTH3    EQU     48
000011E6  =0000000C                464  PHEIGHT     EQU     12                      ; PLAYER HEIGHT (PIXELS)
000011E6  =00ECD59D                465  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011E6  =00000003                466  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011E6  =00000008                467  PMOVE       EQU     8                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011E6  =000001D0                468  PPOSY       EQU     SCRHEIGH-PHEIGHT-4      ;POSICION DE LA PLATAFORMA Y
000011E6  =000000E0                469  PINPOSX1     EQU     SCRCTRL/2-PINWIDTH1/2
000011E6  =000000E4                470  PINPOSX2     EQU     SCRCTRL/2-PINWIDTH2/2
000011E6  =000000E8                471  PINPOSX3     EQU     SCRCTRL/2-PINWIDTH3/2
000011E6  =00000032                472  PSCORETX     EQU    50                       ; SCORE X COORDINATE
000011E6  =00000004                473  PSCORETY     EQU    4                       ; SCORE Y COORDINATE
000011E6  =00FFFFFF                474  PSCORECOL   EQU     $00FFFFFF
000011E6                           475  ; ---------------------------------------------------------------------------
000011E6                           476  
000011E6                           477  ; BALL ----------------------------------------------------------------------
000011E6  =0000000A                478  BDIAMET     EQU     10                       ;ANCHURA DE LA BOLA
000011E6  =000000FB                479  BINPOSX     EQU     SCRCTRL/2-BDIAMET/2     ;POSICION DE LA PELOTA X INICIAL
000011E6  =000001CE                480  BINPOSY     EQU     PPOSY-2                 ;POSICION DE LA PELOTA Y INICIAL
000011E6  =FFFFFFFD                481  BINSPEED    EQU     -3                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011E6                           482  
000011E6  =00FFFFFF                483  BINCOLOR    EQU     $00FFFFFF
000011E6                           484  
000011E6                           485  ; ---------------------------------------------------------------------------
000011E6                           486  
000011E6                           487  
000011E6                           488  ;BLOCKS-------------------------------------------------------------------------
000011E6  =00000040                489  BLWIDTH     EQU     64
000011E6  =00000010                490  BLHEIGHT     EQU     16
000011E6= 00F7E78E 004E8CF3 ...    491  COLORS      DC.L    BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE
00001216  =0000000C                492  BLROW       EQU     12
00001216  =00000008                493  BLCOL       EQU     8
00001216                           494  
00001216                           495  
00001216                           496  ;-------------------------------------------------------------------------------
00001216                           497  
00001216                           498  ;COLORS-------------------------------------------------------------
00001216  =004E8CF3                499  ORANGE      EQU     $004E8CF3
00001216  =00F7E78E                500  BLUE        EQU     $00F7E78E
00001216  =00FFACAC                501  PURPLE      EQU     $00FFACAC
00001216  =0038EEF8                502  YELLOW      EQU     $0038EEF8
00001216  =0095FF8C                503  GREEN       EQU     $0095FF8C
00001216                           504  ;-------------------------------------------------------------------
00001216                           505  
00001216                           506  
00001216                           507  -------------------- end include --------------------
00001216                           508              INCLUDE "UTIL.X68"
00001216                           509  ; =============================================================================
00001216                           510  ; UTILITY MACROS
00001216                           511  ; =============================================================================
00001216                           512  
00001216                           513  UTLSPEN     MACRO
00001216                           514  ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001216                           515  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
00001216                           516  ; OUTPUT   - NONE
00001216                           517  ; MODIFIES - D0,D1
00001216                           518  ; -----------------------------------------------------------------------------
00001216                           519              MOVE.B  #80,D0
00001216                           520              MOVE.L  \1,D1
00001216                           521              TRAP    #15
00001216                           522              ENDM
00001216                           523  
00001216                           524  ; -----------------------------------------------------------------------------
00001216                           525  UTLSIZC     MACRO
00001216                           526  ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001216                           527  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR \2 SIZE (8, 9, 10, 12, 14, 16, 18))
00001216                           528  ; OUTPUT   - NONE
00001216                           529  ; MODIFIES - D0,D1
00001216                           530  ; -----------------------------------------------------------------------------
00001216                           531              MOVE.L  \1,D1
00001216                           532              MOVE.L  #\2<<16|1,D2
00001216                           533              MOVE.B  #21,D0
00001216                           534              TRAP    #15
00001216                           535              ENDM
00001216                           536  ; -----------------------------------------------------------------------------
00001216                           537  UTLSFIL     MACRO
00001216                           538  ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001216                           539  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
00001216                           540  ; OUTPUT   - NONE
00001216                           541  ; MODIFIES - D0,D1
00001216                           542  ; -----------------------------------------------------------------------------
00001216                           543              MOVE.B  #81,D0
00001216                           544              MOVE.L  \1,D1
00001216                           545              TRAP    #15
00001216                           546              ENDM
00001216                           547              
00001216                           548  ; -----------------------------------------------------------------------------
00001216                           549  UTLLOCT     MACRO
00001216                           550  ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001216                           551  ; INPUT    - \1 X, \2 Y
00001216                           552  ; OUTPUT   - NONE
00001216                           553  ; MODIFIES - D0,D1
00001216                           554  ; -----------------------------------------------------------------------------
00001216                           555              MOVE.W  #\1<<8|\2, D1
00001216                           556              MOVE.B  #11,D0
00001216                           557              TRAP    #15
00001216                           558              ENDM
00001216                           559     
00001216                           560  ; -----------------------------------------------------------------------------
00001216                           561  UTLSNDS     MACRO
00001216                           562  ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001216                           563  ; INPUT    - \1 ADDRESS TO STRING WITH NAME OF THE FILE, \2 NUM SOUNDS, 
00001216                           564  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001216                           565  ; MODIFIES - D0,A1
00001216                           566  ; -----------------------------------------------------------------------------
00001216                           567              LEA     \1, A1             ;PLAY EXPLOSION SOUND
00001216                           568              MOVE.W  \2,D1
00001216                           569              MOVE.B  #71,D0
00001216                           570              TRAP    #15
00001216                           571              MOVE.B  #72,D0
00001216                           572              TRAP    #15
00001216                           573              
00001216                           574              ENDM
00001216                           575              
00001216                           576  ; -----------------------------------------------------------------------------
00001216                           577  UTLSNDST     MACRO
00001216                           578  ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001216                           579  ; INPUT    - NONE 
00001216                           580  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001216                           581  ; MODIFIES - D0,A1
00001216                           582  ; -----------------------------------------------------------------------------
00001216                           583              MOVE.L  #3,D2
00001216                           584              MOVE.B  #76,D0
00001216                           585              TRAP    #15
00001216                           586              
00001216                           587              ENDM
00001216                           588  ; -----------------------------------------------------------------------------            
00001216                           589  UTLSVNAME  MACRO
00001216                           590  ;SAVES THE NAME OS THE PLAYER
00001216                           591  ;MAX CARACTERS: 20
00001216                           592  ; -----------------------------------------------------------------------------
00001216                           593              LEA.L   .INSTRUCT,A1            ;hacer que escriba
00001216                           594              MOVE.B  #14,D0
00001216                           595              TRAP    #15
00001216                           596              
00001216                           597              LEA.L   PNAME,A1                ;GUARDAMOS EL NOMBRE
00001216                           598              MOVE.B  #2,D0
00001216                           599              TRAP    #15                     ;(A1) = PNAME
00001216                           600             
00001216                           601              RTS
00001216                           602  .INSTRUCT   DC.B    'ENTER YOUR NAME: ',0
00001216                           603              ENDM
00001216                           604  ; -----------------------------------------------------------------------------
00001216                           605  ; =============================================================================
00001216                           606  ; UTILITY SUBROUTINES
00001216                           607  ; =============================================================================
00001216                           608  ; -----------------------------------------------------------------------------
00001216                           609  UTLCHCOLW
00001216                           610  ; CHECKS COLLISION WITH WALL
00001216                           611  ; INPUT    - D0.W BPOSX1
00001216                           612  ;            D1.W BPOSY1
00001216                           613  ;            D2.W BPOSX2
00001216                           614  ;            D3.W BPOSY2
00001216                           615  ; OUTPUT   - 
00001216                           616  ; MODIFIES - 
00001216                           617  ; -----------------------------------------------------------------------------
00001216  48E7 F080                618              MOVEM.L D0-D3/A0,-(A7)
0000121A  41F9 000012F8            619              LEA.L   .COLLISIONS,A0
00001220  B258                     620              CMP.W   (A0)+,D1      ;UP
00001222  6E00 001C                621              BGT     .LEFT
00001226                           622  
00001226  4479 00002AE2            623              NEG.W   BSPEEDY
0000122C  4279 00002AEC            624              CLR.W   BPOSY1
00001232  33FC 000A 00002AEE       625              MOVE.W  #BDIAMET,BPOSY2
0000123A  4EF9 000012F2            626              JMP     .END 
00001240                           627  .LEFT        
00001240  B058                     628              CMP.W   (A0)+,D0
00001242  6E00 001C                629              BGT     .RIGHT
00001246  4479 00002AE0            630              NEG.W   BSPEEDX
0000124C  4279 00002AE8            631              CLR.W   BPOSX1
00001252  33FC 000A 00002AEA       632              MOVE.W  #BDIAMET,BPOSX2
0000125A  4EF9 000012F2            633              JMP     .END
00001260                           634  .RIGHT      
00001260                           635              
00001260  B458                     636              CMP.W   (A0)+,D2
00001262  6D00 001E                637              BLT     .DOWN
00001266  4479 00002AE0            638              NEG.W   BSPEEDX
0000126C  33FC 0201 00002AEA       639              MOVE.W  #SCRCTRL,BPOSX2
00001274  33FC 01F7 00002AE8       640              MOVE.W  #SCRCTRL-BDIAMET,BPOSX1
0000127C  4EF9 000012F2            641              JMP     .END
00001282                           642  .DOWN       
00001282  B658                     643              CMP.W   (A0)+,D3         
00001284  6E00 0008                644              BGT     .MINLIVE                  
00001288  4EF9 000012F2            645              JMP     .END  
0000128E                           646  .MINLIVE       
0000128E                           647m             UTLSNDS .SOUNDL,#1
0000128E                           648m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000128E                           649m ; INPUT    - .SOUNDL ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
0000128E                           650m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000128E                           651m ; MODIFIES - D0,A1
0000128E                           652m ; -----------------------------------------------------------------------------
000012A4  33FC 01E0 00002AEE       653              MOVE.W  #SCRHEIGH,BPOSY2
000012AC  33FC 01D6 00002AEC       654              MOVE.W  #SCRHEIGH-BDIAMET,BPOSY1 
000012B4  5379 00002A88            655              SUB.W   #1,PLIVES                
000012BA  6600 002E                656              BNE     .RESET               ;SALTA SI NO SE HAN AGOTADO LAS VIDAS              
000012BE                           657m             UTLSNDST
000012BE                           658m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
000012BE                           659m ; INPUT    - NONE 
000012BE                           660m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012BE                           661m ; MODIFIES - D0,A1
000012BE                           662m ; -----------------------------------------------------------------------------
000012C6                           663m             UTLSNDS .SOUNDG,#1
000012C6                           664m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000012C6                           665m ; INPUT    - .SOUNDG ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000012C6                           666m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012C6                           667m ; MODIFIES - D0,A1
000012C6                           668m ; -----------------------------------------------------------------------------
000012DC  33FC 0003 00002A82       669              MOVE.W  #STAGOVR,(STANEXT)
000012E4  4EF9 000012F2            670              JMP     .END
000012EA                           671  .RESET     
000012EA                           672              
000012EA  33FC 0001 00002A82       673              MOVE.W  #STASPACE,(STANEXT) 
000012F2                           674             
000012F2                           675  .END        
000012F2  4CDF 010F                676              MOVEM.L (A7)+,D0-D3/A0
000012F6  4E75                     677              RTS
000012F8= 0000 0000 0201 01E0      678  .COLLISIONS DC.W    0,0,SCRCTRL,SCRHEIGH
00001300= 67616D65 206F7665 ...    679  .SOUNDG      DC.L    'game over.wav',0
00001314= 6C6F7365 206C6966 ...    680  .SOUNDL     DC.L    'lose life.wav',0
00001328                           681  ; -----------------------------------------------------------------------------
00001328                           682  UTLCHCOLP
00001328                           683  ; CHECKS COLLISION WITH PLATAFORM
00001328                           684  ; INPUT    - D0.W BPOSX1
00001328                           685  ;            D1.W BPOSY1
00001328                           686  ;            D2.W PPOSX2
00001328                           687  ;            D3.W PPOSY2
00001328                           688  ; OUTPUT   
00001328                           689  ;           
00001328                           690  ; MODIFIES - D4,D5
00001328                           691  ; -----------------------------------------------------------------------------
00001328  48E7 0C00                692              MOVEM.L D4-D5,-(A7)
0000132C  383C 01D0                693              MOVE.W  #PPOSY,D4
00001330  B644                     694              CMP.W   D4,D3
00001332  6D00 0086                695              BLT     .END                    ;SI ESTÁ MÁS A ARRIBA DE LA PLATAFORMA NO HAY COLISIÓN
00001336  3839 00002A84            696              MOVE.W  PPOSX,D4
0000133C  B444                     697              CMP.W   D4,D2
0000133E  6D00 007A                698              BLT     .END                    ;SI ESTÁ MÁS A LA IZQUIERDA DE LA PLATAFORMA NO HAY COLISIÓN
00001342  D879 00002A86            699              ADD.W   PWIDTH,D4
00001348  B044                     700              CMP.W    D4,D0
0000134A  6E00 006E                701              BGT     .END                    ;SI ESTÁ MÁS A LA DERECHA NO HAY COLISIÓN
0000134E                           702              ;AQUÍ HAY COLISIÓN, TENEMOS QUE DETECTAR CUAL
0000134E  383C 01D0                703              MOVE.W  #PPOSY,D4
00001352  B244                     704              CMP.W   D4,D1
00001354  6E00 005E                705              BGT     .LADOS
00001358  4479 00002AE2            706              NEG.W   BSPEEDY                 ;COLISIÓN CON LA PARTE DE ARRIBA
0000135E  33C4 00002AEE            707              MOVE.W  D4,BPOSY2
00001364  0444 000A                708              SUB.W   #BDIAMET,D4
00001368  33C4 00002AEC            709              MOVE.W  D4,BPOSY1       
0000136E                           710  .PLRXMIDDLE 
0000136E  3839 00002A86            711              MOVE.W  PWIDTH,D4
00001374  E24C                     712              LSR.W   #1,D4
00001376  3A39 00002A84            713              MOVE.W  PPOSX,D5 
0000137C  DA44                     714              ADD.W   D4,D5                   ;D5 = CENTRO PLATAFORMA
0000137E  BA42                     715              CMP.W   D2,D5                   ;CENTRO - POS PEL
00001380  6B00 001A                716              BMI     .PLRXRIGHT
00001384  3839 00002AE0            717              MOVE.W  BSPEEDX,D4
0000138A  6B00 002E                718              BMI     .END
0000138E                           719                                           
0000138E  4444                     720              NEG.W   D4
00001390  33C4 00002AE0            721              MOVE.W  D4,BSPEEDX
00001396  4EF9 000013BA            722              JMP     .END
0000139C                           723              
0000139C                           724  .PLRXRIGHT             
0000139C  3839 00002AE0            725              MOVE.W  BSPEEDX,D4
000013A2  6A00 0016                726              BPL     .END              ;SI ES POSITIVO SOLO NEGAMOS Y
000013A6  4444                     727              NEG.W   D4
000013A8  33C4 00002AE0            728              MOVE.W  D4,BSPEEDX
000013AE  4EF9 000013BA            729              JMP     .END
000013B4                           730  
000013B4  4479 00002AE0            731  .LADOS      NEG.W   BSPEEDX                 ;COLISIÓN CON LOS LADOS
000013BA  4CDF 0030                732  .END        MOVEM.L (A7)+,D4-D5 
000013BE  4E75                     733              RTS
000013C0                           734  
000013C0                           735  
000013C0                           736  ; -----------------------------------------------------------------------------
000013C0                           737  UTLCOLBL   
000013C0                           738  ; CHECKS COLLISION WITH BLOCKS
000013C0                           739  ; INPUT    - POSITION BALL \1 X \2 Y TO CHECK COLLISION WITH BLOCK
000013C0                           740  ; OUTPUT   
000013C0                           741  ;           
000013C0                           742  ; MODIFIES - NONE
000013C0                           743  ; -----------------------------------------------------------------------------
000013C0  E849                     744              LSR.W   #4,D1           ;POSY/BLHEIGHT. D1 -> FILA
000013C2  343C 000B                745              MOVE.W  #BLROW-1,D2
000013C6  B441                     746              CMP.W   D1,D2           ;SI ESTÁ POR DEBAJO DE LA ÚLTIMA FILA SALTA DIRECTO A END
000013C8  6D00 00CA                747              BLT     .ENDNOCOLISION                    
000013CC  41F9 00002AF2            748              LEA.L   BLMATRIX,A0
000013D2  D1C1                     749              ADDA.L  D1,A0           ;CARGAMOS EN A0 LA DIRECCIÓN DEL BYTE DE LA FILA
000013D4                           750                                          
000013D4  EC48                     751              LSR.W   #6,D0           ;D0 -> COLUMNA 
000013D6  363C 0007                752              MOVE.W  #BLCOL-1,D3                           
000013DA  9640                     753              SUB.W   D0,D3           ;D3 -> COLUMNA (DESDE DRCHA) DONDE ESTÁ LA BOLA
000013DC  3E03                     754              MOVE.W  D3,D7
000013DE  6A00 0004                755              BPL     .TEST  
000013E2  4283                     756              CLR.L   D3              ;POR SI SALE NEGATIVO LA REAJUSTAMOS
000013E4                           757  .TEST
000013E4  0710                     758              BTST.B  D3,(A0)         ;MIRAMOS EL BIT DONDE ESTA 
000013E6  6700 00AC                759              BEQ     .ENDNOCOLISION  ; SALTA SI EN ESA POSICION YA HABIA UN 0
000013EA                           760  
000013EA                           761  .IZQ        
000013EA  EC4D                     762              LSR.W   #6,D5           ;D5 -> COLUMNA
000013EC  343C 0007                763              MOVE.W  #BLCOL-1,D2
000013F0  9445                     764              SUB.W   D5,D2           ;D2 -> COLUMNA (DESDE DERECHA) DONDE ESTA EL PUNTO CONTRARIO (SI 1 ENTONCES 2)
000013F2  B443                     765              CMP     D3,D2                  
000013F4  6F00 000E                766              BLE     .CHOQUEDOBLE
000013F8  4479 00002AE0            767              NEG.W   BSPEEDX
000013FE                           768              
000013FE  4EF9 0000145C            769              JMP     .ENDCOLISION    ;  (|)______|  COLISION DELADO IZQUIERDO COLISIONANDO POR LA IZQ DEL NLOQUE 
00001404                           770              
00001404                           771  
00001404                           772  
00001404                           773  
00001404                           774  .CHOQUEDOBLE                        ;SI ESTA EN MEDIO DEL BLOQUE  |___()___| COLISION EN MEDIO
00001404                           775                                      ;COMPARAMOS SI LE HA DADO A DOS A LA VEZ |______(|)______|
00001404  B443                     776              CMP     D3,D2
00001406  6700 0036                777              BEQ     .ENMEDIO
0000140A                           778              
0000140A  5A40                     779              ADDI.W  #BDIAMET/2,D0
0000140C  EC48                     780              LSR.W   #6,D0
0000140E  3A3C 0007                781              MOVE.W  #BLCOL-1,D5     ;D1 -> COLUMNA DONDE SE ENCUENTRA EL PUNTO MEDIO DE LA BOLA                         
00001412                           782              
00001412  9A40                     783              SUB.W   D0,D5
00001414  6A00 0004                784              BPL     .TEST2  
00001418  4285                     785              CLR.L   D5              ;POR SI SALE NEGATIVO LA REAJUSTAMOS
0000141A                           786  .TEST2
0000141A                           787              
0000141A  0B10                     788              BTST.B  D5,(A0)         ;MIRAMOS EL BIT DONDE ESTA 
0000141C  6700 0020                789              BEQ     .ENMEDIO
00001420  BE45                     790              CMP     D5,D7
00001422  6700 000E                791              BEQ     .CHOQUEDOBLEIZQ
00001426  4479 00002AE2            792              NEG.W   BSPEEDY
0000142C  4EF9 0000145C            793              JMP     .ENDCOLISION
00001432                           794  .CHOQUEDOBLEIZQ
00001432  4479 00002AE0            795              NEG.W   BSPEEDX
00001438  4EF9 0000145C            796              JMP     .ENDCOLISION
0000143E                           797  
0000143E                           798              
0000143E                           799  .ENMEDIO            
0000143E                           800              ;COMPARAMOS SI LA PARTE CONTRARIA ESTA DENTO DEL BLOQUE O FUERA
0000143E  B443                     801              CMP     D3,D2
00001440  6D00 000E                802              BLT     .DERECHA
00001444  4479 00002AE2            803              NEG.W   BSPEEDY
0000144A  4EF9 0000145C            804              JMP     .ENDCOLISION
00001450                           805  .DERECHA
00001450  4479 00002AE0            806              NEG.W   BSPEEDX
00001456  4EF9 0000145C            807              JMP     .ENDCOLISION
0000145C                           808              
0000145C                           809  
0000145C                           810  .ENDCOLISION
0000145C  383C 0001                811              MOVE.W  #1,D4
00001460  0790                     812              BCLR    D3,(A0)
00001462  5379 00002AF0            813              SUB.W   #1,BLCOUNTER       
00001468  0679 0064 00002A8A       814              ADD.W   #100,PSCORE
00001470                           815m             UTLSNDST
00001470                           816m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001470                           817m ; INPUT    - NONE 
00001470                           818m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001470                           819m ; MODIFIES - D0,A1
00001470                           820m ; -----------------------------------------------------------------------------
00001478                           821m             UTLSNDS  .SOUND,#1
00001478                           822m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001478                           823m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001478                           824m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001478                           825m ; MODIFIES - D0,A1
00001478                           826m ; -----------------------------------------------------------------------------
0000148E  5379 00002AF0            827              SUB.W   #1,BLCOUNTER
00001494                           828  .ENDNOCOLISION
00001494  4E75                     829              RTS
00001496= 626C6F63 6B732E77 ...    830  .SOUND      DC.L    'blocks.wav',0
000014A6                           831  ;---------------------------------------------------------------------------------
000014A6                           832  UTLSCTRLP
000014A6  48E7 FC40                833              MOVEM.L D0-D5/A1,-(A7)    
000014AA                           834              ;DIBUJA LA BARRA DE SEPARACIÓN
000014AA  223C 00FFFFFF            835              MOVE.L  #$00FFFFFF,D1  ;COLOR
000014B0  103C 0050                836              MOVE.B  #80,D0
000014B4  4E4F                     837              TRAP    #15
000014B6                           838              
000014B6  C2BC 00FFFFFF            839              AND.L   #$00FFFFFF,D1  ;COLOR
000014BC  103C 0051                840              MOVE.B  #81,D0
000014C0  4E4F                     841              TRAP    #15
000014C2                           842              
000014C2  103C 0057                843              MOVE.B  #87,D0
000014C6  323C 0201                844              MOVE.W  #SCRCTRL,D1
000014CA  363C 0206                845              MOVE.W  #SCRCTRL+SCRLWIDTH,D3
000014CE  4282                     846              CLR.L   D2
000014D0  383C 01E0                847              MOVE.W  #SCRHEIGH,D4
000014D4  4E4F                     848              TRAP    #15
000014D6                           849              
000014D6                           850              ;SCORE
000014D6                           851m             UTLLOCT PSCORETX,PSCORETY            
000014D6                           852m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000014D6                           853m ; INPUT    - PSCORETX X, PSCORETY Y
000014D6                           854m ; OUTPUT   - NONE
000014D6                           855m ; MODIFIES - D0,D1
000014D6                           856m ; -----------------------------------------------------------------------------
000014E0                           857m             UTLSIZC #PSCORECOL,TXMSIZE           ;PENCOLOR Y TAMAÑO
000014E0                           858m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
000014E0                           859m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR TXMSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
000014E0                           860m ; OUTPUT   - NONE
000014E0                           861m ; MODIFIES - D0,D1
000014E0                           862m ; -----------------------------------------------------------------------------
000014F2                           863m             UTLSFIL #$00000000
000014F2                           864m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000014F2                           865m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
000014F2                           866m ; OUTPUT   - NONE
000014F2                           867m ; MODIFIES - D0,D1
000014F2                           868m ; -----------------------------------------------------------------------------
000014FA  43F9 00001512            869              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
00001500  3239 00002A8A            870              MOVE.W  PSCORE,D1
00001506  103C 0011                871              MOVE.B  #17,D0
0000150A  4E4F                     872              TRAP    #15
0000150C                           873              
0000150C  4CDF 023F                874              MOVEM.L (A7)+,D0-D5/A1
00001510  4E75                     875              RTS   
00001512= 53 43 4F 52 45 3A ...    876  .TXTSCORE   DC.B    'SCORE: ',0
0000151A                           877              DS.W    0
0000151A                           878  
0000151A                           879  ;-----------------------------------------------------------------------------
0000151A                           880  UTLREADFILE  
0000151A  48E7 E040                881              MOVEM.L D0-D2/A1,-(A7)
0000151E  303C 0032                882              MOVE.W  #50,D0                  ;CIERRA TODOS LOS FICHEROS
00001522  4E4F                     883              TRAP    #15
00001524                           884              
00001524  43F8 11DC                885              LEA     FILE,A1
00001528  103C 0033                886              MOVE.B  #51,D0
0000152C  4E4F                     887              TRAP    #15                     ;ABRE UN FICHERO EXISTENTE, D1 = FILE ID
0000152E                           888  
0000152E                           889              
0000152E  43F9 00002B04            890              LEA.L   RNKTABLE,A1
00001534  7464                     891              MOVE.L  #100,D2                 ;BYTES QUE LEE
00001536  103C 0035                892              MOVE.B  #53,D0
0000153A  4E4F                     893              TRAP    #15                     ;LEE DEL FICHERO
0000153C  23C2 00002AFE            894              MOVE.L  D2,ERRORFILE
00001542                           895              ;GUARDA EN EL BUFFER LO QUE HA LEIDO
00001542  103C 0038                896              MOVE.B  #56,D0
00001546  4E4F                     897              TRAP    #15                     ;CIERRA EL FICHERO
00001548  4CDF 0207                898              MOVEM.L (A7)+,D0-D2/A1
0000154C  4E75                     899              RTS
0000154E                           900  ;----------------------------------------------------------------------
0000154E                           901  UTLREADRNK
0000154E  48E7 FC40                902              MOVEM.L D0-D5/A1,-(A7)
00001552                           903              ; D4 = EN QUE FILA ESTAMOS      
00001552  4284                     904              CLR.L   D4
00001554  3A3C 0009                905              MOVE.W  #9,D5
00001558  2239 00002AFE            906              MOVE.L  ERRORFILE,D1
0000155E  B27C 0040                907              CMP     #64,D1
00001562  6700 004C                908              BEQ     .END
00001566                           909            
00001566                           910  .LOOP
00001566  43F9 00002B04            911              LEA.L   RNKTABLE,A1       1000   
0000156C  3004                     912              MOVE.W  D4,D0                
0000156E  C0FC 000A                913              MULU.W  #10,D0                  ;PARA LEER EL NOMBRE
00001572                           914              
00001572  D3C0                     915              ADDA.L  D0,A1                   ;A0 = RNKTABLE + 10*FILA
00001574                           916              
00001574  103C 000B                917              MOVE.B  #11,D0
00001578  323C 1414                918              MOVE.W  #20<<8|20,D1
0000157C  4E4F                     919              TRAP    #15
0000157E                           920              ;PRIMERO LEEMOS SCORE  (|SCORE|      NAME      |)
0000157E  103C 0003                921              MOVE.B  #3,D0 
00001582  4281                     922              CLR.L   D1                  
00001584  3211                     923              MOVE.W  (A1),D1
00001586  0481 00003030            924              SUB.L   #12336,D1
0000158C  4E4F                     925              TRAP    #15                     ;AQUI EN TEORIA VISUALIZA EL TEXTO, el score
0000158E                           926            
0000158E                           927  
0000158E  5489                     928              ADDA.L  #2,A1                   ;PARA LEER EL NOMBRE (8B)
00001590  103C 000B                929              MOVE.B  #11,D0
00001594  323C 1E1E                930              MOVE.W  #30<<8|30,D1
00001598  4E4F                     931              TRAP    #15
0000159A                           932              ;PRIMERO LEEMOS SCORE  (|SCORE|      NAME      |)
0000159A  103C 0001                933              MOVE.B  #1,D0                   
0000159E  323C 0008                934              MOVE.W  #8,D1                   ;8 BYTES QUE TIENE QUE IMPRIMIR
000015A2  4E4F                     935              TRAP    #15                     ;AQUI EN TEORIA VISUALIZA EL TEXTO, el score
000015A4                           936            
000015A4  5244                     937              ADDQ.W   #1,D4
000015A6  51CD FFBE                938              DBRA    D5,.LOOP
000015AA  33C4 00002B02            939              MOVE.W  D4,POSRNK
000015B0                           940  .END
000015B0  4CDF 023F                941              MOVEM.L (A7)+,D0-D5/A1
000015B4  4E75                     942              RTS
000015B6                           943  ;--------------------------------------------------------------------------------          
000015B6                           944  UTLWRRNK    
000015B6  48E7 C040                945              MOVEM.L D0-D1/A1,-(A7)
000015BA  43F9 00002B04            946              LEA.L   RNKTABLE,A1
000015C0  3239 00002B02            947              MOVE.W  POSRNK,D1
000015C6  B27C 000B                948              CMP     #11,D1
000015CA  6700 0008                949              BEQ     .OCUPADO
000015CE  C2FC 000A                950              MULU.W  #10,D1
000015D2  D3C1                     951              ADDA.L  D1,A1
000015D4                           952              
000015D4                           953  .OCUPADO
000015D4                           954              ;A1 = TIENE LA PRIMERA POSICION DONDE ESCRIBE (LA MAS VIEJA)
000015D4  32B9 00002A8A            955              MOVE.W  PSCORE,(A1)
000015DA  5489                     956              ADDA.L  #2,A1
000015DC  12B9 00002A90            957              MOVE.B  PNAME,(A1)
000015E2                           958              
000015E2  4CDF 0203                959              MOVEM.L (A7)+,D0-D1/A1
000015E6  4E75                     960              RTS
000015E8                           961  ;--------------------------------------------------------------------------------- 
000015E8                           962  UTLWRFILE
000015E8  48E7 E040                963              MOVEM.L D0-D2/A1,-(A7)
000015EC  103C 0032                964              MOVE.B  #50,D0  ;CERRAMOS TODOS LOS FICHERO
000015F0  4E4F                     965              TRAP    #15
000015F2                           966              
000015F2  43F8 11DC                967              LEA.L   FILE,A1                 ;ABRE NUESTRO FICHERO
000015F6  103C 0033                968              MOVE.B  #51,D0                  
000015FA  4E4F                     969              TRAP    #15                     ;DEVUELVE EL ID DE FICHERO EN D1
000015FC                           970              
000015FC  43F9 00002B04            971              LEA.L   RNKTABLE,A1                ;escribimos en el fichero 
00001602                           972              ;D1 YA TINENE EL ID DEL FICHERO
00001602  343C 0064                973              MOVE.W  #100,D2              
00001606  5242                     974              ADD.W   #1,D2                   ;PARA EL CARACTER NULL
00001608  103C 0036                975              MOVE.B  #54,D0
0000160C  4E4F                     976              TRAP    #15
0000160E                           977             
0000160E  103C 0038                978              MOVE.B  #56,D0                  ;cerramos fichero
00001612  4E4F                     979              TRAP    #15
00001614  4CDF 0207                980              MOVEM.L (A7)+,D0-D2/A1
00001618  4E75                     981              RTS
00001618  4E75                     982  -------------------- end include --------------------
0000161A                           983              INCLUDE "PLAYER.X68"            ;EL JUGADOR
0000161A                           984  ; -----------------------------------------------------------------------------
0000161A                           985  ;           PLAYER
0000161A                           986  ; -----------------------------------------------------------------------------
0000161A                           987  PLRINIT
0000161A                           988  ; INITIALIZES THE PLAYER
0000161A                           989  ; INPUT    - NONE
0000161A                           990  ; OUTPUT   - NONE
0000161A                           991  ; MODIFIES - NONE
0000161A                           992  ; -----------------------------------------------------------------------------
0000161A                           993              
0000161A  33FC 00E0 00002A84       994              MOVE.W  #PINPOSX1,PPOSX
00001622  33FC 0040 00002A86       995              MOVE.W  #PINWIDTH1,PWIDTH
0000162A                           996              
0000162A                           997            
0000162A  4E75                     998              RTS
0000162C                           999              
0000162C                          1000  ; -----------------------------------------------------------------------------
0000162C                          1001  PLRREV
0000162C                          1002  ; PLAYER REVIVES, INITIALIZE POSITION
0000162C                          1003  ; INPUT    - NONE
0000162C                          1004  ; OUTPUT   - NONE
0000162C                          1005  ; MODIFIES - NONE
0000162C                          1006  ; -----------------------------------------------------------------------------
0000162C                          1007              ;DEBERIAMOS CALCULAR LA POSICION NUEVA A PARTIR DE LA WIDTH QUE NOS PASEN
0000162C                          1008              
0000162C  33FC 00E0 00002A84      1009              MOVE.W  #PINPOSX1,PPOSX
00001634  33FC 0040 00002A86      1010              MOVE.W  #PINWIDTH1,PWIDTH
0000163C                          1011            
0000163C  4E75                    1012              RTS
0000163E                          1013  
0000163E                          1014  ; -----------------------------------------------------------------------------
0000163E                          1015  
0000163E                          1016  PLRUPD      
0000163E  48E7 6000               1017              MOVEM.L D1-D2,-(A7)
00001642  1239 00001DEE           1018              MOVE.B  KBDVAL,D1  
00001648  E219                    1019              ROR.B   #1,D1                   ;IZQUIERDA
0000164A  6400 0016               1020              BCC     .RIGHTKEY               ;CUANDO C = 0
0000164E                          1021              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
0000164E  3439 00002A84           1022              MOVE.W  PPOSX,D2
00001654  B47C 0000               1023              CMP.W    #0,D2
00001658  6F00 0008               1024              BLE     .RIGHTKEY
0000165C  5179 00002A84           1025              SUB.W   #PMOVE,(PPOSX)
00001662                          1026  .RIGHTKEY
00001662  E209                    1027              LSR.B   #1,D1                   
00001664  E219                    1028              ROR.B   #1,D1                   
00001666  6400 001C               1029              BCC     .END
0000166A                          1030              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
0000166A  3439 00002A84           1031              MOVE.W  PPOSX,D2
00001670  D479 00002A86           1032              ADD.W   PWIDTH,D2 
00001676                          1033  
00001676  B47C 01FC               1034              CMP.W    #SCRCTRL-SCRLWIDTH,D2
0000167A  6C00 0008               1035              BGE     .END
0000167E  5079 00002A84           1036              ADD.W   #PMOVE,PPOSX
00001684                          1037  .END
00001684  4CDF 0006               1038              MOVEM.L (A7)+,D1-D2
00001688  4E75                    1039              RTS
0000168A                          1040  
0000168A                          1041  
0000168A                          1042  PPLOT
0000168A  48E7 FC40               1043              MOVEM.L  D0-D5/A1,-(A7)
0000168E                          1044              ;PLOT THE PLATAFORM
0000168E                          1045m             UTLSPEN #PCOLOR 
0000168E                          1046m ; WRAPPER FOR SET PEN TRAP 15 TASK.
0000168E                          1047m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
0000168E                          1048m ; OUTPUT   - NONE
0000168E                          1049m ; MODIFIES - D0,D1
0000168E                          1050m ; -----------------------------------------------------------------------------
0000169A                          1051m             UTLSFIL #PCOLOR
0000169A                          1052m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000169A                          1053m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
0000169A                          1054m ; OUTPUT   - NONE
0000169A                          1055m ; MODIFIES - D0,D1
0000169A                          1056m ; -----------------------------------------------------------------------------
000016A6  3239 00002A84           1057              MOVE.W  PPOSX,D1
000016AC  343C 01D0               1058              MOVE.W  #PPOSY,D2                    
000016B0  3639 00002A84           1059              MOVE.W  PPOSX,D3
000016B6  3839 00002A86           1060              MOVE.W  PWIDTH,D4 
000016BC  D644                    1061              ADD.W   D4,D3
000016BE  383C 01DC               1062              MOVE.W  #PPOSY+PHEIGHT,D4
000016C2  303C 0057               1063              MOVE.W  #87,D0
000016C6  4E4F                    1064              TRAP    #15
000016C8                          1065              
000016C8                          1066              ;PLOT LIFE
000016C8  3A39 00002A88           1067              MOVE.W  PLIVES,D5
000016CE  6700 0076               1068              BEQ     .END
000016D2                          1069m             UTLSPEN #$00FFFFFF  
000016D2                          1070m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000016D2                          1071m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
000016D2                          1072m ; OUTPUT   - NONE
000016D2                          1073m ; MODIFIES - D0,D1
000016D2                          1074m ; -----------------------------------------------------------------------------
000016DE                          1075m             UTLSFIL #LIVECOLOR
000016DE                          1076m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000016DE                          1077m ; INPUT    - #LIVECOLOR COLOR IN FORMAT $00BBGGRR
000016DE                          1078m ; OUTPUT   - NONE
000016DE                          1079m ; MODIFIES - D0,D1
000016DE                          1080m ; -----------------------------------------------------------------------------
000016EA  5345                    1081              SUB.W   #1,D5             
000016EC  103C 0057               1082              MOVE.B  #87,D0
000016F0  323C 0215               1083              MOVE.W  #LIVEPOSX,D1
000016F4  3601                    1084              MOVE.W  D1,D3
000016F6  0643 0040               1085              ADD.W   #LIVEWIDTH,D3
000016FA  343C 001E               1086              MOVE.W  #LIVEPOSY,D2
000016FE  3802                    1087              MOVE.W  D2,D4
00001700  0644 0010               1088              ADD.W   #LIVEHEIGHT,D4
00001704                          1089  .LOOP           
00001704  4E4F                    1090              TRAP    #15
00001706  3203                    1091              MOVE.W  D3,D1
00001708  0643 0040               1092              ADD.W   #LIVEWIDTH,D3
0000170C  51CD FFF6               1093              DBRA    D5,.LOOP
00001710                          1094              
00001710                          1095              ;PLOT SCORE
00001710                          1096m             UTLLOCT PSCORETX,PSCORETY            
00001710                          1097m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001710                          1098m ; INPUT    - PSCORETX X, PSCORETY Y
00001710                          1099m ; OUTPUT   - NONE
00001710                          1100m ; MODIFIES - D0,D1
00001710                          1101m ; -----------------------------------------------------------------------------
0000171A                          1102m             UTLSIZC #PSCORECOL,TXMSIZE           ;PENCOLOR Y TAMAÑO
0000171A                          1103m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
0000171A                          1104m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR TXMSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
0000171A                          1105m ; OUTPUT   - NONE
0000171A                          1106m ; MODIFIES - D0,D1
0000171A                          1107m ; -----------------------------------------------------------------------------
0000172C                          1108m             UTLSFIL #$00000000
0000172C                          1109m ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000172C                          1110m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
0000172C                          1111m ; OUTPUT   - NONE
0000172C                          1112m ; MODIFIES - D0,D1
0000172C                          1113m ; -----------------------------------------------------------------------------
00001734  43F9 0000174C           1114              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
0000173A  3239 00002A8A           1115              MOVE.W  PSCORE,D1
00001740  103C 0011               1116              MOVE.B  #17,D0
00001744  4E4F                    1117              TRAP    #15
00001746                          1118              
00001746                          1119  .END            
00001746  4CDF 023F               1120              MOVEM.L (A7)+,D0-D5/A1
0000174A  4E75                    1121              RTS
0000174C                          1122              
0000174C= 53 43 4F 52 45 3A ...   1123  .TXTSCORE   DC.B    'SCORE: ',0
00001754                          1124              DS.W    0
00001754                          1125  
00001754                          1126  
00001754                          1127  
00001754                          1128  
00001754                          1129  
00001754                          1130  
00001754                          1131  
00001754                          1132  
00001754                          1133  
00001754                          1134  
00001754                          1135  
00001754                          1136  
00001754                          1137  
00001754                          1138  
00001754                          1139  
00001754                          1140  
00001754                          1141  
00001754                          1142  -------------------- end include --------------------
00001754                          1143              INCLUDE "STATES.X68"            ;
00001754                          1144  ; =============================================================================
00001754                          1145  ; GAME STATE MANAGEMENT
00001754                          1146  ; =============================================================================
00001754                          1147  
00001754                          1148  ; -----------------------------------------------------------------------------
00001754                          1149  STAINIT
00001754                          1150  ; INITALIZES THE STATE MANAGER
00001754                          1151  ; INPUT    - NONE
00001754                          1152  ; OUTPUT   - NONE
00001754                          1153  ; MODIFIES - NONE
00001754                          1154  ; -----------------------------------------------------------------------------
00001754  33FC FFFF 00002A80      1155              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
0000175C                          1156             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
0000175C  33FC 0000 00002A82      1157              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
00001764  4E75                    1158              RTS
00001766                          1159  
00001766                          1160  ; -----------------------------------------------------------------------------
00001766                          1161  STAUPD
00001766                          1162  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
00001766                          1163  ; INPUT    - NONE
00001766                          1164  ; OUTPUT   - NONE
00001766                          1165  ; MODIFIES - NONE
00001766                          1166  ; -----------------------------------------------------------------------------
00001766  48E7 8080               1167              MOVEM.L D0/A0,-(A7)
0000176A  4280                    1168              CLR.L   D0
0000176C  3039 00002A82           1169              MOVE.W  (STANEXT),D0
00001772  B079 00002A80           1170              CMP.W   (STACUR),D0
00001778  6700 0012               1171              BEQ     .DOUPD
0000177C  33C0 00002A80           1172              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
00001782  E588                    1173              LSL.L   #2,D0
00001784  2040                    1174              MOVE.L  D0,A0
00001786  2068 17A4               1175              MOVE.L  .INITBL(A0),A0
0000178A  4E90                    1176              JSR     (A0)
0000178C  4280                    1177  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
0000178E  3039 00002A80           1178              MOVE.W  (STACUR),D0
00001794  E588                    1179              LSL.L   #2,D0
00001796  2040                    1180              MOVE.L  D0,A0
00001798  2068 17B4               1181              MOVE.L  .UPDTBL(A0),A0
0000179C  4E90                    1182              JSR     (A0)
0000179E  4CDF 0101               1183              MOVEM.L (A7)+,D0/A0
000017A2  4E75                    1184              RTS
000017A4= 00001880 000017FC ...   1185  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTYP,STAEMPTYG ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
000017B4                          1186                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
000017B4                          1187                                               ;EL 2 ES NO HACER NADA 
000017B4= 000018B6 00001826 ...   1188  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAGOVRU
000017C4                          1189                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
000017C4                          1190                                              ;EL 2 HACE QUE SE UPDATE 
000017C4                          1191  
000017C4                          1192  ; -----------------------------------------------------------------------------
000017C4                          1193  STAPLOT
000017C4                          1194  ; PERFORMS STATE PLOT
000017C4                          1195  ; INPUT    - NONE
000017C4                          1196  ; OUTPUT   - NONE
000017C4                          1197  ; MODIFIES - NONE
000017C4                          1198  ; -----------------------------------------------------------------------------
000017C4  48E7 8080               1199              MOVEM.L D0/A0,-(A7)
000017C8  4280                    1200              CLR.L   D0
000017CA  3039 00002A80           1201              MOVE.W  (STACUR),D0
000017D0  E588                    1202              LSL.L   #2,D0
000017D2  2040                    1203              MOVE.L  D0,A0
000017D4  2068 17E0               1204              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
000017D8  4E90                    1205              JSR     (A0)
000017DA  4CDF 0101               1206              MOVEM.L (A7)+,D0/A0
000017DE  4E75                    1207              RTS
000017E0= 000018F0 0000185E ...   1208  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAGOVRP
000017F0                          1209                             ;SPACE      NIVEL1   NIVEL2    NIVEL3   
000017F0                          1210  
000017F0                          1211  ; -----------------------------------------------------------------------------
000017F0                          1212  STAEMPTYP
000017F0                          1213  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
000017F0                          1214  ; INPUT    - NONE
000017F0                          1215  ; OUTPUT   - NONE
000017F0                          1216  ; MODIFIES - NONE
000017F0                          1217  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
000017F0                          1218  ; -----------------------------------------------------------------------------
000017F0  4E75                    1219              RTS
000017F2                          1220  ; -----------------------------------------------------------------------------
000017F2                          1221  STAEMPTYG
000017F2                          1222  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
000017F2                          1223  ; INPUT    - NONE
000017F2                          1224  ; OUTPUT   - NONE
000017F2                          1225  ; MODIFIES - NONE
000017F2                          1226  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
000017F2                          1227  ; -----------------------------------------------------------------------------
000017F2  4EB8 15B6               1228              JSR     UTLWRRNK                ;ESCRIBE EN EL TABLE
000017F6  4EB8 15E8               1229              JSR     UTLWRFILE               ;ESCRIBIMOS EN EL FICHERO
000017FA  4E75                    1230              RTS
000017FC                          1231  
000017FC                          1232  ; -----------------------------------------------------------------------------
000017FC                          1233  STAPLAYI    ;DEL NIVEL1, COMIENZO
000017FC                          1234  
000017FC                          1235  ; PLAY STATE INITIALIZATION.
000017FC                          1236  ; INPUT    - NONE
000017FC                          1237  ; OUTPUT   - NONE
000017FC                          1238  ; MODIFIES - NONE
000017FC                          1239  ; NOTE     - JUST A WRAPPER FOR PLRINIT
000017FC                          1240  ; -----------------------------------------------------------------------------
000017FC  48E7 FFFE               1241              MOVEM.L D0-D7/A0-A6,-(A7)
00001800  33FC 00FB 00002AE8      1242              MOVE.W  #BINPOSX,BPOSX1
00001808  33FC 01CE 00002AEE      1243              MOVE.W  #BINPOSY,BPOSY2
00001810  33FC 0105 00002AEA      1244              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
00001818  33FC 01C4 00002AEC      1245              MOVE.W  #BINPOSY-BDIAMET,BPOSY1
00001820  4CDF 7FFF               1246              MOVEM.L (A7)+,D0-D7/A0-A6
00001824  4E75                    1247              RTS
00001826                          1248  ; -----------------------------------------------------------------------------
00001826                          1249  STASPACEU
00001826                          1250  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
00001826                          1251  ; INPUT    - NONE
00001826                          1252  ; OUTPUT   - NONE
00001826                          1253  ; MODIFIES - NONE
00001826                          1254  ; -----------------------------------------------------------------------------
00001826  33FC 00E0 00002A84      1255              MOVE.W  #PINPOSX1,PPOSX
0000182E  0839 0004 00001DEF      1256              BTST.B  #KBDBITF1,(KBDEDGE)
00001836  6700 000A               1257              BEQ     .END
0000183A  33FC 0002 00002A82      1258              MOVE.W  #STAPLAY,(STANEXT)
00001842                          1259  .END        
00001842  4E75                    1260              RTS
00001844                          1261                               
00001844                          1262  
00001844                          1263  ; -----------------------------------------------------------------------------
00001844                          1264  STAPLAYU
00001844                          1265  ; PLAY STATE UPDATE
00001844                          1266  ; INPUT    - NONE
00001844                          1267  ; OUTPUT   - NONE
00001844                          1268  ; MODIFIES - NONE
00001844                          1269  ; -----------------------------------------------------------------------------
00001844  48E7 FFFE               1270              MOVEM.L D0-D7/A0-A6,-(A7)
00001848  4EB8 163E               1271              JSR     PLRUPD
0000184C  4EB9 00001AB6           1272              JSR     BUPD    
00001852  4EB9 00001CE8           1273              JSR     BLUPD
00001858                          1274              ;VISUALIZA RNKTABLE
00001858                          1275              
00001858                          1276   
00001858  4CDF 7FFF               1277              MOVEM.L (A7)+,D0-D7/A0-A6          
0000185C  4E75                    1278              RTS
0000185E                          1279  ; -----------------------------------------------------------------------------
0000185E                          1280  STAPLAYP
0000185E                          1281  ; PLAY STATE PLOT
0000185E                          1282  ; INPUT    - NONE
0000185E                          1283  ; OUTPUT   - NONE
0000185E                          1284  ; MODIFIES - NONE
0000185E                          1285  ; -----------------------------------------------------------------------------
0000185E  48E7 FFFE               1286              MOVEM.L D0-D7/A0-A6,-(A7)
00001862  4EB8 154E               1287              JSR     UTLREADRNK
00001866  4EB9 00001D42           1288              JSR     BLPLOT
0000186C  4EB8 168A               1289              JSR     PPLOT
00001870  4EB9 00001B82           1290              JSR     BPLOT
00001876  4EB8 14A6               1291              JSR     UTLSCTRLP
0000187A                          1292              
0000187A  4CDF 7FFF               1293              MOVEM.L (A7)+,D0-D7/A0-A6 
0000187E  4E75                    1294              RTS
00001880                          1295  
00001880                          1296  ; -----------------------------------------------------------------------------
00001880                          1297  STAINTRI                  ;VACIA LA MEMORIA DEL JUEGO
00001880                          1298  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
00001880                          1299  
00001880                          1300  ; INTRO STATE INIT
00001880                          1301  ; INPUT    - NONE
00001880                          1302  ; OUTPUT   - NONE
00001880                          1303  ; MODIFIES - NONE
00001880                          1304  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
00001880                          1305  ; -----------------------------------------------------------------------------
00001880                          1306                ;LEE TODOS LOS DATOS DEL FICHERO Y LO GUARDA EN LA TABLA
00001880  4EB8 151A               1307              JSR     UTLREADFILE
00001884                          1308               ;GUARDA EL NOMBRE EN LA MEMORIA
00001884                          1309m             UTLSVNAME
00001884                          1310m ;SAVES THE NAME OS THE PLAYER
00001884                          1311m ;MAX CARACTERS: 20
00001884                          1312m ; -----------------------------------------------------------------------------
000018B0  4EB8 111A               1313              JSR     DMMINIT
000018B4                          1314              
000018B4  4E75                    1315              RTS
000018B6                          1316  ; -----------------------------------------------------------------------------
000018B6                          1317  STAINTRU
000018B6                          1318  ; INTRO STATE UPDATE
000018B6                          1319  ; INPUT    - NONE
000018B6                          1320  ; OUTPUT   - NONE
000018B6                          1321  ; MODIFIES - NONE
000018B6                          1322  ; -----------------------------------------------------------------------------
000018B6  48E7 FFFE               1323              MOVEM.L D0-D7/A0-A6,-(A7)
000018BA                          1324              
000018BA  0839 0004 00001DEF      1325              BTST.B  #KBDBITF1,(KBDEDGE)
000018C2  6700 0026               1326              BEQ     .END
000018C6                          1327m             UTLSNDST
000018C6                          1328m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
000018C6                          1329m ; INPUT    - NONE 
000018C6                          1330m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000018C6                          1331m ; MODIFIES - D0,A1
000018C6                          1332m ; -----------------------------------------------------------------------------
000018CE  33FC 0001 00002A82      1333              MOVE.W  #STASPACE,(STANEXT)
000018D6  4EB9 00001BC2           1334              JSR     BLINIT
000018DC  33FC 0003 00002A88      1335              MOVE.W  #PINLIVE,PLIVES
000018E4  4279 00002A8A           1336              CLR.W   PSCORE            
000018EA                          1337  .END        
000018EA  4CDF 7FFF               1338              MOVEM.L (A7)+,D0-D7/A0-A6
000018EE  4E75                    1339              RTS
000018F0                          1340  
000018F0                          1341  ; -----------------------------------------------------------------------------
000018F0                          1342  STAINTRP
000018F0                          1343  ; INTRO STATE PLOT
000018F0                          1344  ; INPUT    - NONE
000018F0                          1345  ; OUTPUT   - NONE
000018F0                          1346  ; MODIFIES - NONE
000018F0                          1347  ; -----------------------------------------------------------------------------
000018F0  48E7 E040               1348              MOVEM.L D0-D2/A1,-(A7)
000018F4                          1349              ;TITULO
000018F4                          1350m             UTLLOCT INTTITX,INTTITY      
000018F4                          1351m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000018F4                          1352m ; INPUT    - INTTITX X, INTTITY Y
000018F4                          1353m ; OUTPUT   - NONE
000018F4                          1354m ; MODIFIES - D0,D1
000018F4                          1355m ; -----------------------------------------------------------------------------
000018FE                          1356m             UTLSIZC #INTTITC,TXBSIZE
000018FE                          1357m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
000018FE                          1358m ; INPUT    - #INTTITC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
000018FE                          1359m ; OUTPUT   - NONE
000018FE                          1360m ; MODIFIES - D0,D1
000018FE                          1361m ; -----------------------------------------------------------------------------
00001910  43F9 00001974           1362              LEA     .TITSTR,A1            
00001916  103C 000E               1363              MOVE.B  #14,D0
0000191A  4E4F                    1364              TRAP    #15
0000191C                          1365              
0000191C                          1366              ;START
0000191C                          1367m             UTLLOCT INTPRSX,INTPRSY
0000191C                          1368m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
0000191C                          1369m ; INPUT    - INTPRSX X, INTPRSY Y
0000191C                          1370m ; OUTPUT   - NONE
0000191C                          1371m ; MODIFIES - D0,D1
0000191C                          1372m ; -----------------------------------------------------------------------------
00001926                          1373m             UTLSIZC #INTPRSC,TXSSIZE
00001926                          1374m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001926                          1375m ; INPUT    - #INTPRSC COLOR IN FORMAT $00BBGGRR TXSSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001926                          1376m ; OUTPUT   - NONE
00001926                          1377m ; MODIFIES - D0,D1
00001926                          1378m ; -----------------------------------------------------------------------------
00001938  43F9 00001984           1379              LEA     .PRSSTR,A1
0000193E  103C 000E               1380              MOVE.B  #14,D0
00001942  4E4F                    1381              TRAP    #15
00001944                          1382              
00001944                          1383m             UTLSNDS .SOUND,#1
00001944                          1384m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001944                          1385m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001944                          1386m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001944                          1387m ; MODIFIES - D0,A1
00001944                          1388m ; -----------------------------------------------------------------------------
0000195A                          1389              
0000195A  4CDF 0207               1390              MOVEM.L (A7)+,D0-D2/A1
0000195E  4E75                    1391              RTS
00001960= 73746172 74206C61 ...   1392  .SOUND      DC.L    'start largo.wav',0
00001974= 42 72 65 61 6B 69 ...   1393  .TITSTR     DC.B    'Breaking Blocks',0
00001984= 50 55 53 48 20 46 ...   1394  .PRSSTR     DC.B    'PUSH FIRE TO START',0
00001998                          1395              DS.W    0
00001998                          1396  ; -----------------------------------------------------------------------------
00001998                          1397  STAGOVRU
00001998                          1398  ; GAME OVER STATE UPDATE
00001998                          1399  ; INPUT    - NONE
00001998                          1400  ; OUTPUT   - NONE
00001998                          1401  ; MODIFIES - NONE
00001998                          1402  ; -----------------------------------------------------------------------------
00001998                          1403              ;visualiza el fichero
00001998                          1404m             UTLSPEN #$00FFFFFF
00001998                          1405m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001998                          1406m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
00001998                          1407m ; OUTPUT   - NONE
00001998                          1408m ; MODIFIES - D0,D1
00001998                          1409m ; -----------------------------------------------------------------------------
000019A4                          1410m             UTLSFIL #$00000000
000019A4                          1411m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000019A4                          1412m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
000019A4                          1413m ; OUTPUT   - NONE
000019A4                          1414m ; MODIFIES - D0,D1
000019A4                          1415m ; -----------------------------------------------------------------------------
000019AC  43F9 00002A90           1416              LEA.L   PNAME,A1
000019B2  323C 0215               1417              MOVE.W  #LIVEPOSX,D1
000019B6  343C 00C8               1418              MOVE.W  #200,D2
000019BA  103C 005F               1419              MOVE.B  #95,D0                   ;IMPRIME LA LINEA EN A1
000019BE  4E4F                    1420              TRAP    #15
000019C0                          1421              
000019C0  0839 0004 00001DEF      1422              BTST.B  #KBDBITF1,(KBDEDGE)
000019C8  6700 0012               1423              BEQ     .END
000019CC                          1424m             UTLSNDST
000019CC                          1425m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
000019CC                          1426m ; INPUT    - NONE 
000019CC                          1427m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000019CC                          1428m ; MODIFIES - D0,A1
000019CC                          1429m ; -----------------------------------------------------------------------------
000019D4  33FC 0000 00002A82      1430              MOVE.W  #STAINTR,(STANEXT)
000019DC  4E75                    1431  .END        RTS
000019DE                          1432  
000019DE                          1433  ; -----------------------------------------------------------------------------
000019DE                          1434  STAGOVRP
000019DE                          1435  ; GAME OVER STATE PLOT
000019DE                          1436  ; INPUT    - NONE
000019DE                          1437  ; OUTPUT   - NONE
000019DE                          1438  ; MODIFIES - NONE
000019DE                          1439  ; -----------------------------------------------------------------------------
000019DE                          1440  
000019DE  48E7 E040               1441              MOVEM.L A1/D0-D2,-(A7)
000019E2                          1442              
000019E2                          1443              ;GAME OVER TEXT
000019E2                          1444m             UTLLOCT GOVERX,GOVERY            
000019E2                          1445m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000019E2                          1446m ; INPUT    - GOVERX X, GOVERY Y
000019E2                          1447m ; OUTPUT   - NONE
000019E2                          1448m ; MODIFIES - D0,D1
000019E2                          1449m ; -----------------------------------------------------------------------------
000019EC                          1450m             UTLSIZC #GOVERC,TXBSIZE
000019EC                          1451m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
000019EC                          1452m ; INPUT    - #GOVERC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
000019EC                          1453m ; OUTPUT   - NONE
000019EC                          1454m ; MODIFIES - D0,D1
000019EC                          1455m ; -----------------------------------------------------------------------------
000019FE                          1456m             UTLSFIL #$00000000
000019FE                          1457m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000019FE                          1458m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
000019FE                          1459m ; OUTPUT   - NONE
000019FE                          1460m ; MODIFIES - D0,D1
000019FE                          1461m ; -----------------------------------------------------------------------------
00001A06  43F9 00001A18           1462              LEA     .GOVSTR,A1              ;PONE EL TEXTO
00001A0C  103C 000E               1463              MOVE.B  #14,D0
00001A10  4E4F                    1464              TRAP    #15
00001A12                          1465  
00001A12  4CDF 0207               1466              MOVEM.L (A7)+,A1/D0-D2
00001A16  4E75                    1467              RTS
00001A18= 47 41 4D 45 20 4F ...   1468  .GOVSTR     DC.B    'GAME OVER',0
00001A22                          1469              DS.W    0
00001A22                          1470  
00001A22                          1471  
00001A22                          1472  
00001A22                          1473  
00001A22                          1474  
00001A22                          1475  
00001A22                          1476  
00001A22                          1477  
00001A22                          1478  
00001A22                          1479  
00001A22                          1480  
00001A22                          1481  -------------------- end include --------------------
00001A22                          1482              INCLUDE "BALL.X68"              ;LA PELOTA
00001A22                          1483  ; =============================================================================
00001A22                          1484  ; BALL
00001A22                          1485  ; =============================================================================
00001A22                          1486  ;----------------------------------
00001A22                          1487  BINIT
00001A22                          1488  ;INITIALIZE THE BALL
00001A22                          1489  ;----------------------------------
00001A22  33FC 00FB 00002AE8      1490              MOVE.W  #BINPOSX,BPOSX1
00001A2A  33FC 01CE 00002AEE      1491              MOVE.W  #BINPOSY,BPOSY2
00001A32  33FC 0105 00002AEA      1492              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
00001A3A  33FC 01C4 00002AEC      1493              MOVE.W  #BINPOSY-BDIAMET,BPOSY1
00001A42  33FC FFFD 00002AE0      1494              MOVE.W  #BINSPEED,BSPEEDX
00001A4A  33FC FFFD 00002AE2      1495              MOVE.W  #BINSPEED,BSPEEDY
00001A52  4E75                    1496              RTS
00001A54                          1497  ;----------------------------------         
00001A54                          1498  BNXTLEV
00001A54                          1499  ;INITIALIZE THE BALL TO THE NEXT LEVEL
00001A54                          1500  ;----------------------------------
00001A54                          1501  ;BALL NEXT LEVEL       (NEXT LEVEL)
00001A54  48E7 8000               1502              MOVEM.L D0,-(A7)
00001A58  33FC 00FB 00002AE8      1503              MOVE.W  #BINPOSX,BPOSX1
00001A60  33FC 01CE 00002AEC      1504              MOVE.W  #BINPOSY,BPOSY1
00001A68  33FC 0105 00002AEA      1505              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
00001A70  33FC 0105 00002AEE      1506              MOVE.W  #BINPOSX+BDIAMET,BPOSY2
00001A78  3039 00002AE2           1507              MOVE.W  BSPEEDY,D0
00001A7E  6B00 000E               1508              BMI     .NEGY
00001A82  5279 00002AE2           1509              ADD.W   #1,BSPEEDY
00001A88  4EB9 00001A94           1510              JSR     .X
00001A8E                          1511  .NEGY        
00001A8E  5379 00002AE2           1512              SUB.W   #1,BSPEEDY
00001A94                          1513  .X          
00001A94  3039 00002AE0           1514              MOVE.W  BSPEEDX,D0
00001A9A  6B00 000E               1515              BMI     .NEGX 
00001A9E  5279 00002AE0           1516              ADD.W   #1,BSPEEDX
00001AA4  4EB9 00001AB0           1517              JSR     .END
00001AAA                          1518  .NEGX       
00001AAA  5379 00002AE0           1519              SUB.W   #1,BSPEEDX 
00001AB0                          1520  .END        
00001AB0  4CDF 0001               1521              MOVEM.L (A7)+,D0
00001AB4  4E75                    1522              RTS
00001AB6                          1523        
00001AB6                          1524  ;-----------------------------------------------------------------------------
00001AB6                          1525  BUPD
00001AB6                          1526  ;UPDATES THE BALL
00001AB6                          1527  ;-----------------------------------
00001AB6                          1528  ; UPDATES THE BALL MOTION
00001AB6                          1529  ; INPUT    - NONE 
00001AB6                          1530  ; OUTPUT   - NONE 
00001AB6                          1531  ; MODIFIES - NONE
00001AB6                          1532  ; -----------------------------------------------------------------------------
00001AB6                          1533  
00001AB6  48E7 FF80               1534              MOVEM.L D0-D7/A0,-(A7)
00001ABA                          1535              ;COMPRUEBA COLISIONES CON LAS 4 PAREDES
00001ABA                          1536              ;Y SI PASA LA DE ABAJO LE ELIMINA UNA VIDA, O ENVIA LA PANTALLA GAME OVER
00001ABA  3039 00002AE8           1537              MOVE.W  BPOSX1,D0
00001AC0  3239 00002AEC           1538              MOVE.W  BPOSY1,D1
00001AC6  3439 00002AEA           1539              MOVE.W  BPOSX2,D2
00001ACC  3639 00002AEE           1540              MOVE.W  BPOSY2,D3
00001AD2  4EB8 1216               1541              JSR     UTLCHCOLW               ;COMPRUEBA COLISIÓN CON PAREDES               
00001AD6  4EB8 1328               1542              JSR     UTLCHCOLP               ;COMPRUEBA COLISIÓN CON PLATAFORMA
00001ADA  4284                    1543              CLR.L  D4
00001ADC  3A39 00002AEA           1544              MOVE.W  BPOSX2,D5
00001AE2  3C39 00002AEE           1545              MOVE.W  BPOSY2,D6
00001AE8  4EB8 13C0               1546              JSR     UTLCOLBL
00001AEC                          1547              
00001AEC  B87C 0000               1548              CMP     #0,D4
00001AF0  6600 0066               1549              BNE     .END
00001AF4  3039 00002AEA           1550              MOVE.W  BPOSX2,D0
00001AFA  3239 00002AEC           1551              MOVE.W  BPOSY1,D1
00001B00  3A39 00002AE8           1552              MOVE.W  BPOSX1,D5
00001B06  3C39 00002AEE           1553              MOVE.W  BPOSY2,D6
00001B0C  4EB8 13C0               1554              JSR     UTLCOLBL
00001B10  B87C 0000               1555              CMP     #0,D4
00001B14  6600 0042               1556              BNE     .END
00001B18  3039 00002AE8           1557              MOVE.W  BPOSX1,D0
00001B1E  3239 00002AEE           1558              MOVE.W  BPOSY2,D1
00001B24  3A39 00002AEA           1559              MOVE.W  BPOSX2,D5
00001B2A  3C39 00002AEC           1560              MOVE.W  BPOSY1,D6
00001B30  4EB8 13C0               1561              JSR     UTLCOLBL
00001B34  B87C 0000               1562              CMP     #0,D4
00001B38  6600 001E               1563              BNE     .END
00001B3C  3039 00002AEA           1564              MOVE.W  BPOSX2,D0
00001B42  3239 00002AEE           1565              MOVE.W  BPOSY2,D1
00001B48  3A39 00002AE8           1566              MOVE.W  BPOSX1,D5
00001B4E  3C39 00002AEC           1567              MOVE.W  BPOSY1,D6
00001B54  4EB8 13C0               1568              JSR     UTLCOLBL   
00001B58                          1569  
00001B58                          1570  .END            
00001B58                          1571  
00001B58  3039 00002AE0           1572              MOVE.W  BSPEEDX,D0              ;POSICIÓN = POSICIÓN + VELOCIDAD
00001B5E  D179 00002AE8           1573              ADD.W   D0,BPOSX1
00001B64  D179 00002AEA           1574              ADD.W   D0,BPOSX2
00001B6A                          1575              
00001B6A  3239 00002AE2           1576              MOVE.W  BSPEEDY,D1
00001B70  D379 00002AEC           1577              ADD.W   D1,BPOSY1
00001B76  D379 00002AEE           1578              ADD.W   D1,BPOSY2
00001B7C  4CDF 01FF               1579              MOVEM.L (A7)+,D0-D7/A0
00001B80                          1580              
00001B80  4E75                    1581              RTS
00001B82                          1582  
00001B82                          1583  BPLOT       
00001B82  48E7 F800               1584              MOVEM.L  D0-D4,-(A7)
00001B86                          1585              ;CONTOUR COLOR
00001B86  223C 00FFFFFF           1586              MOVE.L  #BINCOLOR,D1  
00001B8C  103C 0050               1587              MOVE.B  #80,D0
00001B90  4E4F                    1588              TRAP    #15
00001B92                          1589      
00001B92                          1590               ;FILL COLOR
00001B92  223C 00FFFFFF           1591              MOVE.L   #BINCOLOR,D1  
00001B98  103C 0051               1592              MOVE.B  #81,D0
00001B9C  4E4F                    1593              TRAP    #15
00001B9E                          1594   
00001B9E                          1595              ;CIRCLE
00001B9E                          1596  
00001B9E  3239 00002AE8           1597              MOVE.W  BPOSX1,D1
00001BA4  3439 00002AEC           1598              MOVE.W  BPOSY1,D2
00001BAA  3639 00002AEA           1599              MOVE.W  BPOSX2,D3
00001BB0  3839 00002AEE           1600              MOVE.W  BPOSY2,D4
00001BB6  103C 0058               1601              MOVE.B  #88,D0
00001BBA  4E4F                    1602              TRAP    #15
00001BBC                          1603      
00001BBC  4CDF 001F               1604              MOVEM.L  (A7)+,D0-D4
00001BC0                          1605  
00001BC0  4E75                    1606              RTS
00001BC2                          1607  
00001BC2                          1608  
00001BC2                          1609  
00001BC2                          1610  
00001BC2                          1611  
00001BC2                          1612  
00001BC2                          1613  
00001BC2                          1614  
00001BC2                          1615  
00001BC2                          1616  
00001BC2                          1617  
00001BC2                          1618  
00001BC2                          1619  
00001BC2                          1620  
00001BC2                          1621  
00001BC2                          1622  
00001BC2                          1623  
00001BC2                          1624  
00001BC2                          1625  
00001BC2                          1626  
00001BC2                          1627  
00001BC2                          1628  
00001BC2                          1629  
00001BC2                          1630  
00001BC2                          1631  
00001BC2                          1632  
00001BC2                          1633  
00001BC2                          1634  
00001BC2                          1635  -------------------- end include --------------------
00001BC2                          1636              INCLUDE "BLOCKS.X68"           ;BLOQUES
00001BC2                          1637  ;-----------------------------------------------------------
00001BC2                          1638  ;           BLOCKS
00001BC2                          1639  ;-----------------------------------------------------------
00001BC2                          1640    
00001BC2                          1641  BLINIT
00001BC2                          1642  
00001BC2  41F9 00002AF2           1643              LEA.L   BLMATRIX,A0
00001BC8  303C 000B               1644              MOVE.W  #BLROW-1,D0             ;7
00001BCC                          1645  .LOOP       
00001BCC  10FC 00FF               1646              MOVE.B  #%11111111,(A0)+
00001BD0  51C8 FFFA               1647              DBRA    D0,.LOOP
00001BD4                          1648              
00001BD4  33FC 00E0 00002A84      1649              MOVE.W  #PINPOSX1,PPOSX
00001BDC  33FC 0040 00002A86      1650              MOVE.W  #PINWIDTH1,PWIDTH
00001BE4                          1651              
00001BE4  4279 00002AF0           1652              CLR.W   BLCOUNTER
00001BEA  33FC 0001 00002A8E      1653              MOVE.W  #1,LEVEL
00001BF2  33FC FFFD 00002AE0      1654              MOVE.W  #BINSPEED,BSPEEDX
00001BFA  33FC FFFD 00002AE2      1655              MOVE.W  #BINSPEED,BSPEEDY
00001C02  4479 00002AE0           1656              NEG.W   BSPEEDX
00001C08  4EF9 00001D9C           1657              JMP     BLCONBL
00001C0E  4E75                    1658              RTS
00001C10                          1659  BLLEV2           
00001C10                          1660              
00001C10  41F9 00002AF2           1661              LEA.L   BLMATRIX,A0
00001C16                          1662  
00001C16  10FC 00FF               1663              MOVE.B  #%11111111,(A0)+
00001C1A  10FC 0077               1664              MOVE.B  #%01110111,(A0)+
00001C1E  10FC 0077               1665              MOVE.B  #%01110111,(A0)+
00001C22  10FC 0077               1666              MOVE.B  #%01110111,(A0)+
00001C26  10FC 0077               1667              MOVE.B  #%01110111,(A0)+
00001C2A  10FC 0077               1668              MOVE.B  #%01110111,(A0)+
00001C2E  10FC 00BB               1669              MOVE.B  #%10111011,(A0)+
00001C32  10FC 00BB               1670              MOVE.B  #%10111011,(A0)+
00001C36  10FC 00BB               1671              MOVE.B  #%10111011,(A0)+
00001C3A  10FC 00BB               1672              MOVE.B  #%10111011,(A0)+
00001C3E  10FC 00BB               1673              MOVE.B  #%10111011,(A0)+
00001C42  10FC 00FF               1674              MOVE.B  #%11111111,(A0)+ 
00001C46                          1675  
00001C46                          1676  
00001C46  4279 00002AF0           1677              CLR.W   BLCOUNTER
00001C4C                          1678              
00001C4C  33FC 00E4 00002A84      1679              MOVE.W  #PINPOSX2,PPOSX
00001C54  33FC 0038 00002A86      1680              MOVE.W  #PINWIDTH2,PWIDTH
00001C5C                          1681  
00001C5C  303C FFFD               1682              MOVE.W  #BINSPEED,D0
00001C60  5340                    1683              SUBQ.W  #1,D0
00001C62                          1684              
00001C62  33C0 00002AE0           1685              MOVE.W  D0,BSPEEDX
00001C68  33C0 00002AE2           1686              MOVE.W  D0,BSPEEDY
00001C6E  4479 00002AE0           1687              NEG.W   BSPEEDX
00001C74  4EF9 00001D9C           1688              JMP     BLCONBL
00001C7A  4E75                    1689              RTS
00001C7C                          1690              
00001C7C                          1691  BLLEV3              
00001C7C  41F9 00002AF2           1692              LEA.L   BLMATRIX,A0         
00001C82  10FC 00F5               1693              MOVE.B  #%11110101,(A0)+
00001C86  10FC 00A5               1694              MOVE.B  #%10100101,(A0)+
00001C8A  10FC 00A5               1695              MOVE.B  #%10100101,(A0)+
00001C8E  10FC 00A5               1696              MOVE.B  #%10100101,(A0)+
00001C92  10FC 00A5               1697              MOVE.B  #%10100101,(A0)+
00001C96  10FC 00E5               1698              MOVE.B  #%11100101,(A0)+
00001C9A  10FC 00A5               1699              MOVE.B  #%10100101,(A0)+
00001C9E  10FC 00A5               1700              MOVE.B  #%10100101,(A0)+
00001CA2  10FC 00A5               1701              MOVE.B  #%10100101,(A0)+
00001CA6  10FC 00A5               1702              MOVE.B  #%10100101,(A0)+
00001CAA  10FC 00A5               1703              MOVE.B  #%10100101,(A0)+
00001CAE  10FC 00F5               1704              MOVE.B  #%11110101,(A0)+
00001CB2                          1705  
00001CB2                          1706  
00001CB2  4279 00002AF0           1707              CLR.W   BLCOUNTER
00001CB8  33FC 00E8 00002A84      1708              MOVE.W  #PINPOSX3,PPOSX
00001CC0  33FC 0030 00002A86      1709              MOVE.W  #PINWIDTH3,PWIDTH
00001CC8                          1710              
00001CC8  303C FFFD               1711              MOVE.W  #BINSPEED,D0
00001CCC  5540                    1712              SUBQ.W  #2,D0
00001CCE                          1713              
00001CCE  33C0 00002AE0           1714              MOVE.W  D0,BSPEEDX
00001CD4  33C0 00002AE2           1715              MOVE.W  D0,BSPEEDY
00001CDA  4479 00002AE0           1716              NEG.W   BSPEEDX
00001CE0  4EF9 00001D9C           1717              JMP     BLCONBL
00001CE6  4E75                    1718              RTS
00001CE8                          1719              
00001CE8                          1720  BLUPD       
00001CE8  3039 00002AF0           1721              MOVE.W  BLCOUNTER,D0
00001CEE  B07C 0000               1722              CMP     #0,D0                   ;SI NO HAY BLOQUES SALTA
00001CF2  6700 0004               1723              BEQ     .NEXTLEVEL
00001CF6  4E75                    1724              RTS
00001CF8                          1725  .NEXTLEVEL  
00001CF8                          1726              
00001CF8  5279 00002A8E           1727              ADD.W   #1,LEVEL
00001CFE  3239 00002A8E           1728              MOVE.W  LEVEL,D1
00001D04  B27C 0004               1729              CMP     #4,D1
00001D08  6700 002E               1730              BEQ     .WON
00001D0C  B27C 0003               1731              CMP     #3,D1              
00001D10  6700 0010               1732              BEQ     .NIVEL3
00001D14  33FC 0001 00002A82      1733              MOVE.W  #STASPACE,(STANEXT)
00001D1C  4EF8 1C10               1734              JMP     BLLEV2
00001D20  4E75                    1735              RTS
00001D22                          1736  .NIVEL3
00001D22  B27C 0003               1737              CMP.W   #3,D1
00001D26  6600 0010               1738              BNE     .WON
00001D2A  33FC 0001 00002A82      1739              MOVE.W  #STASPACE,STANEXT
00001D32  4EF8 1C7C               1740              JMP     BLLEV3 
00001D36  4E75                    1741              RTS
00001D38                          1742  .WON        
00001D38  33FC 0003 00002A82      1743              MOVE.W  #STAGOVR,STANEXT  
00001D40  4E75                    1744              RTS          
00001D42                          1745  
00001D42                          1746  BLPLOT
00001D42  103C 0050               1747              MOVE.B  #80,D0                  ;SET PEN COLOR
00001D46  7200                    1748              MOVE.L  #0,D1
00001D48  4E4F                    1749              TRAP    #15
00001D4A                          1750              
00001D4A  4242                    1751              CLR.W   D2                      ;UPPER Y
00001D4C  383C 0010               1752              MOVE.W  #BLHEIGHT,D4            ;DOWN Y
00001D50  41F8 11E6               1753              LEA     COLORS,A0
00001D54                          1754              
00001D54  3A3C 000B               1755              MOVE.W  #BLROW-1,D5    ;DBRA
00001D58  227C 00000000           1756              MOVE.L  #0,A1                      ;PARA SABER CUAL PONER D6= FILA
00001D5E                          1757              
00001D5E                          1758  .LOOP2                                      ;BUCLE DE FILAS
00001D5E                          1759   
00001D5E  103C 0051               1760              MOVE.B  #81,D0                  ;SET COLOR
00001D62  2218                    1761              MOVE.L  (A0)+,D1
00001D64  4E4F                    1762              TRAP    #15
00001D66                          1763              
00001D66  363C 0040               1764              MOVE.W  #BLWIDTH,D3             ;RIGHT X
00001D6A  4241                    1765              CLR.W   D1                      ;LEFT X
00001D6C                          1766              
00001D6C  3F05                    1767              MOVE.W  D5,-(A7)                ;GUARDO EL VALOR DEL DECREMENTO DE LOOP2
00001D6E  3A3C 0007               1768              MOVE.W  #BLCOL-1,D5
00001D72  1C29 2AF2               1769              MOVE.B  BLMATRIX(A1),D6
00001D76                          1770  .LOOP1                                      ; BUCLE COLUMNAS
00001D76  E31E                    1771              ROL.B   #1,D6
00001D78  6400 0008               1772              BCC     .SALTO                  ; SALTA SI CARRY = 0
00001D7C                          1773              
00001D7C  103C 0057               1774              MOVE.B  #87,D0                  ; DIBUJAMOS EL CUADRADO
00001D80  4E4F                    1775              TRAP    #15
00001D82                          1776  .SALTO
00001D82  3203                    1777              MOVE.W  D3,D1
00001D84  0643 0040               1778              ADD.W   #BLWIDTH, D3
00001D88                          1779  ;;;
00001D88  51CD FFEC               1780              DBRA    D5,.LOOP1 
00001D8C  3A1F                    1781              MOVE.W  (A7)+,D5              
00001D8E                          1782  
00001D8E  5249                    1783              ADDA.W  #1,A1
00001D90  3404                    1784              MOVE.W  D4,D2
00001D92  0644 0010               1785              ADD.W   #BLHEIGHT,D4
00001D96  51CD FFC6               1786              DBRA    D5,.LOOP2
00001D9A  4E75                    1787              RTS
00001D9C                          1788  
00001D9C                          1789  BLCONBL
00001D9C                          1790              
00001D9C  3A3C 000B               1791              MOVE.W  #BLROW-1,D5    ;DBRA FILAS
00001DA0  227C 00000000           1792              MOVE.L  #0,A1          ;PARA SABER CUAL PONER D6= FILA
00001DA6                          1793              
00001DA6                          1794  .LOOP2                                      ;BUCLE DE FILAS            
00001DA6  3E3C 0007               1795              MOVE.W  #BLCOL-1,D7                ;DBRA COLUMNAS
00001DAA  1C29 2AF2               1796              MOVE.B  BLMATRIX(A1),D6
00001DAE                          1797  .LOOP1                                      ; BUCLE COLUMNAS
00001DAE  E31E                    1798              ROL.B   #1,D6
00001DB0  6400 0008               1799              BCC     .SALTO                  ; SALTA SI CARRY = 0
00001DB4  5279 00002AF0           1800              ADD.W   #1,BLCOUNTER
00001DBA                          1801  .SALTO
00001DBA  51CF FFF2               1802              DBRA    D7,.LOOP1   
00001DBE  5289                    1803              ADDA.L  #1,A1
00001DC0  51CD FFE4               1804              DBRA    D5,.LOOP2
00001DC4  4E75                    1805              RTS
00001DC6                          1806  
00001DC6                          1807  
00001DC6                          1808  
00001DC6                          1809  
00001DC6                          1810  
00001DC6                          1811  
00001DC6                          1812  -------------------- end include --------------------
00001DC6                          1813  
00001DC6                          1814  ; --- INITIALIZE --------------------------------------------------------------
00001DC6                          1815              
00001DC6  4EB8 1000               1816  START       JSR     SYSINIT
00001DCA                          1817              ; TO DO: CALL GAME INITIALIZATION CODE HERE
00001DCA  4EB8 1754               1818              JSR     STAINIT                 ;INICIA LAS PANTALLAS            
00001DCE                          1819              
00001DCE                          1820  ; --- UPDATE ------------------------------------------------------------------
00001DCE                          1821  
00001DCE  4E40                    1822  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
00001DD0                          1823                                              ; UPDATE DEPENDING ON THE STATE
00001DD0                          1824              ; TO DO: CALL GAME UPDATE CODE HERE
00001DD0  4EB8 1766               1825              JSR     STAUPD
00001DD4                          1826  
00001DD4                          1827  ; --- WAIT SYNCH --------------------------------------------------------------
00001DD4                          1828  
00001DD4  4A39 00001DF0           1829  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001DDA  67F8                    1830              BEQ     .WINT
00001DDC                          1831              
00001DDC  4239 00001DF0           1832              CLR.B   (SCRINTCT)
00001DE2                          1833  
00001DE2                          1834  ; --- PLOT --------------------------------------------------------------------
00001DE2                          1835              
00001DE2                          1836              ; TO DO: CALL GAME PLOT CODE HERE
00001DE2  4EB8 17C4               1837              JSR     STAPLOT
00001DE6                          1838  
00001DE6  4E41                    1839              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001DE8  60E4                    1840              BRA     .LOOP
00001DEA  FFFF FFFF               1841              SIMHALT
00001DEE                          1842  
00001DEE                          1843  ; --- VARIABLES ---------------------------------------------------------------
00001DEE                          1844  
00001DEE                          1845              INCLUDE "SYSVAR.X68"
00001DEE                          1846  ; =============================================================================
00001DEE                          1847  ; SYSTEM VARS
00001DEE                          1848  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
00001DEE                          1849  ; THEY MUST NOT BE IN PROTECTED MEMORY.
00001DEE                          1850  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
00001DEE                          1851  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
00001DEE                          1852  ; THIS IS GOOD ENOUGH.
00001DEE                          1853  ; =============================================================================
00001DEE                          1854  
00001DEE                          1855  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001DEE                          1856  
00001DEE                          1857  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001DEF                          1858  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001DF0                          1859  
00001DF0                          1860              DS.W    0
00001DF0                          1861  
00001DF0                          1862  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001DF0                          1863  
00001DF0                          1864  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001DF1                          1865  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001DF2                          1866              DS.W    0
00001DF2                          1867  
00001DF2                          1868  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001DF2                          1869  
00001E00                          1870              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001E00                          1871  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002A80                          1872              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002A80                          1873  
00002A80                          1874  
00002A80                          1875  
00002A80                          1876  -------------------- end include --------------------
00002A80                          1877              INCLUDE "VAR.X68"
00002A80                          1878  ; =============================================================================
00002A80                          1879  ; GAME VARS
00002A80                          1880  ; =============================================================================
00002A80                          1881  
00002A80                          1882  ; TO DO: DECLARE GAME VARIABLES HERE.
00002A80                          1883  
00002A80                          1884  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
00002A80                          1885  
00002A80                          1886  STACUR      DS.W    1                       ; CURRENT GAME STATE
00002A82                          1887  STANEXT     DS.W    1                       ; NEXT GAME STATE
00002A84                          1888  ;----------------------------------------------------------------------------
00002A84                          1889  
00002A84                          1890  ; PLAYER --------------------------------------------------------------------
00002A84                          1891  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
00002A86                          1892  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
00002A88                          1893  PLIVES      DS.W    1                       ;LIVES LEFT
00002A8A                          1894  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
00002A8C                          1895  PSPEED      DS.W    1
00002A8E                          1896  LEVEL       DS.B    2
00002A90                          1897  PNAME       DS.B    80                      ;NOMBRE CON CARACTERES MAX = 80
00002AE0                          1898              DS.W    0
00002AE0                          1899  ;----------------------------------------------------------------------------
00002AE0                          1900  
00002AE0                          1901  ; BALL ----------------------------------------------------------------------
00002AE0                          1902  ;BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
00002AE0                          1903  ;BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
00002AE0                          1904  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
00002AE2                          1905  BSPEEDY     DS.W    1
00002AE4                          1906  BMXSPEED    DS.W    1                       ;LIMITACIÓN
00002AE6                          1907  BCOLOR      DS.W    1
00002AE8                          1908  BPOSX1      DS.W    1
00002AEA                          1909  BPOSX2      DS.W    1
00002AEC                          1910  BPOSY1      DS.W    1
00002AEE                          1911  BPOSY2      DS.W    1
00002AF0                          1912  ; BLOCKS --------------------------------------------------------------------
00002AF0                          1913  BLCOUNTER   DS.W    1
00002AF2                          1914  BLMATRIX    DS.B    BLROW  ;12*8
00002AFE                          1915              DS.W    0
00002AFE                          1916  ;ALL SCORES:
00002AFE                          1917  ERRORFILE   DS.L    1
00002B02                          1918  POSRNK      DS.W    1
00002B04                          1919  RNKTABLE    DS.B    10
00002B0E                          1920  
00002B0E                          1921  BUFFER      DS.B    80
00002B5E                          1922              DS.W    0
00002B5E                          1923  PLSIZE      DS.W    1
00002B60                          1924  
00002B60                          1925  
00002B60                          1926  
00002B60                          1927  
00002B60                          1928  -------------------- end include --------------------
00002B60                          1929              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              2AE6
BDIAMET             A
BINCOLOR            FFFFFF
BINIT               1A22
BINPOSX             FB
BINPOSY             1CE
BINSPEED            FFFFFFFD
BLCOL               8
BLCONBL             1D9C
BLCONBL:LOOP1       1DAE
BLCONBL:LOOP2       1DA6
BLCONBL:SALTO       1DBA
BLCOUNTER           2AF0
BLHEIGHT            10
BLINIT              1BC2
BLINIT:LOOP         1BCC
BLLEV2              1C10
BLLEV3              1C7C
BLMATRIX            2AF2
BLPLOT              1D42
BLPLOT:LOOP1        1D76
BLPLOT:LOOP2        1D5E
BLPLOT:SALTO        1D82
BLROW               C
BLUE                F7E78E
BLUPD               1CE8
BLUPD:NEXTLEVEL     1CF8
BLUPD:NIVEL3        1D22
BLUPD:WON           1D38
BLWIDTH             40
BMXSPEED            2AE4
BNXTLEV             1A54
BNXTLEV:END         1AB0
BNXTLEV:NEGX        1AAA
BNXTLEV:NEGY        1A8E
BNXTLEV:X           1A94
BPLOT               1B82
BPOSX1              2AE8
BPOSX2              2AEA
BPOSY1              2AEC
BPOSY2              2AEE
BSPEEDX             2AE0
BSPEEDY             2AE2
BUFFER              2B0E
BUPD                1AB6
BUPD:END            1B58
COLORS              11E6
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1E00
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
ERRORFILE           2AFE
FILE                11DC
GOVERC              FFFF
GOVERX              12
GOVERY              7
GREEN               95FF8C
INTPRSC             FFFFFF
INTPRSX             20
INTPRSY             52
INTTITC             DCAA7C
INTTITX             E
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1DEF
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1DEE
LEVEL               2A8E
LIVECOLOR           FF
LIVEHEIGHT          10
LIVEPOSX            215
LIVEPOSY            1E
LIVEWIDTH           40
ORANGE              4E8CF3
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX1            E0
PINPOSX2            E4
PINPOSX3            E8
PINWIDTH1           40
PINWIDTH2           38
PINWIDTH3           30
PLIVES              2A88
PLRINIT             161A
PLRREV              162C
PLRUPD              163E
PLRUPD:END          1684
PLRUPD:RIGHTKEY     1662
PLSIZE              2B5E
PMOVE               8
PNAME               2A90
POSRNK              2B02
PPLOT               168A
PPLOT:END           1746
PPLOT:LOOP          1704
PPLOT:TXTSCORE      174C
PPOSX               2A84
PPOSY               1D0
PSCORE              2A8A
PSCORECOL           FFFFFF
PSCORETX            32
PSCORETY            4
PSPEED              2A8C
PURPLE              FFACAC
PWIDTH              2A86
RNKTABLE            2B04
SCRCTRL             201
SCRCYCCT            1DF1
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1DF0
SCRIRQ              1
SCRISR              107E
SCRLWIDTH           5
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            2E4
STACUR              2A80
STAEMPTYG           17F2
STAEMPTYP           17F0
STAGOVR             3
STAGOVRP            19DE
STAGOVRP:GOVSTR     1A18
STAGOVRU            1998
STAGOVRU:END        19DC
STAINIT             1754
STAINTR             0
STAINTRI            1880
STAINTRI:INSTRUCT   189E
STAINTRP            18F0
STAINTRP:PRSSTR     1984
STAINTRP:SOUND      1960
STAINTRP:TITSTR     1974
STAINTRU            18B6
STAINTRU:END        18EA
STANEXT             2A82
STANONE             FFFFFFFF
STAPLAY             2
STAPLAYI            17FC
STAPLAYP            185E
STAPLAYU            1844
STAPLOT             17C4
STAPLOT:PLTTBL      17E0
START               1DC6
START:LOOP          1DCE
START:WINT          1DD4
STASPACE            1
STASPACEU           1826
STASPACEU:END       1842
STAUPD              1766
STAUPD:DOUPD        178C
STAUPD:INITBL       17A4
STAUPD:UPDTBL       17B4
SYSINIT             1000
TXBSIZE             12
TXMSIZE             10
TXSSIZE             A
UTLCHCOLP           1328
UTLCHCOLP:END       13BA
UTLCHCOLP:LADOS     13B4
UTLCHCOLP:PLRXMIDDLE  136E
UTLCHCOLP:PLRXRIGHT  139C
UTLCHCOLW           1216
UTLCHCOLW:COLLISIONS  12F8
UTLCHCOLW:DOWN      1282
UTLCHCOLW:END       12F2
UTLCHCOLW:LEFT      1240
UTLCHCOLW:MINLIVE   128E
UTLCHCOLW:RESET     12EA
UTLCHCOLW:RIGHT     1260
UTLCHCOLW:SOUNDG    1300
UTLCHCOLW:SOUNDL    1314
UTLCOLBL            13C0
UTLCOLBL:CHOQUEDOBLE  1404
UTLCOLBL:CHOQUEDOBLEIZQ  1432
UTLCOLBL:DERECHA    1450
UTLCOLBL:ENDCOLISION  145C
UTLCOLBL:ENDNOCOLISION  1494
UTLCOLBL:ENMEDIO    143E
UTLCOLBL:IZQ        13EA
UTLCOLBL:SOUND      1496
UTLCOLBL:TEST       13E4
UTLCOLBL:TEST2      141A
UTLLOCT             3CF
UTLREADFILE         151A
UTLREADRNK          154E
UTLREADRNK:END      15B0
UTLREADRNK:LOOP     1566
UTLSCTRLP           14A6
UTLSCTRLP:TXTSCORE  1512
UTLSFIL             2A5
UTLSIZC             12A
UTLSNDS             4F7
UTLSNDST            6F3
UTLSPEN             0
UTLSVNAME           847
UTLWRFILE           15E8
UTLWRRNK            15B6
UTLWRRNK:OCUPADO    15D4
YELLOW              38EEF8
