00001DBC Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 31/12/2019 14:06:50

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION : 
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8              
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =000002E4                 81  SCRWIDTH    EQU     740                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  
00001000                            93  -------------------- end include --------------------
00001000                            94              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            95  ; =============================================================================
00001000                            96  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            97  ; =============================================================================
00001000                            98  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101  ; INITIALIZES THE SYSTEM
00001000                           102  ; INPUT    - NONE
00001000                           103  ; OUTPUT   - NONE
00001000                           104  ; MODIFIES - NONE
00001000                           105  ; -----------------------------------------------------------------------------
00001000  205F                     106              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            107              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            108              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            109              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                110              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     111              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     112              RTS
0000101C                           113  
0000101C                           114  ; =============================================================================
0000101C                           115  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           116  ; =============================================================================
0000101C                           117  
0000101C                           118  ; -----------------------------------------------------------------------------
0000101C                           119  SCRINIT
0000101C                           120  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           121  ; INPUT    - NONE
0000101C                           122  ; OUTPUT   - NONE
0000101C                           123  ; MODIFIES - D0,D1,D2,D3
0000101C                           124  ; -----------------------------------------------------------------------------
0000101C                           125              ; TO DO:
0000101C                           126              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                127              ORI.W   #$0700,SR
00001020                           128              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           129              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       130              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           131              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                132              MOVE.B  #33,D0
0000102C  223C 02E401E0            133              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     134              TRAP    #15
00001034                           135              ; - SET WINDOWED MODE
00001034  7201                     136              MOVE.L  #1,D1
00001036  4E4F                     137              TRAP    #15
00001038                           138              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                139              MOVE.B  #11,D0
0000103C  323C FF00                140              MOVE.W  #$FF00,D1
00001040  4E4F                     141              TRAP    #15
00001042                           142              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                143              MOVE.B  #92,D0
00001046  123C 0011                144              MOVE.B  #17,D1
0000104A  4E4F                     145              TRAP    #15
0000104C                           146              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     147              MOVE.L  #11,D0
0000104E  323C FF00                148              MOVE.W  #$FF00,D1
00001052  4E4F                     149              TRAP    #15
00001054                           150              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           151              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       152              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           153              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           154              ;   TASK 32)
0000105C  103C 0020                155              MOVE.B  #32,D0
00001060  123C 0006                156              MOVE.B  #6,D1
00001064                           157         
00001064  143C 0081                158              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     159              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     160              TRAP    #15
0000106C                           161              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 00001DE6            162              CLR.B   SCRINTCT
00001072  4239 00001DE7            163              CLR.B   SCRCYCCT
00001078                           164              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                165              ANDI.W  #$F8FF,SR
0000107C  4E75                     166              RTS
0000107E                           167  
0000107E                           168  ; -----------------------------------------------------------------------------
0000107E                           169  SCRISR
0000107E                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           171  ; INPUT    - NONE
0000107E                           172  ; OUTPUT   - NONE
0000107E                           173  ; MODIFIES - NONE
0000107E                           174  ; -----------------------------------------------------------------------------
0000107E  5239 00001DE6            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 00001DE7            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     177              RTE
0000108C                           178  
0000108C                           179  ; -----------------------------------------------------------------------------
0000108C                           180  SCRUPD
0000108C                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           182  ; BUFFER FOR THE NEXT ONE.
0000108C                           183  ; INPUT    - NONE
0000108C                           184  ; OUTPUT   - NONE
0000108C                           185  ; MODIFIES - NONE
0000108C                           186  ; -----------------------------------------------------------------------------
0000108C                           187              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                188              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                189              MOVE.B  #94,D0
00001094  4E4F                     190              TRAP    #15
00001096  103C 000B                191              MOVE.B  #11,D0
0000109A  323C FF00                192              MOVE.W  #$FF00,D1
0000109E  4E4F                     193              TRAP    #15
000010A0  4CDF 0003                194              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     195              RTE
000010A6                           196  
000010A6                           197  ; =============================================================================
000010A6                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           199  ; =============================================================================
000010A6                           200  
000010A6                           201  ; -----------------------------------------------------------------------------
000010A6                           202  KBDINIT
000010A6                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           204  ; INPUT    - NONE
000010A6                           205  ; OUTPUT   - NONE
000010A6                           206  ; MODIFIES - NONE
000010A6                           207  ; -----------------------------------------------------------------------------
000010A6  4239 00001DE4            208              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 00001DE5            209              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     211              RTS
000010BC                           212  
000010BC                           213  ; -----------------------------------------------------------------------------
000010BC                           214  KBDREAD
000010BC                           215  ; TRAP SERVICE ROUTINE.
000010BC                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           219  ; INPUT    - NONE
000010BC                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           221  ; MODIFIES - NONE
000010BC                           222  ; -----------------------------------------------------------------------------
000010BC                           223              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                224              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                225              MOVE.B  #19,D0
000010C4                           226              
000010C4  223C 50104D20            227              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     228              TRAP    #15
000010CC                           229          
000010CC  4202                     230              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                231              MOVE.W  #3,D4
000010D2                           232              
000010D2                           233  .LOOP1      
000010D2                           234       
000010D2  E189                     235              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     236              MOVE.W  SR,D3                   
000010D6  0243 0001                237              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     238              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     239              OR.B    D3,D2                   
000010DE  51CC FFF2                240              DBRA    D4,.LOOP1
000010E2                           241          
000010E2                           242              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           243              
000010E2  223C 28272625            244              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     245              TRAP    #15
000010EA                           246              
000010EA  383C 0003                247              MOVE.W  #3,D4
000010EE                           248  .LOOP2      
000010EE  E189                     249              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     250              MOVE.W  SR,D3
000010F2  0243 0001                251              ANDI.W  #$0001,D3    
000010F6  E30A                     252              LSL.B   #1,D2
000010F8  8403                     253              OR.B    D3,D2
000010FA                           254              
000010FA  51CC FFF2                255              DBRA    D4,.LOOP2
000010FE                           256              
000010FE                           257              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           258              
000010FE                           259              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 00001DE4            260              MOVE.B  KBDVAL,D3
00001104  4603                     261              NOT.B   D3
00001106  13C2 00001DE4            262              MOVE.B  D2,KBDVAL
0000110C  C602                     263              AND.B   D2,D3
0000110E  13C3 00001DE5            264              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                265              MOVEM.L (A7)+,D0-D4
00001118  4E73                     266              RTE
0000111A                           267  
0000111A                           268  ; =============================================================================
0000111A                           269  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           270  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           271  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           272  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           273  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           274  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           275  ; =============================================================================
0000111A                           276  
0000111A                           277  ; -----------------------------------------------------------------------------
0000111A                           278  DMMINIT
0000111A                           279  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           280  ; INPUT    - NONE
0000111A                           281  ; OUTPUT   - NONE
0000111A                           282  ; MODIFIES - NONE
0000111A                           283  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                284              MOVEM.L D0/A0,-(A7)
0000111E  41F9 00001E00            285              LEA     DMMDATA,A0
00001124  303C 0031                286              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                287  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            288              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                289              DBRA.W  D0,.LOOP
00001136  4CDF 0101                290              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     291              RTS
0000113C                           292  
0000113C                           293  ; -----------------------------------------------------------------------------
0000113C                           294  DMMFIRST
0000113C                           295  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           296  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           297  ; INPUT    - NONE
0000113C                           298  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           299  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           300  ; -----------------------------------------------------------------------------
0000113C  41F9 00001E00            301              LEA     DMMDATA,A0
00001142  4A58                     302  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                303              BNE     DMMFRFND
00001148  D1FC 0000003E            304              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 00002A7F            305  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     306              BLT     DMMFRLOP
00001156  207C 00000000            307              MOVE.L  #0,A0
0000115C  4E75                     308  DMMFRFND    RTS
0000115E                           309  
0000115E                           310  ; -----------------------------------------------------------------------------
0000115E                           311  DMMNEXT
0000115E                           312  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           313  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           314  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           315  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           316  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           317  ; -----------------------------------------------------------------------------
0000115E  2F00                     318              MOVE.L  D0,-(A7)
00001160  2008                     319              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            320              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            321              ADD.L   #DMMBSIZE,D0
0000116E  2040                     322              MOVE.L  D0,A0
00001170  201F                     323              MOVE.L  (A7)+,D0
00001172  60DA                     324              BRA     DMMFRCOM
00001174                           325  
00001174                           326  ; -----------------------------------------------------------------------------
00001174                           327  DMMFRSTO
00001174                           328  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           329  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           330  ; INPUT    - D0.W : ID TO SEARCH
00001174                           331  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           332  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           333  ; -----------------------------------------------------------------------------
00001174  41F9 00001E00            334              LEA     DMMDATA,A0
0000117A  B058                     335  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                336              BEQ     DMMFFND
00001180  D1FC 0000003E            337              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 00002A7F            338  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     339              BLT     DMMFLOOP
0000118E  207C 00000000            340              MOVE.L  #0,A0
00001194  4E75                     341  DMMFFND     RTS
00001196                           342  
00001196                           343  ; -----------------------------------------------------------------------------
00001196                           344  DMMNEXTO
00001196                           345  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           346  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           347  ; INPUT    - D0.W : ID TO SEARCH
00001196                           348  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           351  ; -----------------------------------------------------------------------------
00001196  2F00                     352              MOVE.L  D0,-(A7)
00001198  2008                     353              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011A6  2040                     356              MOVE.L  D0,A0
000011A8  201F                     357              MOVE.L  (A7)+,D0
000011AA  60DA                     358              BRA     DMMFCOM
000011AC                           359  
000011AC                           360  ; -----------------------------------------------------------------------------
000011AC                           361  DMMALLOC
000011AC                           362  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           363  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           364  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           367  ; -----------------------------------------------------------------------------
000011AC  3F00                     368              MOVE.W  D0,-(A7)
000011AE  4240                     369              CLR.W   D0
000011B0  4EB8 1174                370              JSR     DMMFRSTO
000011B4  301F                     371              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            372              CMP.L   #0,A0
000011BC  6700 0006                373              BEQ     .END
000011C0  3140 FFFE                374              MOVE.W  D0,-2(A0)
000011C4  4E75                     375  .END        RTS
000011C6                           376  
000011C6                           377  ; -----------------------------------------------------------------------------
000011C6                           378  DMMFREE
000011C6                           379  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           380  ; SYSTEM (0)
000011C6                           381  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           382  ; OUTPUT   - NONE
000011C6                           383  ; MODIFIES - NONE
000011C6                           384  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                385              MOVEM.L D0/A0,-(A7)
000011CA  2008                     386              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            387              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     388              MOVE.L  D0,A0
000011D4  4250                     389              CLR.W   (A0)
000011D6  4CDF 0101                390              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     391              RTS
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  
000011DC                           407  
000011DC                           408  
000011DC                           409  
000011DC                           410  
000011DC                           411  
000011DC                           412  
000011DC                           413  -------------------- end include --------------------
000011DC                           414              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           415  ; =============================================================================
000011DC                           416  ; CONSTANTS
000011DC                           417  ; =============================================================================
000011DC                           418  
000011DC                           419  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           420  
000011DC  =0000000E                421  INTTITX     EQU     14                      ; TITLE X COORDINATE
000011DC  =00000007                422  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                423  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000020                424  INTPRSX     EQU     32                      ; PRESS FIRE X COORDINATE
000011DC  =00000052                425  INTPRSY     EQU     82                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                426  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC  =00000012                427  TXBSIZE     EQU     18                      ;BIG SIZE LETTERS
000011DC  =00000010                428  TXMSIZE     EQU     16                      ;MEDIUM SIZE LETTERS
000011DC  =0000000A                429  TXSSIZE     EQU     10                      ;SMALL SIZE LETTERS
000011DC                           430  
000011DC                           431  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                432  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                433  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                434  STASPACE    EQU     1                       ; ESPERA EL ESPACIO PARA DISPARAR LA BOLA 
000011DC  =00000002                435  STAPLAY    EQU     2                       ; NORMAL GAME STATE
000011DC                           436  ;STAPLAY2    EQU     3
000011DC                           437  ;STAPLAY3    EQU     4
000011DC  =00000003                438  STAGOVR     EQU     3                       ; GAME OVER STATE
000011DC                           439  ;----------------------------------------------------------------------------
000011DC                           440  
000011DC                           441  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           442  
000011DC  =00000012                443  GOVERX      EQU     18                      ; GAME OVER X COORDINATE
000011DC  =00000007                444  GOVERY      EQU     7                       ; GAME OVER Y COORDINATE
000011DC  =0000FFFF                445  GOVERC      EQU     $0000FFFF               ; GAME OVER COLOR
000011DC                           446  
000011DC                           447  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =00000201                448  SCRCTRL     EQU     513   
000011DC  =00000005                449  SCRLWIDTH   EQU     5
000011DC  =00000040                450  LIVEWIDTH   EQU     64
000011DC  =00000010                451  LIVEHEIGHT  EQU     16
000011DC  =000000FF                452  LIVECOLOR   EQU     $000000FF               ;ROJO
000011DC  =00000215                453  LIVEPOSX    EQU     SCRCTRL+20
000011DC  =0000001E                454  LIVEPOSY    EQU     30
000011DC= 73 63 6F 72 65 2E ...    455  FILE        DC.B    'score.txt',0
000011E6                           456  ;----------------------------------------------------------------------------
000011E6                           457  
000011E6                           458  
000011E6                           459  ; PLAYER --------------------------------------------------------------------
000011E6                           460  
000011E6  =00000040                461  PINWIDTH1    EQU     64                      ; PLAYER INITIAL WIDTH (PIXELS)
000011E6  =00000038                462  PINWIDTH2    EQU     56
000011E6  =00000030                463  PINWIDTH3    EQU     48
000011E6  =0000000C                464  PHEIGHT     EQU     12                      ; PLAYER HEIGHT (PIXELS)
000011E6  =00ECD59D                465  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011E6  =00000003                466  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011E6  =00000008                467  PMOVE       EQU     8                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011E6  =000001D0                468  PPOSY       EQU     SCRHEIGH-PHEIGHT-4      ;POSICION DE LA PLATAFORMA Y
000011E6  =000000E0                469  PINPOSX1     EQU     SCRCTRL/2-PINWIDTH1/2
000011E6  =000000E4                470  PINPOSX2     EQU     SCRCTRL/2-PINWIDTH2/2
000011E6  =000000E8                471  PINPOSX3     EQU     SCRCTRL/2-PINWIDTH3/2
000011E6  =00000032                472  PSCORETX     EQU    50                       ; SCORE X COORDINATE
000011E6  =00000004                473  PSCORETY     EQU    4                       ; SCORE Y COORDINATE
000011E6  =00FFFFFF                474  PSCORECOL   EQU     $00FFFFFF
000011E6                           475  ; ---------------------------------------------------------------------------
000011E6                           476  
000011E6                           477  ; BALL ----------------------------------------------------------------------
000011E6  =0000000A                478  BDIAMET     EQU     10                       ;ANCHURA DE LA BOLA
000011E6  =000000FB                479  BINPOSX     EQU     SCRCTRL/2-BDIAMET/2     ;POSICION DE LA PELOTA X INICIAL
000011E6  =000001CE                480  BINPOSY     EQU     PPOSY-2                 ;POSICION DE LA PELOTA Y INICIAL
000011E6  =FFFFFFFD                481  BINSPEED    EQU     -3                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011E6                           482  
000011E6  =00FFFFFF                483  BINCOLOR    EQU     $00FFFFFF
000011E6                           484  
000011E6                           485  ; ---------------------------------------------------------------------------
000011E6                           486  
000011E6                           487  
000011E6                           488  ;BLOCKS-------------------------------------------------------------------------
000011E6  =00000040                489  BLWIDTH     EQU     64
000011E6  =00000010                490  BLHEIGHT     EQU     16
000011E6= 00F7E78E 004E8CF3 ...    491  COLORS      DC.L    BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE
00001216  =0000000C                492  BLROW       EQU     12
00001216  =00000008                493  BLCOL       EQU     8
00001216                           494  
00001216                           495  
00001216                           496  ;-------------------------------------------------------------------------------
00001216                           497  
00001216                           498  ;COLORS-------------------------------------------------------------
00001216  =004E8CF3                499  ORANGE      EQU     $004E8CF3
00001216  =00F7E78E                500  BLUE        EQU     $00F7E78E
00001216  =00FFACAC                501  PURPLE      EQU     $00FFACAC
00001216  =0038EEF8                502  YELLOW      EQU     $0038EEF8
00001216  =0095FF8C                503  GREEN       EQU     $0095FF8C
00001216                           504  ;-------------------------------------------------------------------
00001216                           505  
00001216                           506  
00001216                           507  -------------------- end include --------------------
00001216                           508              INCLUDE "UTIL.X68"
00001216                           509  ; =============================================================================
00001216                           510  ; UTILITY MACROS
00001216                           511  ; =============================================================================
00001216                           512  
00001216                           513  UTLSPEN     MACRO
00001216                           514  ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001216                           515  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
00001216                           516  ; OUTPUT   - NONE
00001216                           517  ; MODIFIES - D0,D1
00001216                           518  ; -----------------------------------------------------------------------------
00001216                           519              MOVE.B  #80,D0
00001216                           520              MOVE.L  \1,D1
00001216                           521              TRAP    #15
00001216                           522              ENDM
00001216                           523  
00001216                           524  ; -----------------------------------------------------------------------------
00001216                           525  UTLSIZC     MACRO
00001216                           526  ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001216                           527  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR \2 SIZE (8, 9, 10, 12, 14, 16, 18))
00001216                           528  ; OUTPUT   - NONE
00001216                           529  ; MODIFIES - D0,D1
00001216                           530  ; -----------------------------------------------------------------------------
00001216                           531              MOVE.L  \1,D1
00001216                           532              MOVE.L  #\2<<16|1,D2
00001216                           533              MOVE.B  #21,D0
00001216                           534              TRAP    #15
00001216                           535              ENDM
00001216                           536  ; -----------------------------------------------------------------------------
00001216                           537  UTLSFIL     MACRO
00001216                           538  ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001216                           539  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
00001216                           540  ; OUTPUT   - NONE
00001216                           541  ; MODIFIES - D0,D1
00001216                           542  ; -----------------------------------------------------------------------------
00001216                           543              MOVE.B  #81,D0
00001216                           544              MOVE.L  \1,D1
00001216                           545              TRAP    #15
00001216                           546              ENDM
00001216                           547              
00001216                           548  ; -----------------------------------------------------------------------------
00001216                           549  UTLLOCT     MACRO
00001216                           550  ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001216                           551  ; INPUT    - \1 X, \2 Y
00001216                           552  ; OUTPUT   - NONE
00001216                           553  ; MODIFIES - D0,D1
00001216                           554  ; -----------------------------------------------------------------------------
00001216                           555              MOVE.W  #\1<<8|\2, D1
00001216                           556              MOVE.B  #11,D0
00001216                           557              TRAP    #15
00001216                           558              ENDM
00001216                           559     
00001216                           560  ; -----------------------------------------------------------------------------
00001216                           561  UTLSNDS     MACRO
00001216                           562  ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001216                           563  ; INPUT    - \1 ADDRESS TO STRING WITH NAME OF THE FILE, \2 NUM SOUNDS, 
00001216                           564  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001216                           565  ; MODIFIES - D0,A1
00001216                           566  ; -----------------------------------------------------------------------------
00001216                           567              LEA     \1, A1             ;PLAY EXPLOSION SOUND
00001216                           568              MOVE.W  \2,D1
00001216                           569              MOVE.B  #71,D0
00001216                           570              TRAP    #15
00001216                           571              MOVE.B  #72,D0
00001216                           572              TRAP    #15
00001216                           573              
00001216                           574              ENDM
00001216                           575              
00001216                           576  ; -----------------------------------------------------------------------------
00001216                           577  UTLSNDST     MACRO
00001216                           578  ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
00001216                           579  ; INPUT    - NONE 
00001216                           580  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001216                           581  ; MODIFIES - D0,A1
00001216                           582  ; -----------------------------------------------------------------------------
00001216                           583              MOVE.L  #3,D2
00001216                           584              MOVE.B  #76,D0
00001216                           585              TRAP    #15
00001216                           586              
00001216                           587              ENDM
00001216                           588  ; -----------------------------------------------------------------------------            
00001216                           589  UTLSVNAME  MACRO
00001216                           590  ;SAVES THE NAME OS THE PLAYER
00001216                           591  ;MAX CARACTERS: 20
00001216                           592  ; -----------------------------------------------------------------------------
00001216                           593              LEA.L   .INSTRUCT,A1            ;hacer que escriba
00001216                           594              MOVE.B  #14,D0
00001216                           595              TRAP    #15
00001216                           596              
00001216                           597              LEA.L   PNAME,A1                ;GUARDAMOS EL NOMBRE
00001216                           598              MOVE.B  #2,D0
00001216                           599              TRAP    #15                     ;(A1) = PNAME
00001216                           600             
00001216                           601              RTS
00001216                           602  .INSTRUCT   DC.B    'ENTER YOUR NAME: ',0
00001216                           603              ENDM
00001216                           604  ; -----------------------------------------------------------------------------
00001216                           605  ; =============================================================================
00001216                           606  ; UTILITY SUBROUTINES
00001216                           607  ; =============================================================================
00001216                           608  ; -----------------------------------------------------------------------------
00001216                           609  UTLCHCOLW
00001216                           610  ; CHECKS COLLISION WITH WALL
00001216                           611  ; INPUT    - D0.W BPOSX1
00001216                           612  ;            D1.W BPOSY1
00001216                           613  ;            D2.W BPOSX2
00001216                           614  ;            D3.W BPOSY2
00001216                           615  ; OUTPUT   - 
00001216                           616  ; MODIFIES - 
00001216                           617  ; -----------------------------------------------------------------------------
00001216  48E7 F080                618              MOVEM.L D0-D3/A0,-(A7)
0000121A  41F9 000012F8            619              LEA.L   .COLLISIONS,A0
00001220  B258                     620              CMP.W   (A0)+,D1      ;UP
00001222  6E00 001C                621              BGT     .LEFT
00001226                           622  
00001226  4479 00002AE2            623              NEG.W   BSPEEDY
0000122C  4279 00002AEC            624              CLR.W   BPOSY1
00001232  33FC 000A 00002AEE       625              MOVE.W  #BDIAMET,BPOSY2
0000123A  4EF9 000012F2            626              JMP     .END 
00001240                           627  .LEFT        
00001240  B058                     628              CMP.W   (A0)+,D0
00001242  6E00 001C                629              BGT     .RIGHT
00001246  4479 00002AE0            630              NEG.W   BSPEEDX
0000124C  4279 00002AE8            631              CLR.W   BPOSX1
00001252  33FC 000A 00002AEA       632              MOVE.W  #BDIAMET,BPOSX2
0000125A  4EF9 000012F2            633              JMP     .END
00001260                           634  .RIGHT      
00001260                           635              
00001260  B458                     636              CMP.W   (A0)+,D2
00001262  6D00 001E                637              BLT     .DOWN
00001266  4479 00002AE0            638              NEG.W   BSPEEDX
0000126C  33FC 0201 00002AEA       639              MOVE.W  #SCRCTRL,BPOSX2
00001274  33FC 01F7 00002AE8       640              MOVE.W  #SCRCTRL-BDIAMET,BPOSX1
0000127C  4EF9 000012F2            641              JMP     .END
00001282                           642  .DOWN       
00001282  B658                     643              CMP.W   (A0)+,D3         
00001284  6E00 0008                644              BGT     .MINLIVE                  
00001288  4EF9 000012F2            645              JMP     .END  
0000128E                           646  .MINLIVE       
0000128E                           647m             UTLSNDS .SOUNDL,#1
0000128E                           648m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000128E                           649m ; INPUT    - .SOUNDL ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
0000128E                           650m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000128E                           651m ; MODIFIES - D0,A1
0000128E                           652m ; -----------------------------------------------------------------------------
000012A4  33FC 01E0 00002AEE       653              MOVE.W  #SCRHEIGH,BPOSY2
000012AC  33FC 01D6 00002AEC       654              MOVE.W  #SCRHEIGH-BDIAMET,BPOSY1 
000012B4  5379 00002A88            655              SUB.W   #1,PLIVES                
000012BA  6600 002E                656              BNE     .RESET               ;SALTA SI NO SE HAN AGOTADO LAS VIDAS              
000012BE                           657m             UTLSNDST
000012BE                           658m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
000012BE                           659m ; INPUT    - NONE 
000012BE                           660m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012BE                           661m ; MODIFIES - D0,A1
000012BE                           662m ; -----------------------------------------------------------------------------
000012C6                           663m             UTLSNDS .SOUNDG,#1
000012C6                           664m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000012C6                           665m ; INPUT    - .SOUNDG ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000012C6                           666m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000012C6                           667m ; MODIFIES - D0,A1
000012C6                           668m ; -----------------------------------------------------------------------------
000012DC  33FC 0003 00002A82       669              MOVE.W  #STAGOVR,(STANEXT)
000012E4  4EF9 000012F2            670              JMP     .END
000012EA                           671  .RESET     
000012EA                           672              
000012EA  33FC 0001 00002A82       673              MOVE.W  #STASPACE,(STANEXT) 
000012F2                           674             
000012F2                           675  .END        
000012F2  4CDF 010F                676              MOVEM.L (A7)+,D0-D3/A0
000012F6  4E75                     677              RTS
000012F8= 0000 0000 0201 01E0      678  .COLLISIONS DC.W    0,0,SCRCTRL,SCRHEIGH
00001300= 67616D65 206F7665 ...    679  .SOUNDG      DC.L    'game over.wav',0
00001314= 6C6F7365 206C6966 ...    680  .SOUNDL     DC.L    'lose life.wav',0
00001328                           681  ; -----------------------------------------------------------------------------
00001328                           682  UTLCHCOLP
00001328                           683  ; CHECKS COLLISION WITH PLATAFORM
00001328                           684  ; INPUT    - D0.W BPOSX1
00001328                           685  ;            D1.W BPOSY1
00001328                           686  ;            D2.W PPOSX2
00001328                           687  ;            D3.W PPOSY2
00001328                           688  ; OUTPUT   
00001328                           689  ;           
00001328                           690  ; MODIFIES - D4,D5
00001328                           691  ; -----------------------------------------------------------------------------
00001328  48E7 0C00                692              MOVEM.L D4-D5,-(A7)
0000132C  383C 01D0                693              MOVE.W  #PPOSY,D4
00001330  B644                     694              CMP.W   D4,D3
00001332  6D00 0086                695              BLT     .END                    ;SI ESTÁ MÁS A ARRIBA DE LA PLATAFORMA NO HAY COLISIÓN
00001336  3839 00002A84            696              MOVE.W  PPOSX,D4
0000133C  B444                     697              CMP.W   D4,D2
0000133E  6D00 007A                698              BLT     .END                    ;SI ESTÁ MÁS A LA IZQUIERDA DE LA PLATAFORMA NO HAY COLISIÓN
00001342  D879 00002A86            699              ADD.W   PWIDTH,D4
00001348  B044                     700              CMP.W    D4,D0
0000134A  6E00 006E                701              BGT     .END                    ;SI ESTÁ MÁS A LA DERECHA NO HAY COLISIÓN
0000134E                           702              ;AQUÍ HAY COLISIÓN, TENEMOS QUE DETECTAR CUAL
0000134E  383C 01D0                703              MOVE.W  #PPOSY,D4
00001352  B244                     704              CMP.W   D4,D1
00001354  6E00 005E                705              BGT     .LADOS
00001358  4479 00002AE2            706              NEG.W   BSPEEDY                 ;COLISIÓN CON LA PARTE DE ARRIBA
0000135E  33C4 00002AEE            707              MOVE.W  D4,BPOSY2
00001364  0444 000A                708              SUB.W   #BDIAMET,D4
00001368  33C4 00002AEC            709              MOVE.W  D4,BPOSY1       
0000136E                           710  .PLRXMIDDLE 
0000136E  3839 00002A86            711              MOVE.W  PWIDTH,D4
00001374  E24C                     712              LSR.W   #1,D4
00001376  3A39 00002A84            713              MOVE.W  PPOSX,D5 
0000137C  DA44                     714              ADD.W   D4,D5                   ;D5 = CENTRO PLATAFORMA
0000137E  BA42                     715              CMP.W   D2,D5                   ;CENTRO - POS PEL
00001380  6B00 001A                716              BMI     .PLRXRIGHT
00001384  3839 00002AE0            717              MOVE.W  BSPEEDX,D4
0000138A  6B00 002E                718              BMI     .END
0000138E                           719                                           
0000138E  4444                     720              NEG.W   D4
00001390  33C4 00002AE0            721              MOVE.W  D4,BSPEEDX
00001396  4EF9 000013BA            722              JMP     .END
0000139C                           723              
0000139C                           724  .PLRXRIGHT             
0000139C  3839 00002AE0            725              MOVE.W  BSPEEDX,D4
000013A2  6A00 0016                726              BPL     .END              ;SI ES POSITIVO SOLO NEGAMOS Y
000013A6  4444                     727              NEG.W   D4
000013A8  33C4 00002AE0            728              MOVE.W  D4,BSPEEDX
000013AE  4EF9 000013BA            729              JMP     .END
000013B4                           730  
000013B4  4479 00002AE0            731  .LADOS      NEG.W   BSPEEDX                 ;COLISIÓN CON LOS LADOS
000013BA  4CDF 0030                732  .END        MOVEM.L (A7)+,D4-D5 
000013BE  4E75                     733              RTS
000013C0                           734  
000013C0                           735  
000013C0                           736  ; -----------------------------------------------------------------------------
000013C0                           737  UTLCOLBL   
000013C0                           738  ; CHECKS COLLISION WITH BLOCKS
000013C0                           739  ; INPUT    - POSITION BALL \1 X \2 Y TO CHECK COLLISION WITH BLOCK
000013C0                           740  ; OUTPUT   
000013C0                           741  ;           
000013C0                           742  ; MODIFIES - NONE
000013C0                           743  ; -----------------------------------------------------------------------------
000013C0  E849                     744              LSR.W   #4,D1           ;POSY/BLHEIGHT. D1 -> FILA
000013C2  343C 000B                745              MOVE.W  #BLROW-1,D2
000013C6  B441                     746              CMP.W   D1,D2           ;SI ESTÁ POR DEBAJO DE LA ÚLTIMA FILA SALTA DIRECTO A END
000013C8  6D00 00C4                747              BLT     .ENDNOCOLISION                    
000013CC  41F9 00002AF2            748              LEA.L   BLMATRIX,A0
000013D2  D1C1                     749              ADDA.L  D1,A0           ;CARGAMOS EN A0 LA DIRECCIÓN DEL BYTE DE LA FILA
000013D4                           750                                          
000013D4  EC48                     751              LSR.W   #6,D0           ;D0 -> COLUMNA 
000013D6  363C 0007                752              MOVE.W  #BLCOL-1,D3                           
000013DA  9640                     753              SUB.W   D0,D3           ;D3 -> COLUMNA (DESDE DRCHA) DONDE ESTÁ LA BOLA
000013DC  3E03                     754              MOVE.W  D3,D7
000013DE  6A00 0004                755              BPL     .TEST  
000013E2  4283                     756              CLR.L   D3              ;POR SI SALE NEGATIVO LA REAJUSTAMOS
000013E4                           757  .TEST
000013E4  0710                     758              BTST.B  D3,(A0)         ;MIRAMOS EL BIT DONDE ESTA 
000013E6  6700 00A6                759              BEQ     .ENDNOCOLISION  ; SALTA SI EN ESA POSICION YA HABIA UN 0
000013EA                           760  
000013EA                           761  .IZQ        
000013EA  EC4D                     762              LSR.W   #6,D5           ;D5 -> COLUMNA
000013EC  343C 0007                763              MOVE.W  #BLCOL-1,D2
000013F0  9445                     764              SUB.W   D5,D2           ;D2 -> COLUMNA (DESDE DERECHA) DONDE ESTA EL PUNTO CONTRARIO (SI 1 ENTONCES 2)
000013F2  B443                     765              CMP     D3,D2                  
000013F4  6F00 000E                766              BLE     .CHOQUEDOBLE
000013F8  4479 00002AE0            767              NEG.W   BSPEEDX
000013FE                           768              
000013FE  4EF9 0000145C            769              JMP     .ENDCOLISION    ;  (|)______|  COLISION DELADO IZQUIERDO COLISIONANDO POR LA IZQ DEL NLOQUE 
00001404                           770              
00001404                           771  .CHOQUEDOBLE                        ;SI ESTA EN MEDIO DEL BLOQUE  |___()___| COLISION EN MEDIO
00001404                           772                                      ;COMPARAMOS SI LE HA DADO A DOS A LA VEZ |______(|)______|
00001404  B443                     773              CMP     D3,D2
00001406  6700 0036                774              BEQ     .ENMEDIO
0000140A                           775              
0000140A  5A40                     776              ADDI.W  #BDIAMET/2,D0
0000140C  EC48                     777              LSR.W   #6,D0
0000140E  3A3C 0007                778              MOVE.W  #BLCOL-1,D5     ;D1 -> COLUMNA DONDE SE ENCUENTRA EL PUNTO MEDIO DE LA BOLA                         
00001412                           779              
00001412  9A40                     780              SUB.W   D0,D5
00001414  6A00 0004                781              BPL     .TEST2  
00001418  4285                     782              CLR.L   D5              ;POR SI SALE NEGATIVO LA REAJUSTAMOS
0000141A                           783  .TEST2
0000141A                           784              
0000141A  0B10                     785              BTST.B  D5,(A0)         ;MIRAMOS EL BIT DONDE ESTA 
0000141C  6700 0020                786              BEQ     .ENMEDIO
00001420  BE45                     787              CMP     D5,D7
00001422  6700 000E                788              BEQ     .CHOQUEDOBLEIZQ
00001426  4479 00002AE2            789              NEG.W   BSPEEDY
0000142C  4EF9 0000145C            790              JMP     .ENDCOLISION
00001432                           791  .CHOQUEDOBLEIZQ
00001432  4479 00002AE0            792              NEG.W   BSPEEDX
00001438  4EF9 0000145C            793              JMP     .ENDCOLISION
0000143E                           794  
0000143E                           795              
0000143E                           796  .ENMEDIO            
0000143E                           797              ;COMPARAMOS SI LA PARTE CONTRARIA ESTA DENTO DEL BLOQUE O FUERA
0000143E  B443                     798              CMP     D3,D2
00001440  6D00 000E                799              BLT     .DERECHA
00001444  4479 00002AE2            800              NEG.W   BSPEEDY
0000144A  4EF9 0000145C            801              JMP     .ENDCOLISION
00001450                           802  .DERECHA
00001450  4479 00002AE0            803              NEG.W   BSPEEDX
00001456  4EF9 0000145C            804              JMP     .ENDCOLISION
0000145C                           805              
0000145C                           806  
0000145C                           807  .ENDCOLISION
0000145C  383C 0001                808              MOVE.W  #1,D4
00001460  0790                     809              BCLR    D3,(A0)      
00001462  0679 0064 00002A8A       810              ADD.W   #100,PSCORE
0000146A                           811m             UTLSNDST
0000146A                           812m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
0000146A                           813m ; INPUT    - NONE 
0000146A                           814m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000146A                           815m ; MODIFIES - D0,A1
0000146A                           816m ; -----------------------------------------------------------------------------
00001472                           817m             UTLSNDS  .SOUND,#1
00001472                           818m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001472                           819m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001472                           820m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001472                           821m ; MODIFIES - D0,A1
00001472                           822m ; -----------------------------------------------------------------------------
00001488  5379 00002AF0            823              SUB.W   #1,BLCOUNTER
0000148E                           824  .ENDNOCOLISION
0000148E  4E75                     825              RTS
00001490= 626C6F63 6B732E77 ...    826  .SOUND      DC.L    'blocks.wav',0
000014A0                           827  ;---------------------------------------------------------------------------------
000014A0                           828  UTLSCTRLP
000014A0  48E7 FC40                829              MOVEM.L D0-D5/A1,-(A7)    
000014A4                           830              ;DIBUJA LA BARRA DE SEPARACIÓN
000014A4  223C 00FFFFFF            831              MOVE.L  #$00FFFFFF,D1  ;COLOR
000014AA  103C 0050                832              MOVE.B  #80,D0
000014AE  4E4F                     833              TRAP    #15
000014B0                           834              
000014B0  C2BC 00FFFFFF            835              AND.L   #$00FFFFFF,D1  ;COLOR
000014B6  103C 0051                836              MOVE.B  #81,D0
000014BA  4E4F                     837              TRAP    #15
000014BC                           838              
000014BC  103C 0057                839              MOVE.B  #87,D0
000014C0  323C 0201                840              MOVE.W  #SCRCTRL,D1
000014C4  363C 0206                841              MOVE.W  #SCRCTRL+SCRLWIDTH,D3
000014C8  4282                     842              CLR.L   D2
000014CA  383C 01E0                843              MOVE.W  #SCRHEIGH,D4
000014CE  4E4F                     844              TRAP    #15
000014D0                           845              
000014D0                           846              ;SCORE
000014D0                           847m             UTLLOCT PSCORETX,PSCORETY            
000014D0                           848m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000014D0                           849m ; INPUT    - PSCORETX X, PSCORETY Y
000014D0                           850m ; OUTPUT   - NONE
000014D0                           851m ; MODIFIES - D0,D1
000014D0                           852m ; -----------------------------------------------------------------------------
000014DA                           853m             UTLSIZC #PSCORECOL,TXMSIZE           ;PENCOLOR Y TAMAÑO
000014DA                           854m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
000014DA                           855m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR TXMSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
000014DA                           856m ; OUTPUT   - NONE
000014DA                           857m ; MODIFIES - D0,D1
000014DA                           858m ; -----------------------------------------------------------------------------
000014EC                           859m             UTLSFIL #$00000000
000014EC                           860m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000014EC                           861m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
000014EC                           862m ; OUTPUT   - NONE
000014EC                           863m ; MODIFIES - D0,D1
000014EC                           864m ; -----------------------------------------------------------------------------
000014F4  43F9 0000150C            865              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
000014FA  3239 00002A8A            866              MOVE.W  PSCORE,D1
00001500  103C 0011                867              MOVE.B  #17,D0
00001504  4E4F                     868              TRAP    #15
00001506                           869              
00001506  4CDF 023F                870              MOVEM.L (A7)+,D0-D5/A1
0000150A  4E75                     871              RTS   
0000150C= 53 43 4F 52 45 3A ...    872  .TXTSCORE   DC.B    'SCORE: ',0
00001514                           873              DS.W    0
00001514                           874  
00001514                           875  ;-----------------------------------------------------------------------------
00001514                           876  UTLREADFILE  
00001514  48E7 E040                877              MOVEM.L D0-D2/A1,-(A7)
00001518  303C 0032                878              MOVE.W  #50,D0                  ;CIERRA TODOS LOS FICHEROS
0000151C  4E4F                     879              TRAP    #15
0000151E  43F9 00002B06            880              LEA.L   RNKTABLE,A1
00001524  303C 0064                881              MOVE.W  #100,D0
00001528                           882  .LOOP
00001528  4219                     883              CLR.B   (A1)+
0000152A  51C8 FFFC                884              DBRA    D0,.LOOP
0000152E  43F8 11DC                885              LEA     FILE,A1
00001532  103C 0033                886              MOVE.B  #51,D0
00001536  4E4F                     887              TRAP    #15                     ;ABRE UN FICHERO EXISTENTE, D1 = FILE ID
00001538                           888  
00001538                           889              
00001538  43F9 00002B06            890              LEA.L   RNKTABLE,A1
0000153E  7464                     891              MOVE.L  #100,D2                 ;BYTES QUE LEE
00001540  103C 0035                892              MOVE.B  #53,D0
00001544  4E4F                     893              TRAP    #15                     ;LEE DEL FICHERO
00001546  B47C 0064                894              CMP     #$64,D2
0000154A  6600 0004                895              BNE     .SALTA
0000154E  7400                     896              MOVE.L  #0,D2
00001550                           897  .SALTA
00001550  23C2 00002B02            898              MOVE.L  D2,POSRNK
00001556                           899              ;GUARDA EN EL BUFFER LO QUE HA LEIDO
00001556  103C 0038                900              MOVE.B  #56,D0
0000155A  4E4F                     901              TRAP    #15                     ;CIERRA EL FICHERO
0000155C  4CDF 0207                902              MOVEM.L (A7)+,D0-D2/A1
00001560  4E75                     903              RTS
00001562                           904  ;----------------------------------------------------------------------
00001562                           905  UTLREADRNK
00001562  48E7 FC40                906              MOVEM.L D0-D5/A1,-(A7)
00001566                           907              ; D4 = EN QUE FILA ESTAMOS      
00001566  4284                     908              CLR.L   D4
00001568                           909              
00001568  3A3C 0009                910              MOVE.W  #9,D5                   ;DBRA
0000156C                           911              
0000156C  2239 00002B02            912              MOVE.L  POSRNK,D1
00001572  B27C 0064                913              CMP     #$64,D1
00001576  6700 0040                914              BEQ     .END
0000157A                           915            
0000157A                           916  .LOOP
0000157A  43F9 00002B06            917              LEA.L   RNKTABLE,A1       1000   
00001580  3004                     918              MOVE.W  D4,D0                
00001582  C0FC 000A                919              MULU.W  #10,D0                  ;PARA LEER EL NOMBRE
00001586                           920              
00001586  D3C0                     921              ADDA.L  D0,A1                   ;A0 = RNKTABLE + 10*FILA
00001588                           922              
00001588  103C 000B                923              MOVE.B  #11,D0
0000158C  323C 1414                924              MOVE.W  #20<<8|20,D1
00001590  4E4F                     925              TRAP    #15
00001592                           926              ;PRIMERO LEEMOS SCORE  (|SCORE|      NAME      |)
00001592  103C 0003                927              MOVE.B  #3,D0 
00001596  4281                     928              CLR.L   D1                  
00001598  3211                     929              MOVE.W  (A1),D1
0000159A  4E4F                     930              TRAP    #15                     ;AQUI EN TEORIA VISUALIZA EL TEXTO, el score
0000159C                           931            
0000159C  5489                     932              ADDA.L  #2,A1                   ;PARA LEER EL NOMBRE (8B)
0000159E  103C 000B                933              MOVE.B  #11,D0
000015A2  323C 1E15                934              MOVE.W  #30<<8|21,D1
000015A6                           935  
000015A6  4E4F                     936              TRAP    #15
000015A8                           937              ;PRIMERO LEEMOS SCORE  (|SCORE|      NAME      |)
000015A8  103C 0001                938              MOVE.B  #1,D0                   
000015AC  323C 0008                939              MOVE.W  #8,D1                   ;8 BYTES QUE TIENE QUE IMPRIMIR
000015B0  4E4F                     940              TRAP    #15                     ;AQUI EN TEORIA VISUALIZA EL TEXTO, el score
000015B2                           941            
000015B2  5284                     942              ADD.L  #1,D4
000015B4  51CD FFC4                943              DBRA    D5,.LOOP
000015B8                           944  .END
000015B8  4CDF 023F                945              MOVEM.L (A7)+,D0-D5/A1
000015BC  4E75                     946              RTS
000015BE                           947  
000015BE                           948  ;--------------------------------------------------------------------------------          
000015BE                           949  UTLWRRNK    
000015BE  48E7 C0C0                950              MOVEM.L D0-D1/A0-A1,-(A7)
000015C2                           951              
000015C2  43F9 00002B06            952              LEA.L   RNKTABLE,A1
000015C8  2239 00002B02            953              MOVE.L  POSRNK,D1
000015CE  D3C1                     954              ADDA.L  D1,A1
000015D0                           955              
000015D0                           956  .OCUPADO
000015D0                           957              ;A1 = TIENE LA PRIMERA POSICION DONDE ESCRIBE (LA MAS VIEJA)
000015D0  32B9 00002A8A            958              MOVE.W  PSCORE,(A1)
000015D6  5489                     959              ADDA.L  #2,A1
000015D8  303C 0007                960              MOVE.W  #7,D0
000015DC  41F9 00002A90            961              LEA.L   PNAME,A0
000015E2                           962  .LOOP
000015E2  12D8                     963              MOVE.B  (A0)+,(A1)+
000015E4  51C8 FFFC                964              DBRA    D0,.LOOP
000015E8                           965  ..          
000015E8  4CDF 0303                966              MOVEM.L (A7)+,D0-D1/A0-A1
000015EC  4E75                     967              RTS
000015EE                           968  ;--------------------------------------------------------------------------------- 
000015EE                           969  UTLWRFILE
000015EE  48E7 E040                970              MOVEM.L D0-D2/A1,-(A7)
000015F2  103C 0032                971              MOVE.B  #50,D0  ;CERRAMOS TODOS LOS FICHERO
000015F6  4E4F                     972              TRAP    #15
000015F8                           973              
000015F8  43F8 11DC                974              LEA.L   FILE,A1                 ;ABRE NUESTRO FICHERO
000015FC  103C 0033                975              MOVE.B  #51,D0                  
00001600  4E4F                     976              TRAP    #15                     ;DEVUELVE EL ID DE FICHERO EN D1
00001602                           977              
00001602  43F9 00002B06            978              LEA.L   RNKTABLE,A1                ;escribimos en el fichero 
00001608                           979              ;D1 YA TINENE EL ID DEL FICHERO
00001608  2439 00002B02            980              MOVE.L  POSRNK,D2  
0000160E  0642 000A                981              ADD.W   #10,D2         
00001612                           982              ;ADD.W   #1,D2                   ;PARA EL CARACTER NULL
00001612  103C 0036                983              MOVE.B  #54,D0
00001616  4E4F                     984              TRAP    #15
00001618                           985             
00001618  103C 0038                986              MOVE.B  #56,D0                  ;cerramos fichero
0000161C  4E4F                     987              TRAP    #15
0000161E  4CDF 0207                988              MOVEM.L (A7)+,D0-D2/A1
00001622  4E75                     989              RTS
00001622  4E75                     990  -------------------- end include --------------------
00001624                           991              INCLUDE "PLAYER.X68"            ;EL JUGADOR
00001624                           992  ; -----------------------------------------------------------------------------
00001624                           993  ;           PLAYER
00001624                           994  ; -----------------------------------------------------------------------------
00001624                           995  PLRINIT
00001624                           996  ; INITIALIZES THE PLAYER
00001624                           997  ; INPUT    - NONE
00001624                           998  ; OUTPUT   - NONE
00001624                           999  ; MODIFIES - NONE
00001624                          1000  ; -----------------------------------------------------------------------------
00001624                          1001              
00001624  33FC 00E0 00002A84      1002              MOVE.W  #PINPOSX1,PPOSX
0000162C  33FC 0040 00002A86      1003              MOVE.W  #PINWIDTH1,PWIDTH
00001634                          1004              
00001634                          1005            
00001634  4E75                    1006              RTS
00001636                          1007              
00001636                          1008  ; -----------------------------------------------------------------------------
00001636                          1009  PLRREV
00001636                          1010  ; PLAYER REVIVES, INITIALIZE POSITION
00001636                          1011  ; INPUT    - NONE
00001636                          1012  ; OUTPUT   - NONE
00001636                          1013  ; MODIFIES - NONE
00001636                          1014  ; -----------------------------------------------------------------------------
00001636                          1015              ;DEBERIAMOS CALCULAR LA POSICION NUEVA A PARTIR DE LA WIDTH QUE NOS PASEN
00001636                          1016              
00001636  33FC 00E0 00002A84      1017              MOVE.W  #PINPOSX1,PPOSX
0000163E  33FC 0040 00002A86      1018              MOVE.W  #PINWIDTH1,PWIDTH
00001646                          1019            
00001646  4E75                    1020              RTS
00001648                          1021  
00001648                          1022  ; -----------------------------------------------------------------------------
00001648                          1023  
00001648                          1024  PLRUPD      
00001648  48E7 6000               1025              MOVEM.L D1-D2,-(A7)
0000164C  1239 00001DE4           1026              MOVE.B  KBDVAL,D1  
00001652  E219                    1027              ROR.B   #1,D1                   ;IZQUIERDA
00001654  6400 0016               1028              BCC     .RIGHTKEY               ;CUANDO C = 0
00001658                          1029              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
00001658  3439 00002A84           1030              MOVE.W  PPOSX,D2
0000165E  B47C 0000               1031              CMP.W    #0,D2
00001662  6F00 0008               1032              BLE     .RIGHTKEY
00001666  5179 00002A84           1033              SUB.W   #PMOVE,(PPOSX)
0000166C                          1034  .RIGHTKEY
0000166C  E209                    1035              LSR.B   #1,D1                   
0000166E  E219                    1036              ROR.B   #1,D1                   
00001670  6400 001C               1037              BCC     .END
00001674                          1038              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
00001674  3439 00002A84           1039              MOVE.W  PPOSX,D2
0000167A  D479 00002A86           1040              ADD.W   PWIDTH,D2 
00001680                          1041  
00001680  B47C 01FC               1042              CMP.W    #SCRCTRL-SCRLWIDTH,D2
00001684  6C00 0008               1043              BGE     .END
00001688  5079 00002A84           1044              ADD.W   #PMOVE,PPOSX
0000168E                          1045  .END
0000168E  4CDF 0006               1046              MOVEM.L (A7)+,D1-D2
00001692  4E75                    1047              RTS
00001694                          1048  
00001694                          1049  
00001694                          1050  PPLOT
00001694  48E7 FC40               1051              MOVEM.L  D0-D5/A1,-(A7)
00001698                          1052              ;PLOT THE PLATAFORM
00001698                          1053m             UTLSPEN #PCOLOR 
00001698                          1054m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001698                          1055m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
00001698                          1056m ; OUTPUT   - NONE
00001698                          1057m ; MODIFIES - D0,D1
00001698                          1058m ; -----------------------------------------------------------------------------
000016A4                          1059m             UTLSFIL #PCOLOR
000016A4                          1060m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000016A4                          1061m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
000016A4                          1062m ; OUTPUT   - NONE
000016A4                          1063m ; MODIFIES - D0,D1
000016A4                          1064m ; -----------------------------------------------------------------------------
000016B0  3239 00002A84           1065              MOVE.W  PPOSX,D1
000016B6  343C 01D0               1066              MOVE.W  #PPOSY,D2                    
000016BA  3639 00002A84           1067              MOVE.W  PPOSX,D3
000016C0  3839 00002A86           1068              MOVE.W  PWIDTH,D4 
000016C6  D644                    1069              ADD.W   D4,D3
000016C8  383C 01DC               1070              MOVE.W  #PPOSY+PHEIGHT,D4
000016CC  303C 0057               1071              MOVE.W  #87,D0
000016D0  4E4F                    1072              TRAP    #15
000016D2                          1073              
000016D2                          1074              ;PLOT LIFE
000016D2  3A39 00002A88           1075              MOVE.W  PLIVES,D5
000016D8  6700 0076               1076              BEQ     .END
000016DC                          1077m             UTLSPEN #$00FFFFFF  
000016DC                          1078m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000016DC                          1079m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
000016DC                          1080m ; OUTPUT   - NONE
000016DC                          1081m ; MODIFIES - D0,D1
000016DC                          1082m ; -----------------------------------------------------------------------------
000016E8                          1083m             UTLSFIL #LIVECOLOR
000016E8                          1084m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000016E8                          1085m ; INPUT    - #LIVECOLOR COLOR IN FORMAT $00BBGGRR
000016E8                          1086m ; OUTPUT   - NONE
000016E8                          1087m ; MODIFIES - D0,D1
000016E8                          1088m ; -----------------------------------------------------------------------------
000016F4  5345                    1089              SUB.W   #1,D5             
000016F6  103C 0057               1090              MOVE.B  #87,D0
000016FA  323C 0215               1091              MOVE.W  #LIVEPOSX,D1
000016FE  3601                    1092              MOVE.W  D1,D3
00001700  0643 0040               1093              ADD.W   #LIVEWIDTH,D3
00001704  343C 001E               1094              MOVE.W  #LIVEPOSY,D2
00001708  3802                    1095              MOVE.W  D2,D4
0000170A  0644 0010               1096              ADD.W   #LIVEHEIGHT,D4
0000170E                          1097  .LOOP           
0000170E  4E4F                    1098              TRAP    #15
00001710  3203                    1099              MOVE.W  D3,D1
00001712  0643 0040               1100              ADD.W   #LIVEWIDTH,D3
00001716  51CD FFF6               1101              DBRA    D5,.LOOP
0000171A                          1102              
0000171A                          1103              ;PLOT SCORE
0000171A                          1104m             UTLLOCT PSCORETX,PSCORETY            
0000171A                          1105m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
0000171A                          1106m ; INPUT    - PSCORETX X, PSCORETY Y
0000171A                          1107m ; OUTPUT   - NONE
0000171A                          1108m ; MODIFIES - D0,D1
0000171A                          1109m ; -----------------------------------------------------------------------------
00001724                          1110m             UTLSIZC #PSCORECOL,TXMSIZE           ;PENCOLOR Y TAMAÑO
00001724                          1111m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001724                          1112m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR TXMSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001724                          1113m ; OUTPUT   - NONE
00001724                          1114m ; MODIFIES - D0,D1
00001724                          1115m ; -----------------------------------------------------------------------------
00001736                          1116m             UTLSFIL #$00000000
00001736                          1117m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001736                          1118m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001736                          1119m ; OUTPUT   - NONE
00001736                          1120m ; MODIFIES - D0,D1
00001736                          1121m ; -----------------------------------------------------------------------------
0000173E  43F9 00001756           1122              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
00001744  3239 00002A8A           1123              MOVE.W  PSCORE,D1
0000174A  103C 0011               1124              MOVE.B  #17,D0
0000174E  4E4F                    1125              TRAP    #15
00001750                          1126              
00001750                          1127  .END            
00001750  4CDF 023F               1128              MOVEM.L (A7)+,D0-D5/A1
00001754  4E75                    1129              RTS
00001756                          1130              
00001756= 53 43 4F 52 45 3A ...   1131  .TXTSCORE   DC.B    'SCORE: ',0
0000175E                          1132              DS.W    0
0000175E                          1133  
0000175E                          1134  
0000175E                          1135  
0000175E                          1136  
0000175E                          1137  
0000175E                          1138  
0000175E                          1139  
0000175E                          1140  
0000175E                          1141  
0000175E                          1142  
0000175E                          1143  
0000175E                          1144  
0000175E                          1145  
0000175E                          1146  
0000175E                          1147  
0000175E                          1148  
0000175E                          1149  
0000175E                          1150  -------------------- end include --------------------
0000175E                          1151              INCLUDE "STATES.X68"            ;
0000175E                          1152  ; =============================================================================
0000175E                          1153  ; GAME STATE MANAGEMENT
0000175E                          1154  ; =============================================================================
0000175E                          1155  
0000175E                          1156  ; -----------------------------------------------------------------------------
0000175E                          1157  STAINIT
0000175E                          1158  ; INITALIZES THE STATE MANAGER
0000175E                          1159  ; INPUT    - NONE
0000175E                          1160  ; OUTPUT   - NONE
0000175E                          1161  ; MODIFIES - NONE
0000175E                          1162  ; -----------------------------------------------------------------------------
0000175E  33FC FFFF 00002A80      1163              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
00001766                          1164             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
00001766  33FC 0000 00002A82      1165              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
0000176E  4E75                    1166              RTS
00001770                          1167  
00001770                          1168  ; -----------------------------------------------------------------------------
00001770                          1169  STAUPD
00001770                          1170  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
00001770                          1171  ; INPUT    - NONE
00001770                          1172  ; OUTPUT   - NONE
00001770                          1173  ; MODIFIES - NONE
00001770                          1174  ; -----------------------------------------------------------------------------
00001770  48E7 8080               1175              MOVEM.L D0/A0,-(A7)
00001774  4280                    1176              CLR.L   D0
00001776  3039 00002A82           1177              MOVE.W  (STANEXT),D0
0000177C  B079 00002A80           1178              CMP.W   (STACUR),D0
00001782  6700 0012               1179              BEQ     .DOUPD
00001786  33C0 00002A80           1180              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
0000178C  E588                    1181              LSL.L   #2,D0
0000178E  2040                    1182              MOVE.L  D0,A0
00001790  2068 17AE               1183              MOVE.L  .INITBL(A0),A0
00001794  4E90                    1184              JSR     (A0)
00001796  4280                    1185  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
00001798  3039 00002A80           1186              MOVE.W  (STACUR),D0
0000179E  E588                    1187              LSL.L   #2,D0
000017A0  2040                    1188              MOVE.L  D0,A0
000017A2  2068 17BE               1189              MOVE.L  .UPDTBL(A0),A0
000017A6  4E90                    1190              JSR     (A0)
000017A8  4CDF 0101               1191              MOVEM.L (A7)+,D0/A0
000017AC  4E75                    1192              RTS
000017AE= 00001892 00001806 ...   1193  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTYP,STAEMPTYG ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
000017BE                          1194                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
000017BE                          1195                                               ;EL 2 ES NO HACER NADA 
000017BE= 000018C8 00001838 ...   1196  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAGOVRU
000017CE                          1197                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
000017CE                          1198                                              ;EL 2 HACE QUE SE UPDATE 
000017CE                          1199  
000017CE                          1200  ; -----------------------------------------------------------------------------
000017CE                          1201  STAPLOT
000017CE                          1202  ; PERFORMS STATE PLOT
000017CE                          1203  ; INPUT    - NONE
000017CE                          1204  ; OUTPUT   - NONE
000017CE                          1205  ; MODIFIES - NONE
000017CE                          1206  ; -----------------------------------------------------------------------------
000017CE  48E7 8080               1207              MOVEM.L D0/A0,-(A7)
000017D2  4280                    1208              CLR.L   D0
000017D4  3039 00002A80           1209              MOVE.W  (STACUR),D0
000017DA  E588                    1210              LSL.L   #2,D0
000017DC  2040                    1211              MOVE.L  D0,A0
000017DE  2068 17EA               1212              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
000017E2  4E90                    1213              JSR     (A0)
000017E4  4CDF 0101               1214              MOVEM.L (A7)+,D0/A0
000017E8  4E75                    1215              RTS
000017EA= 000018FA 00001870 ...   1216  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAGOVRP
000017FA                          1217                             ;SPACE      NIVEL1   NIVEL2    NIVEL3   
000017FA                          1218  
000017FA                          1219  ; -----------------------------------------------------------------------------
000017FA                          1220  STAEMPTYP
000017FA                          1221  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
000017FA                          1222  ; INPUT    - NONE
000017FA                          1223  ; OUTPUT   - NONE
000017FA                          1224  ; MODIFIES - NONE
000017FA                          1225  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
000017FA                          1226  ; -----------------------------------------------------------------------------
000017FA  4E75                    1227              RTS
000017FC                          1228  ; -----------------------------------------------------------------------------
000017FC                          1229  STAEMPTYG
000017FC                          1230  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
000017FC                          1231  ; INPUT    - NONE
000017FC                          1232  ; OUTPUT   - NONE
000017FC                          1233  ; MODIFIES - NONE
000017FC                          1234  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
000017FC                          1235  ; -----------------------------------------------------------------------------
000017FC  4EB8 15BE               1236              JSR     UTLWRRNK                ;ESCRIBE EN EL TABLE
00001800  4EB8 15EE               1237              JSR     UTLWRFILE               ;ESCRIBIMOS EN EL FICHERO
00001804  4E75                    1238              RTS
00001806                          1239  
00001806                          1240  ; -----------------------------------------------------------------------------
00001806                          1241  STAPLAYI    ;DEL NIVEL1, COMIENZO
00001806                          1242  
00001806                          1243  ; PLAY STATE INITIALIZATION.
00001806                          1244  ; INPUT    - NONE
00001806                          1245  ; OUTPUT   - NONE
00001806                          1246  ; MODIFIES - NONE
00001806                          1247  ; NOTE     - JUST A WRAPPER FOR PLRINIT
00001806                          1248  ; -----------------------------------------------------------------------------
00001806  48E7 FFFE               1249              MOVEM.L D0-D7/A0-A6,-(A7)
0000180A                          1250              
0000180A                          1251m             UTLSNDST
0000180A                          1252m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
0000180A                          1253m ; INPUT    - NONE 
0000180A                          1254m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000180A                          1255m ; MODIFIES - D0,A1
0000180A                          1256m ; -----------------------------------------------------------------------------
00001812  33FC 00FB 00002AE8      1257              MOVE.W  #BINPOSX,BPOSX1
0000181A  33FC 01CE 00002AEE      1258              MOVE.W  #BINPOSY,BPOSY2
00001822  33FC 0105 00002AEA      1259              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
0000182A  33FC 01C4 00002AEC      1260              MOVE.W  #BINPOSY-BDIAMET,BPOSY1
00001832  4CDF 7FFF               1261              MOVEM.L (A7)+,D0-D7/A0-A6
00001836  4E75                    1262              RTS
00001838                          1263  ; -----------------------------------------------------------------------------
00001838                          1264  STASPACEU
00001838                          1265  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
00001838                          1266  ; INPUT    - NONE
00001838                          1267  ; OUTPUT   - NONE
00001838                          1268  ; MODIFIES - NONE
00001838                          1269  ; -----------------------------------------------------------------------------
00001838  33FC 00E0 00002A84      1270              MOVE.W  #PINPOSX1,PPOSX
00001840  0839 0004 00001DE5      1271              BTST.B  #KBDBITF1,(KBDEDGE)
00001848  6700 000A               1272              BEQ     .END
0000184C  33FC 0002 00002A82      1273              MOVE.W  #STAPLAY,(STANEXT)
00001854                          1274  .END        
00001854  4E75                    1275              RTS
00001856                          1276                               
00001856                          1277  
00001856                          1278  ; -----------------------------------------------------------------------------
00001856                          1279  STAPLAYU
00001856                          1280  ; PLAY STATE UPDATE
00001856                          1281  ; INPUT    - NONE
00001856                          1282  ; OUTPUT   - NONE
00001856                          1283  ; MODIFIES - NONE
00001856                          1284  ; -----------------------------------------------------------------------------
00001856  48E7 FFFE               1285              MOVEM.L D0-D7/A0-A6,-(A7)
0000185A  4EB8 1648               1286              JSR     PLRUPD
0000185E  4EB9 00001AAC           1287              JSR     BUPD    
00001864  4EB9 00001CDE           1288              JSR     BLUPD
0000186A  4CDF 7FFF               1289              MOVEM.L (A7)+,D0-D7/A0-A6          
0000186E  4E75                    1290              RTS
00001870                          1291  ; -----------------------------------------------------------------------------
00001870                          1292  STAPLAYP
00001870                          1293  ; PLAY STATE PLOT
00001870                          1294  ; INPUT    - NONE
00001870                          1295  ; OUTPUT   - NONE
00001870                          1296  ; MODIFIES - NONE
00001870                          1297  ; -----------------------------------------------------------------------------
00001870  48E7 FFFE               1298              MOVEM.L D0-D7/A0-A6,-(A7)
00001874  4EB8 1562               1299              JSR     UTLREADRNK
00001878  4EB9 00001D38           1300              JSR     BLPLOT
0000187E  4EB8 1694               1301              JSR     PPLOT
00001882  4EB9 00001B78           1302              JSR     BPLOT
00001888  4EB8 14A0               1303              JSR     UTLSCTRLP
0000188C  4CDF 7FFF               1304              MOVEM.L (A7)+,D0-D7/A0-A6 
00001890  4E75                    1305              RTS
00001892                          1306  
00001892                          1307  ; -----------------------------------------------------------------------------
00001892                          1308  STAINTRI                  ;VACIA LA MEMORIA DEL JUEGO
00001892                          1309  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
00001892                          1310  
00001892                          1311  ; INTRO STATE INIT
00001892                          1312  ; INPUT    - NONE
00001892                          1313  ; OUTPUT   - NONE
00001892                          1314  ; MODIFIES - NONE
00001892                          1315  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
00001892                          1316  ; -----------------------------------------------------------------------------
00001892                          1317                ;LEE TODOS LOS DATOS DEL FICHERO Y LO GUARDA EN LA TABLA
00001892  4EB8 1514               1318              JSR     UTLREADFILE
00001896                          1319               ;GUARDA EL NOMBRE EN LA MEMORIA
00001896                          1320m             UTLSVNAME
00001896                          1321m ;SAVES THE NAME OS THE PLAYER
00001896                          1322m ;MAX CARACTERS: 20
00001896                          1323m ; -----------------------------------------------------------------------------
000018C2  4EB8 111A               1324              JSR     DMMINIT
000018C6                          1325              
000018C6  4E75                    1326              RTS
000018C8                          1327  ; -----------------------------------------------------------------------------
000018C8                          1328  STAINTRU
000018C8                          1329  ; INTRO STATE UPDATE
000018C8                          1330  ; INPUT    - NONE
000018C8                          1331  ; OUTPUT   - NONE
000018C8                          1332  ; MODIFIES - NONE
000018C8                          1333  ; -----------------------------------------------------------------------------
000018C8  48E7 FFFE               1334              MOVEM.L D0-D7/A0-A6,-(A7)
000018CC                          1335              
000018CC  0839 0004 00001DE5      1336              BTST.B  #KBDBITF1,(KBDEDGE)
000018D4  6700 001E               1337              BEQ     .END
000018D8                          1338              
000018D8  33FC 0001 00002A82      1339              MOVE.W  #STASPACE,(STANEXT)
000018E0  4EB9 00001BB8           1340              JSR     BLINIT
000018E6  33FC 0003 00002A88      1341              MOVE.W  #PINLIVE,PLIVES
000018EE  4279 00002A8A           1342              CLR.W   PSCORE            
000018F4                          1343  .END        
000018F4  4CDF 7FFF               1344              MOVEM.L (A7)+,D0-D7/A0-A6
000018F8  4E75                    1345              RTS
000018FA                          1346  
000018FA                          1347  ; -----------------------------------------------------------------------------
000018FA                          1348  STAINTRP
000018FA                          1349  ; INTRO STATE PLOT
000018FA                          1350  ; INPUT    - NONE
000018FA                          1351  ; OUTPUT   - NONE
000018FA                          1352  ; MODIFIES - NONE
000018FA                          1353  ; -----------------------------------------------------------------------------
000018FA  48E7 E040               1354              MOVEM.L D0-D2/A1,-(A7)
000018FE                          1355              ;TITULO
000018FE                          1356m             UTLLOCT INTTITX,INTTITY      
000018FE                          1357m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000018FE                          1358m ; INPUT    - INTTITX X, INTTITY Y
000018FE                          1359m ; OUTPUT   - NONE
000018FE                          1360m ; MODIFIES - D0,D1
000018FE                          1361m ; -----------------------------------------------------------------------------
00001908                          1362m             UTLSIZC #INTTITC,TXBSIZE
00001908                          1363m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001908                          1364m ; INPUT    - #INTTITC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001908                          1365m ; OUTPUT   - NONE
00001908                          1366m ; MODIFIES - D0,D1
00001908                          1367m ; -----------------------------------------------------------------------------
0000191A  43F9 0000197E           1368              LEA     .TITSTR,A1            
00001920  103C 000E               1369              MOVE.B  #14,D0
00001924  4E4F                    1370              TRAP    #15
00001926                          1371              
00001926                          1372              ;START
00001926                          1373m             UTLLOCT INTPRSX,INTPRSY
00001926                          1374m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001926                          1375m ; INPUT    - INTPRSX X, INTPRSY Y
00001926                          1376m ; OUTPUT   - NONE
00001926                          1377m ; MODIFIES - D0,D1
00001926                          1378m ; -----------------------------------------------------------------------------
00001930                          1379m             UTLSIZC #INTPRSC,TXSSIZE
00001930                          1380m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001930                          1381m ; INPUT    - #INTPRSC COLOR IN FORMAT $00BBGGRR TXSSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001930                          1382m ; OUTPUT   - NONE
00001930                          1383m ; MODIFIES - D0,D1
00001930                          1384m ; -----------------------------------------------------------------------------
00001942  43F9 0000198E           1385              LEA     .PRSSTR,A1
00001948  103C 000E               1386              MOVE.B  #14,D0
0000194C  4E4F                    1387              TRAP    #15
0000194E                          1388              
0000194E                          1389m             UTLSNDS .SOUND,#1
0000194E                          1390m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000194E                          1391m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
0000194E                          1392m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000194E                          1393m ; MODIFIES - D0,A1
0000194E                          1394m ; -----------------------------------------------------------------------------
00001964                          1395              
00001964  4CDF 0207               1396              MOVEM.L (A7)+,D0-D2/A1
00001968  4E75                    1397              RTS
0000196A= 73746172 74206C61 ...   1398  .SOUND      DC.L    'start largo.wav',0
0000197E= 42 72 65 61 6B 69 ...   1399  .TITSTR     DC.B    'Breaking Blocks',0
0000198E= 50 55 53 48 20 46 ...   1400  .PRSSTR     DC.B    'PUSH FIRE TO START',0
000019A2                          1401              DS.W    0
000019A2                          1402  ; -----------------------------------------------------------------------------
000019A2                          1403  STAGOVRU
000019A2                          1404  ; GAME OVER STATE UPDATE
000019A2                          1405  ; INPUT    - NONE
000019A2                          1406  ; OUTPUT   - NONE
000019A2                          1407  ; MODIFIES - NONE
000019A2                          1408  ; -----------------------------------------------------------------------------
000019A2                          1409              ;visualiza el fichero
000019A2                          1410m             UTLSPEN #$00FFFFFF
000019A2                          1411m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000019A2                          1412m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
000019A2                          1413m ; OUTPUT   - NONE
000019A2                          1414m ; MODIFIES - D0,D1
000019A2                          1415m ; -----------------------------------------------------------------------------
000019AE                          1416m             UTLSFIL #$00000000
000019AE                          1417m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000019AE                          1418m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
000019AE                          1419m ; OUTPUT   - NONE
000019AE                          1420m ; MODIFIES - D0,D1
000019AE                          1421m ; -----------------------------------------------------------------------------
000019B6                          1422              
000019B6  0839 0004 00001DE5      1423              BTST.B  #KBDBITF1,(KBDEDGE)
000019BE  6700 0012               1424              BEQ     .END
000019C2                          1425m             UTLSNDST
000019C2                          1426m ; WRAPPER FOR STOPPING WAV FILE TRAP 15 TASK
000019C2                          1427m ; INPUT    - NONE 
000019C2                          1428m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000019C2                          1429m ; MODIFIES - D0,A1
000019C2                          1430m ; -----------------------------------------------------------------------------
000019CA  33FC 0000 00002A82      1431              MOVE.W  #STAINTR,(STANEXT)
000019D2  4E75                    1432  .END        RTS
000019D4                          1433  
000019D4                          1434  ; -----------------------------------------------------------------------------
000019D4                          1435  STAGOVRP
000019D4                          1436  ; GAME OVER STATE PLOT
000019D4                          1437  ; INPUT    - NONE
000019D4                          1438  ; OUTPUT   - NONE
000019D4                          1439  ; MODIFIES - NONE
000019D4                          1440  ; -----------------------------------------------------------------------------
000019D4                          1441  
000019D4  48E7 E040               1442              MOVEM.L A1/D0-D2,-(A7)
000019D8                          1443              
000019D8                          1444              ;GAME OVER TEXT
000019D8                          1445m             UTLLOCT GOVERX,GOVERY            
000019D8                          1446m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000019D8                          1447m ; INPUT    - GOVERX X, GOVERY Y
000019D8                          1448m ; OUTPUT   - NONE
000019D8                          1449m ; MODIFIES - D0,D1
000019D8                          1450m ; -----------------------------------------------------------------------------
000019E2                          1451m             UTLSIZC #GOVERC,TXBSIZE
000019E2                          1452m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
000019E2                          1453m ; INPUT    - #GOVERC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
000019E2                          1454m ; OUTPUT   - NONE
000019E2                          1455m ; MODIFIES - D0,D1
000019E2                          1456m ; -----------------------------------------------------------------------------
000019F4                          1457m             UTLSFIL #$00000000
000019F4                          1458m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000019F4                          1459m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
000019F4                          1460m ; OUTPUT   - NONE
000019F4                          1461m ; MODIFIES - D0,D1
000019F4                          1462m ; -----------------------------------------------------------------------------
000019FC  43F9 00001A0E           1463              LEA     .GOVSTR,A1              ;PONE EL TEXTO
00001A02  103C 000E               1464              MOVE.B  #14,D0
00001A06  4E4F                    1465              TRAP    #15
00001A08                          1466  
00001A08  4CDF 0207               1467              MOVEM.L (A7)+,A1/D0-D2
00001A0C  4E75                    1468              RTS
00001A0E= 47 41 4D 45 20 4F ...   1469  .GOVSTR     DC.B    'GAME OVER',0
00001A18                          1470              DS.W    0
00001A18                          1471  
00001A18                          1472  
00001A18                          1473  
00001A18                          1474  
00001A18                          1475  
00001A18                          1476  
00001A18                          1477  
00001A18                          1478  
00001A18                          1479  
00001A18                          1480  
00001A18                          1481  
00001A18                          1482  
00001A18                          1483  -------------------- end include --------------------
00001A18                          1484              INCLUDE "BALL.X68"              ;LA PELOTA
00001A18                          1485  ; =============================================================================
00001A18                          1486  ; BALL
00001A18                          1487  ; =============================================================================
00001A18                          1488  ;----------------------------------
00001A18                          1489  BINIT
00001A18                          1490  ;INITIALIZE THE BALL
00001A18                          1491  ;----------------------------------
00001A18  33FC 00FB 00002AE8      1492              MOVE.W  #BINPOSX,BPOSX1
00001A20  33FC 01CE 00002AEE      1493              MOVE.W  #BINPOSY,BPOSY2
00001A28  33FC 0105 00002AEA      1494              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
00001A30  33FC 01C4 00002AEC      1495              MOVE.W  #BINPOSY-BDIAMET,BPOSY1
00001A38  33FC FFFD 00002AE0      1496              MOVE.W  #BINSPEED,BSPEEDX
00001A40  33FC FFFD 00002AE2      1497              MOVE.W  #BINSPEED,BSPEEDY
00001A48  4E75                    1498              RTS
00001A4A                          1499  ;----------------------------------         
00001A4A                          1500  BNXTLEV
00001A4A                          1501  ;INITIALIZE THE BALL TO THE NEXT LEVEL
00001A4A                          1502  ;----------------------------------
00001A4A                          1503  ;BALL NEXT LEVEL       (NEXT LEVEL)
00001A4A  48E7 8000               1504              MOVEM.L D0,-(A7)
00001A4E  33FC 00FB 00002AE8      1505              MOVE.W  #BINPOSX,BPOSX1
00001A56  33FC 01CE 00002AEC      1506              MOVE.W  #BINPOSY,BPOSY1
00001A5E  33FC 0105 00002AEA      1507              MOVE.W  #BINPOSX+BDIAMET,BPOSX2
00001A66  33FC 0105 00002AEE      1508              MOVE.W  #BINPOSX+BDIAMET,BPOSY2
00001A6E  3039 00002AE2           1509              MOVE.W  BSPEEDY,D0
00001A74  6B00 000E               1510              BMI     .NEGY
00001A78  5279 00002AE2           1511              ADD.W   #1,BSPEEDY
00001A7E  4EB9 00001A8A           1512              JSR     .X
00001A84                          1513  .NEGY        
00001A84  5379 00002AE2           1514              SUB.W   #1,BSPEEDY
00001A8A                          1515  .X          
00001A8A  3039 00002AE0           1516              MOVE.W  BSPEEDX,D0
00001A90  6B00 000E               1517              BMI     .NEGX 
00001A94  5279 00002AE0           1518              ADD.W   #1,BSPEEDX
00001A9A  4EB9 00001AA6           1519              JSR     .END
00001AA0                          1520  .NEGX       
00001AA0  5379 00002AE0           1521              SUB.W   #1,BSPEEDX 
00001AA6                          1522  .END        
00001AA6  4CDF 0001               1523              MOVEM.L (A7)+,D0
00001AAA  4E75                    1524              RTS
00001AAC                          1525        
00001AAC                          1526  ;-----------------------------------------------------------------------------
00001AAC                          1527  BUPD
00001AAC                          1528  ;UPDATES THE BALL
00001AAC                          1529  ;-----------------------------------
00001AAC                          1530  ; UPDATES THE BALL MOTION
00001AAC                          1531  ; INPUT    - NONE 
00001AAC                          1532  ; OUTPUT   - NONE 
00001AAC                          1533  ; MODIFIES - NONE
00001AAC                          1534  ; -----------------------------------------------------------------------------
00001AAC                          1535  
00001AAC  48E7 FF80               1536              MOVEM.L D0-D7/A0,-(A7)
00001AB0                          1537              ;COMPRUEBA COLISIONES CON LAS 4 PAREDES
00001AB0                          1538              ;Y SI PASA LA DE ABAJO LE ELIMINA UNA VIDA, O ENVIA LA PANTALLA GAME OVER
00001AB0  3039 00002AE8           1539              MOVE.W  BPOSX1,D0
00001AB6  3239 00002AEC           1540              MOVE.W  BPOSY1,D1
00001ABC  3439 00002AEA           1541              MOVE.W  BPOSX2,D2
00001AC2  3639 00002AEE           1542              MOVE.W  BPOSY2,D3
00001AC8  4EB8 1216               1543              JSR     UTLCHCOLW               ;COMPRUEBA COLISIÓN CON PAREDES               
00001ACC  4EB8 1328               1544              JSR     UTLCHCOLP               ;COMPRUEBA COLISIÓN CON PLATAFORMA
00001AD0  4284                    1545              CLR.L  D4
00001AD2  3A39 00002AEA           1546              MOVE.W  BPOSX2,D5
00001AD8  3C39 00002AEE           1547              MOVE.W  BPOSY2,D6
00001ADE  4EB8 13C0               1548              JSR     UTLCOLBL
00001AE2                          1549              
00001AE2  B87C 0000               1550              CMP     #0,D4
00001AE6  6600 0066               1551              BNE     .END
00001AEA  3039 00002AEA           1552              MOVE.W  BPOSX2,D0
00001AF0  3239 00002AEC           1553              MOVE.W  BPOSY1,D1
00001AF6  3A39 00002AE8           1554              MOVE.W  BPOSX1,D5
00001AFC  3C39 00002AEE           1555              MOVE.W  BPOSY2,D6
00001B02  4EB8 13C0               1556              JSR     UTLCOLBL
00001B06  B87C 0000               1557              CMP     #0,D4
00001B0A  6600 0042               1558              BNE     .END
00001B0E  3039 00002AE8           1559              MOVE.W  BPOSX1,D0
00001B14  3239 00002AEE           1560              MOVE.W  BPOSY2,D1
00001B1A  3A39 00002AEA           1561              MOVE.W  BPOSX2,D5
00001B20  3C39 00002AEC           1562              MOVE.W  BPOSY1,D6
00001B26  4EB8 13C0               1563              JSR     UTLCOLBL
00001B2A  B87C 0000               1564              CMP     #0,D4
00001B2E  6600 001E               1565              BNE     .END
00001B32  3039 00002AEA           1566              MOVE.W  BPOSX2,D0
00001B38  3239 00002AEE           1567              MOVE.W  BPOSY2,D1
00001B3E  3A39 00002AE8           1568              MOVE.W  BPOSX1,D5
00001B44  3C39 00002AEC           1569              MOVE.W  BPOSY1,D6
00001B4A  4EB8 13C0               1570              JSR     UTLCOLBL   
00001B4E                          1571  
00001B4E                          1572  .END            
00001B4E                          1573  
00001B4E  3039 00002AE0           1574              MOVE.W  BSPEEDX,D0              ;POSICIÓN = POSICIÓN + VELOCIDAD
00001B54  D179 00002AE8           1575              ADD.W   D0,BPOSX1
00001B5A  D179 00002AEA           1576              ADD.W   D0,BPOSX2
00001B60                          1577              
00001B60  3239 00002AE2           1578              MOVE.W  BSPEEDY,D1
00001B66  D379 00002AEC           1579              ADD.W   D1,BPOSY1
00001B6C  D379 00002AEE           1580              ADD.W   D1,BPOSY2
00001B72  4CDF 01FF               1581              MOVEM.L (A7)+,D0-D7/A0
00001B76                          1582              
00001B76  4E75                    1583              RTS
00001B78                          1584  
00001B78                          1585  BPLOT       
00001B78  48E7 F800               1586              MOVEM.L  D0-D4,-(A7)
00001B7C                          1587              ;CONTOUR COLOR
00001B7C  223C 00FFFFFF           1588              MOVE.L  #BINCOLOR,D1  
00001B82  103C 0050               1589              MOVE.B  #80,D0
00001B86  4E4F                    1590              TRAP    #15
00001B88                          1591      
00001B88                          1592               ;FILL COLOR
00001B88  223C 00FFFFFF           1593              MOVE.L   #BINCOLOR,D1  
00001B8E  103C 0051               1594              MOVE.B  #81,D0
00001B92  4E4F                    1595              TRAP    #15
00001B94                          1596   
00001B94                          1597              ;CIRCLE
00001B94                          1598  
00001B94  3239 00002AE8           1599              MOVE.W  BPOSX1,D1
00001B9A  3439 00002AEC           1600              MOVE.W  BPOSY1,D2
00001BA0  3639 00002AEA           1601              MOVE.W  BPOSX2,D3
00001BA6  3839 00002AEE           1602              MOVE.W  BPOSY2,D4
00001BAC  103C 0058               1603              MOVE.B  #88,D0
00001BB0  4E4F                    1604              TRAP    #15
00001BB2                          1605      
00001BB2  4CDF 001F               1606              MOVEM.L  (A7)+,D0-D4
00001BB6                          1607  
00001BB6  4E75                    1608              RTS
00001BB8                          1609  
00001BB8                          1610  
00001BB8                          1611  
00001BB8                          1612  
00001BB8                          1613  
00001BB8                          1614  
00001BB8                          1615  
00001BB8                          1616  
00001BB8                          1617  
00001BB8                          1618  
00001BB8                          1619  
00001BB8                          1620  
00001BB8                          1621  
00001BB8                          1622  
00001BB8                          1623  
00001BB8                          1624  
00001BB8                          1625  
00001BB8                          1626  
00001BB8                          1627  
00001BB8                          1628  
00001BB8                          1629  
00001BB8                          1630  
00001BB8                          1631  
00001BB8                          1632  
00001BB8                          1633  
00001BB8                          1634  
00001BB8                          1635  
00001BB8                          1636  
00001BB8                          1637  -------------------- end include --------------------
00001BB8                          1638              INCLUDE "BLOCKS.X68"           ;BLOQUES
00001BB8                          1639  ;-----------------------------------------------------------
00001BB8                          1640  ;           BLOCKS
00001BB8                          1641  ;-----------------------------------------------------------
00001BB8                          1642    
00001BB8                          1643  BLINIT
00001BB8                          1644  
00001BB8  41F9 00002AF2           1645              LEA.L   BLMATRIX,A0
00001BBE  303C 000B               1646              MOVE.W  #BLROW-1,D0             ;7
00001BC2                          1647  .LOOP       
00001BC2  10FC 00FF               1648              MOVE.B  #%11111111,(A0)+
00001BC6  51C8 FFFA               1649              DBRA    D0,.LOOP
00001BCA                          1650              
00001BCA  33FC 00E0 00002A84      1651              MOVE.W  #PINPOSX1,PPOSX
00001BD2  33FC 0040 00002A86      1652              MOVE.W  #PINWIDTH1,PWIDTH
00001BDA                          1653              
00001BDA  4279 00002AF0           1654              CLR.W   BLCOUNTER
00001BE0  33FC 0001 00002A8E      1655              MOVE.W  #1,LEVEL
00001BE8  33FC FFFD 00002AE0      1656              MOVE.W  #BINSPEED,BSPEEDX
00001BF0  33FC FFFD 00002AE2      1657              MOVE.W  #BINSPEED,BSPEEDY
00001BF8  4479 00002AE0           1658              NEG.W   BSPEEDX
00001BFE  4EB9 00001D92           1659              JSR     BLCONBL
00001C04  4E75                    1660              RTS
00001C06                          1661  BLLEV2           
00001C06                          1662              
00001C06  41F9 00002AF2           1663              LEA.L   BLMATRIX,A0
00001C0C                          1664  
00001C0C  10FC 00FF               1665              MOVE.B  #%11111111,(A0)+
00001C10  10FC 0077               1666              MOVE.B  #%01110111,(A0)+
00001C14  10FC 0077               1667              MOVE.B  #%01110111,(A0)+
00001C18  10FC 0077               1668              MOVE.B  #%01110111,(A0)+
00001C1C  10FC 0077               1669              MOVE.B  #%01110111,(A0)+
00001C20  10FC 0077               1670              MOVE.B  #%01110111,(A0)+
00001C24  10FC 00BB               1671              MOVE.B  #%10111011,(A0)+
00001C28  10FC 00BB               1672              MOVE.B  #%10111011,(A0)+
00001C2C  10FC 00BB               1673              MOVE.B  #%10111011,(A0)+
00001C30  10FC 00BB               1674              MOVE.B  #%10111011,(A0)+
00001C34  10FC 00BB               1675              MOVE.B  #%10111011,(A0)+
00001C38  10FC 00FF               1676              MOVE.B  #%11111111,(A0)+ 
00001C3C                          1677  
00001C3C                          1678  
00001C3C  4279 00002AF0           1679              CLR.W   BLCOUNTER
00001C42                          1680              
00001C42  33FC 00E4 00002A84      1681              MOVE.W  #PINPOSX2,PPOSX
00001C4A  33FC 0038 00002A86      1682              MOVE.W  #PINWIDTH2,PWIDTH
00001C52                          1683  
00001C52  303C FFFD               1684              MOVE.W  #BINSPEED,D0
00001C56  5340                    1685              SUBQ.W  #1,D0
00001C58                          1686              
00001C58  33C0 00002AE0           1687              MOVE.W  D0,BSPEEDX
00001C5E  33C0 00002AE2           1688              MOVE.W  D0,BSPEEDY
00001C64  4479 00002AE0           1689              NEG.W   BSPEEDX
00001C6A  4EB9 00001D92           1690              JSR     BLCONBL
00001C70  4E75                    1691              RTS
00001C72                          1692              
00001C72                          1693  BLLEV3              
00001C72  41F9 00002AF2           1694              LEA.L   BLMATRIX,A0         
00001C78  10FC 00F5               1695              MOVE.B  #%11110101,(A0)+
00001C7C  10FC 00A5               1696              MOVE.B  #%10100101,(A0)+
00001C80  10FC 00A5               1697              MOVE.B  #%10100101,(A0)+
00001C84  10FC 00A5               1698              MOVE.B  #%10100101,(A0)+
00001C88  10FC 00A5               1699              MOVE.B  #%10100101,(A0)+
00001C8C  10FC 00E5               1700              MOVE.B  #%11100101,(A0)+
00001C90  10FC 00A5               1701              MOVE.B  #%10100101,(A0)+
00001C94  10FC 00A5               1702              MOVE.B  #%10100101,(A0)+
00001C98  10FC 00A5               1703              MOVE.B  #%10100101,(A0)+
00001C9C  10FC 00A5               1704              MOVE.B  #%10100101,(A0)+
00001CA0  10FC 00A5               1705              MOVE.B  #%10100101,(A0)+
00001CA4  10FC 00F5               1706              MOVE.B  #%11110101,(A0)+
00001CA8                          1707  
00001CA8                          1708  
00001CA8  4279 00002AF0           1709              CLR.W   BLCOUNTER
00001CAE  33FC 00E8 00002A84      1710              MOVE.W  #PINPOSX3,PPOSX
00001CB6  33FC 0030 00002A86      1711              MOVE.W  #PINWIDTH3,PWIDTH
00001CBE                          1712              
00001CBE  303C FFFD               1713              MOVE.W  #BINSPEED,D0
00001CC2  5540                    1714              SUBQ.W  #2,D0
00001CC4                          1715              
00001CC4  33C0 00002AE0           1716              MOVE.W  D0,BSPEEDX
00001CCA  33C0 00002AE2           1717              MOVE.W  D0,BSPEEDY
00001CD0  4479 00002AE0           1718              NEG.W   BSPEEDX
00001CD6  4EB9 00001D92           1719              JSR     BLCONBL
00001CDC  4E75                    1720              RTS
00001CDE                          1721              
00001CDE                          1722  BLUPD       
00001CDE  3039 00002AF0           1723              MOVE.W  BLCOUNTER,D0
00001CE4  B07C 0000               1724              CMP     #0,D0                   ;SI NO HAY BLOQUES SALTA
00001CE8  6700 0004               1725              BEQ     .NEXTLEVEL
00001CEC  4E75                    1726              RTS
00001CEE                          1727  .NEXTLEVEL  
00001CEE                          1728              
00001CEE  5279 00002A8E           1729              ADD.W   #1,LEVEL
00001CF4  3239 00002A8E           1730              MOVE.W  LEVEL,D1
00001CFA  B27C 0004               1731              CMP     #4,D1
00001CFE  6700 002E               1732              BEQ     .WON
00001D02  B27C 0003               1733              CMP     #3,D1              
00001D06  6700 0010               1734              BEQ     .NIVEL3
00001D0A  33FC 0001 00002A82      1735              MOVE.W  #STASPACE,(STANEXT)
00001D12  4EF8 1C06               1736              JMP     BLLEV2
00001D16  4E75                    1737              RTS
00001D18                          1738  .NIVEL3
00001D18  B27C 0003               1739              CMP.W   #3,D1
00001D1C  6600 0010               1740              BNE     .WON
00001D20  33FC 0001 00002A82      1741              MOVE.W  #STASPACE,STANEXT
00001D28  4EF8 1C72               1742              JMP     BLLEV3 
00001D2C  4E75                    1743              RTS
00001D2E                          1744  .WON        
00001D2E  33FC 0003 00002A82      1745              MOVE.W  #STAGOVR,STANEXT  
00001D36  4E75                    1746              RTS          
00001D38                          1747  
00001D38                          1748  BLPLOT
00001D38  103C 0050               1749              MOVE.B  #80,D0                  ;SET PEN COLOR
00001D3C  7200                    1750              MOVE.L  #0,D1
00001D3E  4E4F                    1751              TRAP    #15
00001D40                          1752              
00001D40  4242                    1753              CLR.W   D2                      ;UPPER Y
00001D42  383C 0010               1754              MOVE.W  #BLHEIGHT,D4            ;DOWN Y
00001D46  41F8 11E6               1755              LEA     COLORS,A0
00001D4A                          1756              
00001D4A  3A3C 000B               1757              MOVE.W  #BLROW-1,D5    ;DBRA
00001D4E  227C 00000000           1758              MOVE.L  #0,A1                      ;PARA SABER CUAL PONER D6= FILA
00001D54                          1759              
00001D54                          1760  .LOOP2                                      ;BUCLE DE FILAS
00001D54                          1761   
00001D54  103C 0051               1762              MOVE.B  #81,D0                  ;SET COLOR
00001D58  2218                    1763              MOVE.L  (A0)+,D1
00001D5A  4E4F                    1764              TRAP    #15
00001D5C                          1765              
00001D5C  363C 0040               1766              MOVE.W  #BLWIDTH,D3             ;RIGHT X
00001D60  4241                    1767              CLR.W   D1                      ;LEFT X
00001D62                          1768              
00001D62  3F05                    1769              MOVE.W  D5,-(A7)                ;GUARDO EL VALOR DEL DECREMENTO DE LOOP2
00001D64  3A3C 0007               1770              MOVE.W  #BLCOL-1,D5
00001D68  1C29 2AF2               1771              MOVE.B  BLMATRIX(A1),D6
00001D6C                          1772  .LOOP1                                      ; BUCLE COLUMNAS
00001D6C  E31E                    1773              ROL.B   #1,D6
00001D6E  6400 0008               1774              BCC     .SALTO                  ; SALTA SI CARRY = 0
00001D72                          1775              
00001D72  103C 0057               1776              MOVE.B  #87,D0                  ; DIBUJAMOS EL CUADRADO
00001D76  4E4F                    1777              TRAP    #15
00001D78                          1778  .SALTO
00001D78  3203                    1779              MOVE.W  D3,D1
00001D7A  0643 0040               1780              ADD.W   #BLWIDTH, D3
00001D7E                          1781  ;;;
00001D7E  51CD FFEC               1782              DBRA    D5,.LOOP1 
00001D82  3A1F                    1783              MOVE.W  (A7)+,D5              
00001D84                          1784  
00001D84  5249                    1785              ADDA.W  #1,A1
00001D86  3404                    1786              MOVE.W  D4,D2
00001D88  0644 0010               1787              ADD.W   #BLHEIGHT,D4
00001D8C  51CD FFC6               1788              DBRA    D5,.LOOP2
00001D90  4E75                    1789              RTS
00001D92                          1790  
00001D92                          1791  BLCONBL
00001D92                          1792              
00001D92  3A3C 000B               1793              MOVE.W  #BLROW-1,D5    ;DBRA FILAS
00001D96  227C 00000000           1794              MOVE.L  #0,A1          ;PARA SABER CUAL PONER D6= FILA
00001D9C                          1795              
00001D9C                          1796  .LOOP2                                      ;BUCLE DE FILAS            
00001D9C  3E3C 0007               1797              MOVE.W  #BLCOL-1,D7                ;DBRA COLUMNAS
00001DA0  1C29 2AF2               1798              MOVE.B  BLMATRIX(A1),D6
00001DA4                          1799  .LOOP1                                      ; BUCLE COLUMNAS
00001DA4  E31E                    1800              ROL.B   #1,D6
00001DA6  6400 0008               1801              BCC     .SALTO                  ; SALTA SI CARRY = 0
00001DAA  5279 00002AF0           1802              ADD.W   #1,BLCOUNTER
00001DB0                          1803  .SALTO
00001DB0  51CF FFF2               1804              DBRA    D7,.LOOP1   
00001DB4  5289                    1805              ADDA.L  #1,A1
00001DB6  51CD FFE4               1806              DBRA    D5,.LOOP2
00001DBA  4E75                    1807              RTS
00001DBC                          1808  
00001DBC                          1809  
00001DBC                          1810  
00001DBC                          1811  
00001DBC                          1812  
00001DBC                          1813  
00001DBC                          1814  
00001DBC                          1815  -------------------- end include --------------------
00001DBC                          1816  
00001DBC                          1817  ; --- INITIALIZE --------------------------------------------------------------
00001DBC                          1818              
00001DBC  4EB8 1000               1819  START       JSR     SYSINIT
00001DC0                          1820              ; TO DO: CALL GAME INITIALIZATION CODE HERE
00001DC0  4EB8 175E               1821              JSR     STAINIT                 ;INICIA LAS PANTALLAS            
00001DC4                          1822              
00001DC4                          1823  ; --- UPDATE ------------------------------------------------------------------
00001DC4                          1824  
00001DC4  4E40                    1825  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
00001DC6                          1826                                              ; UPDATE DEPENDING ON THE STATE
00001DC6                          1827              ; TO DO: CALL GAME UPDATE CODE HERE
00001DC6  4EB8 1770               1828              JSR     STAUPD
00001DCA                          1829  
00001DCA                          1830  ; --- WAIT SYNCH --------------------------------------------------------------
00001DCA                          1831  
00001DCA  4A39 00001DE6           1832  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001DD0  67F8                    1833              BEQ     .WINT
00001DD2                          1834              
00001DD2  4239 00001DE6           1835              CLR.B   (SCRINTCT)
00001DD8                          1836  
00001DD8                          1837  ; --- PLOT --------------------------------------------------------------------
00001DD8                          1838              
00001DD8                          1839              ; TO DO: CALL GAME PLOT CODE HERE
00001DD8  4EB8 17CE               1840              JSR     STAPLOT
00001DDC                          1841  
00001DDC  4E41                    1842              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001DDE  60E4                    1843              BRA     .LOOP
00001DE0  FFFF FFFF               1844              SIMHALT
00001DE4                          1845  
00001DE4                          1846  ; --- VARIABLES ---------------------------------------------------------------
00001DE4                          1847  
00001DE4                          1848              INCLUDE "SYSVAR.X68"
00001DE4                          1849  ; =============================================================================
00001DE4                          1850  ; SYSTEM VARS
00001DE4                          1851  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
00001DE4                          1852  ; THEY MUST NOT BE IN PROTECTED MEMORY.
00001DE4                          1853  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
00001DE4                          1854  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
00001DE4                          1855  ; THIS IS GOOD ENOUGH.
00001DE4                          1856  ; =============================================================================
00001DE4                          1857  
00001DE4                          1858  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001DE4                          1859  
00001DE4                          1860  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001DE5                          1861  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001DE6                          1862  
00001DE6                          1863              DS.W    0
00001DE6                          1864  
00001DE6                          1865  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001DE6                          1866  
00001DE6                          1867  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001DE7                          1868  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001DE8                          1869              DS.W    0
00001DE8                          1870  
00001DE8                          1871  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001DE8                          1872  
00001E00                          1873              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001E00                          1874  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002A80                          1875              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002A80                          1876  
00002A80                          1877  
00002A80                          1878  
00002A80                          1879  -------------------- end include --------------------
00002A80                          1880              INCLUDE "VAR.X68"
00002A80                          1881  ; =============================================================================
00002A80                          1882  ; GAME VARS
00002A80                          1883  ; =============================================================================
00002A80                          1884  
00002A80                          1885  ; TO DO: DECLARE GAME VARIABLES HERE.
00002A80                          1886  
00002A80                          1887  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
00002A80                          1888  
00002A80                          1889  STACUR      DS.W    1                       ; CURRENT GAME STATE
00002A82                          1890  STANEXT     DS.W    1                       ; NEXT GAME STATE
00002A84                          1891  ;----------------------------------------------------------------------------
00002A84                          1892  
00002A84                          1893  ; PLAYER --------------------------------------------------------------------
00002A84                          1894  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
00002A86                          1895  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
00002A88                          1896  PLIVES      DS.W    1                       ;LIVES LEFT
00002A8A                          1897  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
00002A8C                          1898  PSPEED      DS.W    1
00002A8E                          1899  LEVEL       DS.B    2
00002A90                          1900  PNAME       DS.B    80                      ;NOMBRE CON CARACTERES MAX = 80
00002AE0                          1901              DS.W    0
00002AE0                          1902  ;----------------------------------------------------------------------------
00002AE0                          1903  
00002AE0                          1904  ; BALL ----------------------------------------------------------------------
00002AE0                          1905  ;BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
00002AE0                          1906  ;BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
00002AE0                          1907  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
00002AE2                          1908  BSPEEDY     DS.W    1
00002AE4                          1909  BMXSPEED    DS.W    1                       ;LIMITACIÓN
00002AE6                          1910  BCOLOR      DS.W    1
00002AE8                          1911  BPOSX1      DS.W    1
00002AEA                          1912  BPOSX2      DS.W    1
00002AEC                          1913  BPOSY1      DS.W    1
00002AEE                          1914  BPOSY2      DS.W    1
00002AF0                          1915  ; BLOCKS --------------------------------------------------------------------
00002AF0                          1916  BLCOUNTER   DS.W    1
00002AF2                          1917  BLMATRIX    DS.B    BLROW  ;12*8
00002AFE                          1918              DS.W    0
00002AFE                          1919  ;ALL SCORES:
00002AFE                          1920  ERRORFILE   DS.L    1
00002B02                          1921  POSRNK      DS.L    1
00002B06                          1922  RNKTABLE    DS.B    10
00002B10                          1923  
00002B10                          1924  BUFFER      DS.B    80
00002B60                          1925              DS.W    0
00002B60                          1926  PLSIZE      DS.W    1
00002B62                          1927  
00002B62                          1928  
00002B62                          1929  
00002B62                          1930  
00002B62                          1931  
00002B62                          1932  -------------------- end include --------------------
00002B62                          1933              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              2AE6
BDIAMET             A
BINCOLOR            FFFFFF
BINIT               1A18
BINPOSX             FB
BINPOSY             1CE
BINSPEED            FFFFFFFD
BLCOL               8
BLCONBL             1D92
BLCONBL:LOOP1       1DA4
BLCONBL:LOOP2       1D9C
BLCONBL:SALTO       1DB0
BLCOUNTER           2AF0
BLHEIGHT            10
BLINIT              1BB8
BLINIT:LOOP         1BC2
BLLEV2              1C06
BLLEV3              1C72
BLMATRIX            2AF2
BLPLOT              1D38
BLPLOT:LOOP1        1D6C
BLPLOT:LOOP2        1D54
BLPLOT:SALTO        1D78
BLROW               C
BLUE                F7E78E
BLUPD               1CDE
BLUPD:NEXTLEVEL     1CEE
BLUPD:NIVEL3        1D18
BLUPD:WON           1D2E
BLWIDTH             40
BMXSPEED            2AE4
BNXTLEV             1A4A
BNXTLEV:END         1AA6
BNXTLEV:NEGX        1AA0
BNXTLEV:NEGY        1A84
BNXTLEV:X           1A8A
BPLOT               1B78
BPOSX1              2AE8
BPOSX2              2AEA
BPOSY1              2AEC
BPOSY2              2AEE
BSPEEDX             2AE0
BSPEEDY             2AE2
BUFFER              2B10
BUPD                1AAC
BUPD:END            1B4E
COLORS              11E6
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1E00
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
ERRORFILE           2AFE
FILE                11DC
GOVERC              FFFF
GOVERX              12
GOVERY              7
GREEN               95FF8C
INTPRSC             FFFFFF
INTPRSX             20
INTPRSY             52
INTTITC             DCAA7C
INTTITX             E
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1DE5
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1DE4
LEVEL               2A8E
LIVECOLOR           FF
LIVEHEIGHT          10
LIVEPOSX            215
LIVEPOSY            1E
LIVEWIDTH           40
ORANGE              4E8CF3
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX1            E0
PINPOSX2            E4
PINPOSX3            E8
PINWIDTH1           40
PINWIDTH2           38
PINWIDTH3           30
PLIVES              2A88
PLRINIT             1624
PLRREV              1636
PLRUPD              1648
PLRUPD:END          168E
PLRUPD:RIGHTKEY     166C
PLSIZE              2B60
PMOVE               8
PNAME               2A90
POSRNK              2B02
PPLOT               1694
PPLOT:END           1750
PPLOT:LOOP          170E
PPLOT:TXTSCORE      1756
PPOSX               2A84
PPOSY               1D0
PSCORE              2A8A
PSCORECOL           FFFFFF
PSCORETX            32
PSCORETY            4
PSPEED              2A8C
PURPLE              FFACAC
PWIDTH              2A86
RNKTABLE            2B06
SCRCTRL             201
SCRCYCCT            1DE7
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1DE6
SCRIRQ              1
SCRISR              107E
SCRLWIDTH           5
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            2E4
STACUR              2A80
STAEMPTYG           17FC
STAEMPTYP           17FA
STAGOVR             3
STAGOVRP            19D4
STAGOVRP:GOVSTR     1A0E
STAGOVRU            19A2
STAGOVRU:END        19D2
STAINIT             175E
STAINTR             0
STAINTRI            1892
STAINTRI:INSTRUCT   18B0
STAINTRP            18FA
STAINTRP:PRSSTR     198E
STAINTRP:SOUND      196A
STAINTRP:TITSTR     197E
STAINTRU            18C8
STAINTRU:END        18F4
STANEXT             2A82
STANONE             FFFFFFFF
STAPLAY             2
STAPLAYI            1806
STAPLAYP            1870
STAPLAYU            1856
STAPLOT             17CE
STAPLOT:PLTTBL      17EA
START               1DBC
START:LOOP          1DC4
START:WINT          1DCA
STASPACE            1
STASPACEU           1838
STASPACEU:END       1854
STAUPD              1770
STAUPD:DOUPD        1796
STAUPD:INITBL       17AE
STAUPD:UPDTBL       17BE
SYSINIT             1000
TXBSIZE             12
TXMSIZE             10
TXSSIZE             A
UTLCHCOLP           1328
UTLCHCOLP:END       13BA
UTLCHCOLP:LADOS     13B4
UTLCHCOLP:PLRXMIDDLE  136E
UTLCHCOLP:PLRXRIGHT  139C
UTLCHCOLW           1216
UTLCHCOLW:COLLISIONS  12F8
UTLCHCOLW:DOWN      1282
UTLCHCOLW:END       12F2
UTLCHCOLW:LEFT      1240
UTLCHCOLW:MINLIVE   128E
UTLCHCOLW:RESET     12EA
UTLCHCOLW:RIGHT     1260
UTLCHCOLW:SOUNDG    1300
UTLCHCOLW:SOUNDL    1314
UTLCOLBL            13C0
UTLCOLBL:CHOQUEDOBLE  1404
UTLCOLBL:CHOQUEDOBLEIZQ  1432
UTLCOLBL:DERECHA    1450
UTLCOLBL:ENDCOLISION  145C
UTLCOLBL:ENDNOCOLISION  148E
UTLCOLBL:ENMEDIO    143E
UTLCOLBL:IZQ        13EA
UTLCOLBL:SOUND      1490
UTLCOLBL:TEST       13E4
UTLCOLBL:TEST2      141A
UTLLOCT             3CF
UTLREADFILE         1514
UTLREADFILE:LOOP    1528
UTLREADFILE:SALTA   1550
UTLREADRNK          1562
UTLREADRNK:END      15B8
UTLREADRNK:LOOP     157A
UTLSCTRLP           14A0
UTLSCTRLP:TXTSCORE  150C
UTLSFIL             2A5
UTLSIZC             12A
UTLSNDS             4F7
UTLSNDST            6F3
UTLSPEN             0
UTLSVNAME           847
UTLWRFILE           15EE
UTLWRRNK            15BE
UTLWRRNK:.          15E8
UTLWRRNK:LOOP       15E2
UTLWRRNK:OCUPADO    15D0
YELLOW              38EEF8
