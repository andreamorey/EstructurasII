00001984 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 19/12/2019 12:29:51

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME
00000000                             3  ; AUTHOR   :
00000000                             4  ; CREATION : 
00000000                             5  ; =============================================================================
00000000                             6  
00001000                             7              ORG     $1000
00001000                             8              
00001000                             9  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            10  
00001000                            11              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            12  ; =============================================================================
00001000                            13  ; SYSTEM CONSTANTS
00001000                            14  ; =============================================================================
00001000                            15  
00001000                            16  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            17  
00001000  =00000000                 18  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 19  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            20  
00001000                            21  ; --- KEY CODES (EASy68K)
00001000                            22  
00001000  =00000020                 23  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 24  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 25  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 26  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 27  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 28  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 29  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 30  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            31  
00001000                            32  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            33  
00001000  =00000025                 34  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 35  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 36  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 37  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 38  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 39  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 40  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 41  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            42  
00001000                            43  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            44  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            45  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            46  ; +---+---+---+---+---+---+---+---+
00001000                            47  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            48  ; +---+---+---+---+---+---+---+---+
00001000                            49  ;   |   |   |   |   |   |   |   |
00001000                            50  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            51  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            52  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            53  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            54  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            55  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            56  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            57  ;   +-------------------------------------- PAUSE BUTTON
00001000                            58  
00001000  =00000001                 59  KBDMSKLF    EQU     %00000001
00001000  =00000002                 60  KBDMSKUP    EQU     %00000010
00001000  =00000004                 61  KBDMSKRT    EQU     %00000100
00001000  =00000008                 62  KBDMSKDN    EQU     %00001000
00001000  =00000010                 63  KBDMSKF1    EQU     %00010000
00001000  =00000020                 64  KBDMSKF2    EQU     %00100000
00001000  =00000040                 65  KBDMSKF3    EQU     %01000000
00001000  =00000080                 66  KBDMSKPS    EQU     %10000000
00001000                            67  
00001000                            68  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            69  
00001000  =00000000                 70  KBDBITLF    EQU     0
00001000  =00000001                 71  KBDBITUP    EQU     1
00001000  =00000002                 72  KBDBITRT    EQU     2
00001000  =00000003                 73  KBDBITDN    EQU     3
00001000  =00000004                 74  KBDBITF1    EQU     4
00001000  =00000005                 75  KBDBITF2    EQU     5
00001000  =00000006                 76  KBDBITF3    EQU     6
00001000  =00000007                 77  KBDBITPS    EQU     7
00001000                            78  
00001000                            79  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            80  
00001000  =000002E4                 81  SCRWIDTH    EQU     740                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 82  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 83  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 84  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            85  
00001000                            86  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            87  
00001000  =00000040                 88  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 89  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 90  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            91  
00001000                            92  
00001000                            93  -------------------- end include --------------------
00001000                            94              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            95  ; =============================================================================
00001000                            96  ; SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            97  ; =============================================================================
00001000                            98  ;           AUTHORS: Andrea Morey Sánchez and Aisha Gandarova
00001000                            99  ; -----------------------------------------------------------------------------
00001000                           100  SYSINIT
00001000                           101  ; INITIALIZES THE SYSTEM
00001000                           102  ; INPUT    - NONE
00001000                           103  ; OUTPUT   - NONE
00001000                           104  ; MODIFIES - NONE
00001000                           105  ; -----------------------------------------------------------------------------
00001000  205F                     106              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010A6            107              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            108              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 0000111A            109              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                110              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     111              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     112              RTS
0000101C                           113  
0000101C                           114  ; =============================================================================
0000101C                           115  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           116  ; =============================================================================
0000101C                           117  
0000101C                           118  ; -----------------------------------------------------------------------------
0000101C                           119  SCRINIT
0000101C                           120  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           121  ; INPUT    - NONE
0000101C                           122  ; OUTPUT   - NONE
0000101C                           123  ; MODIFIES - D0,D1,D2,D3
0000101C                           124  ; -----------------------------------------------------------------------------
0000101C                           125              ; TO DO:
0000101C                           126              ; - DISABLE INTS (SET INT BITS IN SR TO 111)
0000101C  007C 0700                127              ORI.W   #$0700,SR
00001020                           128              ; - DISABLE ALL AUTO-IRQ (SEE TRAP #15 TASK 32)
00001020                           129              ; - INSTALL SCRUPD INTO TRAP SCRTRAP
00001020  21FC 0000108C 0084       130              MOVE.L  #SCRUPD,$80+(SCRTRAP*4)
00001028                           131              ; - SET RESOLUTION TO SCRWIDTH X SCRHEIGHT
00001028  103C 0021                132              MOVE.B  #33,D0
0000102C  223C 02E401E0            133              MOVE.L  #(SCRWIDTH<<16)|SCRHEIGH,D1
00001032  4E4F                     134              TRAP    #15
00001034                           135              ; - SET WINDOWED MODE
00001034  7201                     136              MOVE.L  #1,D1
00001036  4E4F                     137              TRAP    #15
00001038                           138              ; - CLEAR VISIBLE BUFFER
00001038  103C 000B                139              MOVE.B  #11,D0
0000103C  323C FF00                140              MOVE.W  #$FF00,D1
00001040  4E4F                     141              TRAP    #15
00001042                           142              ; - ENABLE DOUBLE BUFFER
00001042  103C 005C                143              MOVE.B  #92,D0
00001046  123C 0011                144              MOVE.B  #17,D1
0000104A  4E4F                     145              TRAP    #15
0000104C                           146              ; - CLEAR HIDDEN BUFFER
0000104C  700B                     147              MOVE.L  #11,D0
0000104E  323C FF00                148              MOVE.W  #$FF00,D1
00001052  4E4F                     149              TRAP    #15
00001054                           150              ; - INSTALL SCRISR FOR IRQ SCRIRQ (IRQ INTERRUPT VECTOR BEGINS
00001054                           151              ;   AT $60. INSTALLATION IS SIMILAR TO TRAP INSTALLATION)
00001054  21FC 0000107E 0064       152              MOVE.L  #SCRISR,$60+(SCRIRQ*4)
0000105C                           153              ; - ENABLE AUTO-IRQ EVERY SCRTIM MS FOR IRQ SCRIRQ (SEE TRAP #15
0000105C                           154              ;   TASK 32)
0000105C  103C 0020                155              MOVE.B  #32,D0
00001060  123C 0006                156              MOVE.B  #6,D1
00001064                           157         
00001064  143C 0081                158              MOVE.B  #$80|SCRIRQ,D2
00001068  7614                     159              MOVE.L  #SCRTIM,D3
0000106A  4E4F                     160              TRAP    #15
0000106C                           161              ; - CLEAR SCRINTCT AND SCRCYCCT
0000106C  4239 000019AE            162              CLR.B   SCRINTCT
00001072  4239 000019AF            163              CLR.B   SCRCYCCT
00001078                           164              ; - ENABLE INTS (SET INT BITS IN SR TO 000)
00001078  027C F8FF                165              ANDI.W  #$F8FF,SR
0000107C  4E75                     166              RTS
0000107E                           167  
0000107E                           168  ; -----------------------------------------------------------------------------
0000107E                           169  SCRISR
0000107E                           170  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000107E                           171  ; INPUT    - NONE
0000107E                           172  ; OUTPUT   - NONE
0000107E                           173  ; MODIFIES - NONE
0000107E                           174  ; -----------------------------------------------------------------------------
0000107E  5239 000019AE            175              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001084  5239 000019AF            176              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
0000108A  4E73                     177              RTE
0000108C                           178  
0000108C                           179  ; -----------------------------------------------------------------------------
0000108C                           180  SCRUPD
0000108C                           181  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000108C                           182  ; BUFFER FOR THE NEXT ONE.
0000108C                           183  ; INPUT    - NONE
0000108C                           184  ; OUTPUT   - NONE
0000108C                           185  ; MODIFIES - NONE
0000108C                           186  ; -----------------------------------------------------------------------------
0000108C                           187              ; TO DO: UPDATE DOUBLE BUFFER AND CLEAR HIDDEN BUFFER
0000108C  48E7 C000                188              MOVEM.L D0-D1,-(A7)
00001090  103C 005E                189              MOVE.B  #94,D0
00001094  4E4F                     190              TRAP    #15
00001096  103C 000B                191              MOVE.B  #11,D0
0000109A  323C FF00                192              MOVE.W  #$FF00,D1
0000109E  4E4F                     193              TRAP    #15
000010A0  4CDF 0003                194              MOVEM.L (A7)+,D0-D1
000010A4  4E73                     195              RTE
000010A6                           196  
000010A6                           197  ; =============================================================================
000010A6                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010A6                           199  ; =============================================================================
000010A6                           200  
000010A6                           201  ; -----------------------------------------------------------------------------
000010A6                           202  KBDINIT
000010A6                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010A6                           204  ; INPUT    - NONE
000010A6                           205  ; OUTPUT   - NONE
000010A6                           206  ; MODIFIES - NONE
000010A6                           207  ; -----------------------------------------------------------------------------
000010A6  4239 000019AC            208              CLR.B   (KBDVAL)                ; INIT VARS
000010AC  4239 000019AD            209              CLR.B   (KBDEDGE)
000010B2  21FC 000010BC 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010BA  4E75                     211              RTS
000010BC                           212  
000010BC                           213  ; -----------------------------------------------------------------------------
000010BC                           214  KBDREAD
000010BC                           215  ; TRAP SERVICE ROUTINE.
000010BC                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010BC                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010BC                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010BC                           219  ; INPUT    - NONE
000010BC                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010BC                           221  ; MODIFIES - NONE
000010BC                           222  ; -----------------------------------------------------------------------------
000010BC                           223              ; TO DO: UPDATE KBDVAL AND KBDEDGE
000010BC  48E7 F800                224              MOVEM.L D0-D4,-(A7)
000010C0  103C 0013                225              MOVE.B  #19,D0
000010C4                           226              
000010C4  223C 50104D20            227              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010CA  4E4F                     228              TRAP    #15
000010CC                           229          
000010CC  4202                     230              CLR.B   D2                      ;D2 WILL CONTAIN THE VALUE OF KBDVAL
000010CE  383C 0003                231              MOVE.W  #3,D4
000010D2                           232              
000010D2                           233  .LOOP1      
000010D2                           234       
000010D2  E189                     235              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010D4  40C3                     236              MOVE.W  SR,D3                   
000010D6  0243 0001                237              ANDI.W  #$0001,D3               ;D3 = VALUE OF THE FLAG C
000010DA  E30A                     238              LSL.B   #1,D2                   ;MOVE THE BITS TO THE LEFT
000010DC  8403                     239              OR.B    D3,D2                   
000010DE  51CC FFF2                240              DBRA    D4,.LOOP1
000010E2                           241          
000010E2                           242              ;D2 = 0 0 0 0 KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1
000010E2                           243              
000010E2  223C 28272625            244              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E8  4E4F                     245              TRAP    #15
000010EA                           246              
000010EA  383C 0003                247              MOVE.W  #3,D4
000010EE                           248  .LOOP2      
000010EE  E189                     249              LSL.L   #8,D1                   ;FLAG C = THE VALUE OF THE KBD
000010F0  40C3                     250              MOVE.W  SR,D3
000010F2  0243 0001                251              ANDI.W  #$0001,D3    
000010F6  E30A                     252              LSL.B   #1,D2
000010F8  8403                     253              OR.B    D3,D2
000010FA                           254              
000010FA  51CC FFF2                255              DBRA    D4,.LOOP2
000010FE                           256              
000010FE                           257              ;D2 = KBDPAUSE KBDFIRE3 KBDFIRE2 KBDFIRE1 KBDDOWN KBDRIGHT KBDUP KBDLEFT
000010FE                           258              
000010FE                           259              ;UPDATE KBDVAL AND KBDEDGE
000010FE  1639 000019AC            260              MOVE.B  KBDVAL,D3
00001104  4603                     261              NOT.B   D3
00001106  13C2 000019AC            262              MOVE.B  D2,KBDVAL
0000110C  C602                     263              AND.B   D2,D3
0000110E  13C3 000019AD            264              MOVE.B  D3,KBDEDGE
00001114  4CDF 001F                265              MOVEM.L (A7)+,D0-D4
00001118  4E73                     266              RTE
0000111A                           267  
0000111A                           268  ; =============================================================================
0000111A                           269  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
0000111A                           270  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
0000111A                           271  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
0000111A                           272  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
0000111A                           273  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
0000111A                           274  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
0000111A                           275  ; =============================================================================
0000111A                           276  
0000111A                           277  ; -----------------------------------------------------------------------------
0000111A                           278  DMMINIT
0000111A                           279  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
0000111A                           280  ; INPUT    - NONE
0000111A                           281  ; OUTPUT   - NONE
0000111A                           282  ; MODIFIES - NONE
0000111A                           283  ; -----------------------------------------------------------------------------
0000111A  48E7 8080                284              MOVEM.L D0/A0,-(A7)
0000111E  41F9 000019C0            285              LEA     DMMDATA,A0
00001124  303C 0031                286              MOVE.W  #DMMBNUM-1,D0
00001128  30BC 0000                287  .LOOP       MOVE.W  #DMMSYSID,(A0)
0000112C  D1FC 00000040            288              ADD.L   #DMMBSIZE,A0
00001132  51C8 FFF4                289              DBRA.W  D0,.LOOP
00001136  4CDF 0101                290              MOVEM.L (A7)+,D0/A0
0000113A  4E75                     291              RTS
0000113C                           292  
0000113C                           293  ; -----------------------------------------------------------------------------
0000113C                           294  DMMFIRST
0000113C                           295  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000113C                           296  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000113C                           297  ; INPUT    - NONE
0000113C                           298  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000113C                           299  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000113C                           300  ; -----------------------------------------------------------------------------
0000113C  41F9 000019C0            301              LEA     DMMDATA,A0
00001142  4A58                     302  DMMFRLOP    TST.W   (A0)+
00001144  6600 0016                303              BNE     DMMFRFND
00001148  D1FC 0000003E            304              ADD.L   #DMMBSIZE-2,A0
0000114E  B1FC 0000263F            305  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001154  6DEC                     306              BLT     DMMFRLOP
00001156  207C 00000000            307              MOVE.L  #0,A0
0000115C  4E75                     308  DMMFRFND    RTS
0000115E                           309  
0000115E                           310  ; -----------------------------------------------------------------------------
0000115E                           311  DMMNEXT
0000115E                           312  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
0000115E                           313  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000115E                           314  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
0000115E                           315  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000115E                           316  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000115E                           317  ; -----------------------------------------------------------------------------
0000115E  2F00                     318              MOVE.L  D0,-(A7)
00001160  2008                     319              MOVE.L  A0,D0
00001162  C0BC FFFFFFC0            320              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001168  0680 00000040            321              ADD.L   #DMMBSIZE,D0
0000116E  2040                     322              MOVE.L  D0,A0
00001170  201F                     323              MOVE.L  (A7)+,D0
00001172  60DA                     324              BRA     DMMFRCOM
00001174                           325  
00001174                           326  ; -----------------------------------------------------------------------------
00001174                           327  DMMFRSTO
00001174                           328  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001174                           329  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001174                           330  ; INPUT    - D0.W : ID TO SEARCH
00001174                           331  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001174                           332  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001174                           333  ; -----------------------------------------------------------------------------
00001174  41F9 000019C0            334              LEA     DMMDATA,A0
0000117A  B058                     335  DMMFLOOP    CMP.W   (A0)+,D0
0000117C  6700 0016                336              BEQ     DMMFFND
00001180  D1FC 0000003E            337              ADD.L   #DMMBSIZE-2,A0
00001186  B1FC 0000263F            338  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000118C  6DEC                     339              BLT     DMMFLOOP
0000118E  207C 00000000            340              MOVE.L  #0,A0
00001194  4E75                     341  DMMFFND     RTS
00001196                           342  
00001196                           343  ; -----------------------------------------------------------------------------
00001196                           344  DMMNEXTO
00001196                           345  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001196                           346  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001196                           347  ; INPUT    - D0.W : ID TO SEARCH
00001196                           348  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001196                           349  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001196                           350  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001196                           351  ; -----------------------------------------------------------------------------
00001196  2F00                     352              MOVE.L  D0,-(A7)
00001198  2008                     353              MOVE.L  A0,D0
0000119A  C0BC FFFFFFC0            354              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011A0  0680 00000040            355              ADD.L   #DMMBSIZE,D0
000011A6  2040                     356              MOVE.L  D0,A0
000011A8  201F                     357              MOVE.L  (A7)+,D0
000011AA  60DA                     358              BRA     DMMFCOM
000011AC                           359  
000011AC                           360  ; -----------------------------------------------------------------------------
000011AC                           361  DMMALLOC
000011AC                           362  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011AC                           363  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011AC                           364  ; INPUT    - D0.W : ID TO ASSIGN
000011AC                           365  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011AC                           366  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011AC                           367  ; -----------------------------------------------------------------------------
000011AC  3F00                     368              MOVE.W  D0,-(A7)
000011AE  4240                     369              CLR.W   D0
000011B0  4EB8 1174                370              JSR     DMMFRSTO
000011B4  301F                     371              MOVE.W  (A7)+,D0
000011B6  B1FC 00000000            372              CMP.L   #0,A0
000011BC  6700 0006                373              BEQ     .END
000011C0  3140 FFFE                374              MOVE.W  D0,-2(A0)
000011C4  4E75                     375  .END        RTS
000011C6                           376  
000011C6                           377  ; -----------------------------------------------------------------------------
000011C6                           378  DMMFREE
000011C6                           379  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C6                           380  ; SYSTEM (0)
000011C6                           381  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C6                           382  ; OUTPUT   - NONE
000011C6                           383  ; MODIFIES - NONE
000011C6                           384  ; -----------------------------------------------------------------------------
000011C6  48E7 8080                385              MOVEM.L D0/A0,-(A7)
000011CA  2008                     386              MOVE.L  A0,D0
000011CC  C0BC FFFFFFC0            387              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011D2  2040                     388              MOVE.L  D0,A0
000011D4  4250                     389              CLR.W   (A0)
000011D6  4CDF 0101                390              MOVEM.L (A7)+,D0/A0
000011DA  4E75                     391              RTS
000011DC                           392  
000011DC                           393  
000011DC                           394  
000011DC                           395  
000011DC                           396  
000011DC                           397  
000011DC                           398  
000011DC                           399  
000011DC                           400  
000011DC                           401  
000011DC                           402  
000011DC                           403  
000011DC                           404  
000011DC                           405  
000011DC                           406  
000011DC                           407  
000011DC                           408  
000011DC                           409  
000011DC                           410  
000011DC                           411  
000011DC                           412  
000011DC                           413  -------------------- end include --------------------
000011DC                           414              INCLUDE "CONSTANTS.X68"         ;CONSTANTES DEL JUEGO
000011DC                           415  ; =============================================================================
000011DC                           416  ; CONSTANTS
000011DC                           417  ; =============================================================================
000011DC                           418  
000011DC                           419  ; --- INTRO STATE RELATED CONSTANTS -------------------------------------------
000011DC                           420  
000011DC  =0000000E                421  INTTITX     EQU     14                      ; TITLE X COORDINATE
000011DC  =00000007                422  INTTITY     EQU     7                       ; TITLE Y COORDINATE
000011DC  =00DCAA7C                423  INTTITC     EQU     $00DCAA7C               ; TITLE COLOR
000011DC  =00000020                424  INTPRSX     EQU     32                      ; PRESS FIRE X COORDINATE
000011DC  =00000052                425  INTPRSY     EQU     82                      ; PRESS FIRE Y COORDINATE
000011DC  =00FFFFFF                426  INTPRSC     EQU     $00FFFFFF               ; PRESS FIRE COLOR
000011DC  =00000012                427  TXBSIZE     EQU     18                      ;BIG SIZE LETTERS
000011DC  =00000010                428  TXMSIZE     EQU     16                      ;MEDIUM SIZE LETTERS
000011DC  =0000000A                429  TXSSIZE     EQU     10                      ;SMALL SIZE LETTERS
000011DC                           430  
000011DC                           431  ; STATES GAME ---------------------------------------------------------------
000011DC  =FFFFFFFF                432  STANONE     EQU     -1                      ; PLACEHOLDER TO FORCE CHANGE
000011DC  =00000000                433  STAINTR     EQU     0                       ; INTRO/PRESS FIRE STATE
000011DC  =00000001                434  STASPACE    EQU     1                       ; ESPERA EL ESPACIO PARA DISPARAR LA BOLA 
000011DC  =00000002                435  STAPLAY    EQU     2                       ; NORMAL GAME STATE
000011DC                           436  ;STAPLAY2    EQU     3
000011DC                           437  ;STAPLAY3    EQU     4
000011DC  =00000003                438  STAGOVR     EQU     3                       ; GAME OVER STATE
000011DC                           439  ;----------------------------------------------------------------------------
000011DC                           440  
000011DC                           441  ; --- GAME OVER STATE RELATED CONSTANTS ---------------------------------------
000011DC                           442  
000011DC  =00000012                443  GOVERX      EQU     18                      ; GAME OVER X COORDINATE
000011DC  =00000007                444  GOVERY      EQU     7                       ; GAME OVER Y COORDINATE
000011DC  =0000FFFF                445  GOVERC      EQU     $0000FFFF               ; GAME OVER COLOR
000011DC                           446  
000011DC                           447  ; SCREENCTRL---------------------------------------------------------------------
000011DC  =00000201                448  SCRCTRL     EQU     513   
000011DC  =00000005                449  SCRLWIDTH   EQU     5
000011DC  =00000040                450  LIVEWIDTH   EQU     64
000011DC  =00000010                451  LIVEHEIGHT  EQU     16
000011DC  =000000FF                452  LIVECOLOR   EQU     $000000FF               ;ROJO
000011DC  =00000215                453  LIVEPOSX    EQU     SCRCTRL+20
000011DC  =0000001E                454  LIVEPOSY    EQU     30
000011DC                           455  
000011DC                           456  ;----------------------------------------------------------------------------
000011DC                           457  
000011DC                           458  
000011DC                           459  ; PLAYER --------------------------------------------------------------------
000011DC                           460  
000011DC  =00000040                461  PINWIDTH1    EQU     64                      ; PLAYER INITIAL WIDTH (PIXELS)
000011DC  =00000038                462  PINWIDTH2    EQU     56
000011DC  =00000030                463  PINWIDTH3    EQU     48
000011DC  =0000000C                464  PHEIGHT     EQU     12                      ; PLAYER HEIGHT (PIXELS)
000011DC  =00ECD59D                465  PCOLOR      EQU     $00ECD59D               ; PLAYER NORMAL COLOR
000011DC  =00000003                466  PINLIVE     EQU     3                       ;PLAYER INTIAL LIVES 
000011DC  =00000008                467  PMOVE       EQU     8                       ;SPEED OF THE PLAYER (ALWAYS THE SAME)
000011DC  =000001D0                468  PPOSY       EQU     SCRHEIGH-PHEIGHT-4      ;POSICION DE LA PLATAFORMA Y
000011DC  =000000E0                469  PINPOSX1     EQU     SCRCTRL/2-PINWIDTH1/2
000011DC  =000000E4                470  PINPOSX2     EQU     SCRCTRL/2-PINWIDTH2/2
000011DC  =000000E8                471  PINPOSX3     EQU     SCRCTRL/2-PINWIDTH3/2
000011DC  =00000032                472  PSCORETX     EQU    50                       ; SCORE X COORDINATE
000011DC  =00000004                473  PSCORETY     EQU    4                       ; SCORE Y COORDINATE
000011DC  =00FFFFFF                474  PSCORECOL   EQU     $00FFFFFF
000011DC                           475  ; ---------------------------------------------------------------------------
000011DC                           476  
000011DC                           477  ; BALL ----------------------------------------------------------------------
000011DC  =00000008                478  BDIAMET     EQU     8                       ;ANCHURA DE LA BOLA
000011DC  =000000FC                479  BINPOSX     EQU     SCRCTRL/2-BDIAMET/2     ;POSICION DE LA PELOTA X INICIAL
000011DC  =000001C6                480  BINPOSY     EQU     PPOSY-BDIAMET-2              ;POSICION DE LA PELOTA Y INICIAL
000011DC  =FFFFFFFC                481  BINSPEED    EQU     -4                       ;INITIAL SPEED (HASTA LLEGAR A 500 PUNTOS)
000011DC                           482  
000011DC  =00FFFFFF                483  BINCOLOR    EQU     $00FFFFFF
000011DC                           484  
000011DC                           485  ; ---------------------------------------------------------------------------
000011DC                           486  
000011DC                           487  
000011DC                           488  ;BLOCKS-------------------------------------------------------------------------
000011DC  =00000040                489  BLWIDTH     EQU     64
000011DC  =00000010                490  BLHEIGHT     EQU     16
000011DC= 00F7E78E 004E8CF3 ...    491  COLORS      DC.L    BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE,PURPLE,YELLOW,GREEN,BLUE,ORANGE
0000120C  =0000000C                492  BLROW       EQU     12
0000120C  =00000008                493  BLCOL       EQU     8
0000120C                           494  
0000120C                           495  
0000120C                           496  ;-------------------------------------------------------------------------------
0000120C                           497  
0000120C                           498  ;COLORS-------------------------------------------------------------
0000120C  =004E8CF3                499  ORANGE      EQU     $004E8CF3
0000120C  =00F7E78E                500  BLUE        EQU     $00F7E78E
0000120C  =00FFACAC                501  PURPLE      EQU     $00FFACAC
0000120C  =0038EEF8                502  YELLOW      EQU     $0038EEF8
0000120C  =0095FF8C                503  GREEN       EQU     $0095FF8C
0000120C                           504  ;-------------------------------------------------------------------
0000120C                           505  
0000120C                           506  
0000120C                           507  
0000120C                           508  
0000120C                           509  
0000120C                           510  
0000120C                           511  
0000120C                           512  
0000120C                           513  
0000120C                           514  
0000120C                           515  
0000120C                           516  
0000120C                           517  
0000120C                           518  
0000120C                           519  
0000120C                           520  
0000120C                           521  
0000120C                           522  
0000120C                           523  
0000120C                           524  
0000120C                           525  
0000120C                           526  
0000120C                           527  -------------------- end include --------------------
0000120C                           528              INCLUDE "UTIL.X68"
0000120C                           529  ; =============================================================================
0000120C                           530  ; UTILITY MACROS
0000120C                           531  ; =============================================================================
0000120C                           532  
0000120C                           533  UTLSPEN     MACRO
0000120C                           534  ; WRAPPER FOR SET PEN TRAP 15 TASK.
0000120C                           535  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
0000120C                           536  ; OUTPUT   - NONE
0000120C                           537  ; MODIFIES - D0,D1
0000120C                           538  ; -----------------------------------------------------------------------------
0000120C                           539              MOVE.B  #80,D0
0000120C                           540              MOVE.L  \1,D1
0000120C                           541              TRAP    #15
0000120C                           542              ENDM
0000120C                           543  
0000120C                           544  ; -----------------------------------------------------------------------------
0000120C                           545  UTLSIZC     MACRO
0000120C                           546  ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
0000120C                           547  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR \2 SIZE (8, 9, 10, 12, 14, 16, 18))
0000120C                           548  ; OUTPUT   - NONE
0000120C                           549  ; MODIFIES - D0,D1
0000120C                           550  ; -----------------------------------------------------------------------------
0000120C                           551              MOVE.L  \1,D1
0000120C                           552              MOVE.L  #\2<<16|1,D2
0000120C                           553              MOVE.B  #21,D0
0000120C                           554              TRAP    #15
0000120C                           555              ENDM
0000120C                           556  ; -----------------------------------------------------------------------------
0000120C                           557  UTLSFIL     MACRO
0000120C                           558  ; WRAPPER FOR SET FIL TRAP 15 TASK.
0000120C                           559  ; INPUT    - \1 COLOR IN FORMAT $00BBGGRR
0000120C                           560  ; OUTPUT   - NONE
0000120C                           561  ; MODIFIES - D0,D1
0000120C                           562  ; -----------------------------------------------------------------------------
0000120C                           563              MOVE.B  #81,D0
0000120C                           564              MOVE.L  \1,D1
0000120C                           565              TRAP    #15
0000120C                           566              ENDM
0000120C                           567              
0000120C                           568  ; -----------------------------------------------------------------------------
0000120C                           569  UTLLOCT     MACRO
0000120C                           570  ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
0000120C                           571  ; INPUT    - \1 X, \2 Y
0000120C                           572  ; OUTPUT   - NONE
0000120C                           573  ; MODIFIES - D0,D1
0000120C                           574  ; -----------------------------------------------------------------------------
0000120C                           575              MOVE.W  #\1<<8|\2, D1
0000120C                           576              MOVE.B  #11,D0
0000120C                           577              TRAP    #15
0000120C                           578              ENDM
0000120C                           579     
0000120C                           580  ; -----------------------------------------------------------------------------
0000120C                           581  UTLSNDS     MACRO
0000120C                           582  ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000120C                           583  ; INPUT    - \1 ADDRESS TO STRING WITH NAME OF THE FILE, \2 NUM SOUNDS, 
0000120C                           584  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000120C                           585  ; MODIFIES - D0,A1
0000120C                           586  ; -----------------------------------------------------------------------------
0000120C                           587              LEA     \1, A1             ;PLAY EXPLOSION SOUND
0000120C                           588              MOVE.W  \2,D1
0000120C                           589              MOVE.B  #71,D0
0000120C                           590              TRAP    #15
0000120C                           591              MOVE.B  #72,D0
0000120C                           592              TRAP    #15
0000120C                           593              
0000120C                           594              ENDM
0000120C                           595              
0000120C                           596  ; -----------------------------------------------------------------------------
0000120C                           597  UTLSNDST     MACRO
0000120C                           598  ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000120C                           599  ; INPUT    - NONE 
0000120C                           600  ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000120C                           601  ; MODIFIES - D0,A1
0000120C                           602  ; -----------------------------------------------------------------------------
0000120C                           603              MOVE.L  #3,D2
0000120C                           604              MOVE.B  #76,D0
0000120C                           605              TRAP    #15
0000120C                           606              
0000120C                           607              ENDM
0000120C                           608              
0000120C                           609  ; =============================================================================
0000120C                           610  ; UTILITY SUBROUTINES
0000120C                           611  ; =============================================================================
0000120C                           612  ; -----------------------------------------------------------------------------
0000120C                           613  UTLCHCOLW
0000120C                           614  ; CHECKS COLLISION WITH WALL
0000120C                           615  ; INPUT    - D0.W BPOSX
0000120C                           616  ;            D1.W BPOSY
0000120C                           617  ;            D2.W BSPEEDX
0000120C                           618  ;            D3.W BSPEEDY
0000120C                           619  ;            D4.W BALL DIAMETRE
0000120C                           620  ;            D5.W LIVES 
0000120C                           621  ; OUTPUT   - D2.W = BSPEEDX, 
0000120C                           622  ;          - D3.W = BSPEEDY, 
0000120C                           623  ;          - D5.W = LIVES
0000120C                           624  ;          - D6.W = IF D6 == 4 {COMPROBAR COLISION PLATAFORMA} ELSE{NO COMPROBAR} 
0000120C                           625  ; MODIFIES - NONE
0000120C                           626  ; -----------------------------------------------------------------------------
0000120C  3C3C 0004                627              MOVE.W  #4,D6
00001210  41F9 00001298            628              LEA.L   .COLLISIONS,A0
00001216  B258                     629              CMP.W   (A0)+,D1      ;UP
00001218  6E00 0008                630              BGT     .LEFT
0000121C  4443                     631              NEG.W   D3
0000121E  5346                     632              SUBI.W  #1,D6
00001220  4E75                     633              RTS
00001222                           634  .LEFT        
00001222  B058                     635              CMP.W   (A0)+,D0
00001224  6E00 0008                636              BGT     .RIGHT
00001228  4442                     637              NEG.W   D2
0000122A  5346                     638              SUBI.W  #1,D6
0000122C  4E75                     639              RTS
0000122E                           640  .RIGHT      
0000122E  D044                     641              ADD.W   D4,D0
00001230  B058                     642              CMP.W   (A0)+,D0
00001232  6D00 0008                643              BLT     .DOWN
00001236  4442                     644              NEG.W   D2
00001238  5346                     645              SUBI.W  #1,D6
0000123A  4E75                     646              RTS
0000123C                           647  .DOWN       
0000123C  D244                     648              ADD.W   D4,D1 
0000123E  B258                     649              CMP.W   (A0)+,D1                ;BPOSY - HEIGHT
00001240  6E00 0004                650              BGT     .MINLIVE1                ;SI HA CAIDO  
00001244  4E75                     651              RTS  
00001246                           652  .MINLIVE1       
00001246                           653               
00001246                           654m             UTLSNDS .SOUNDL,#1 
00001246                           655m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001246                           656m ; INPUT    - .SOUNDL ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001246                           657m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001246                           658m ; MODIFIES - D0,A1
00001246                           659m ; -----------------------------------------------------------------------------
0000125C  5345                     660              SUB.W   #1,D5                
0000125E  6600 002C                661              BNE     .MINLIVE2               
00001262                           662m             UTLSNDST
00001262                           663m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001262                           664m ; INPUT    - NONE 
00001262                           665m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001262                           666m ; MODIFIES - D0,A1
00001262                           667m ; -----------------------------------------------------------------------------
0000126A                           668m             UTLSNDS .SOUNDG,#1
0000126A                           669m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000126A                           670m ; INPUT    - .SOUNDG ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
0000126A                           671m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000126A                           672m ; MODIFIES - D0,A1
0000126A                           673m ; -----------------------------------------------------------------------------
00001280  33FC 0003 00002642       674              MOVE.W  #STAGOVR,(STANEXT)
00001288  5346                     675              SUBI.W  #1,D6
0000128A  4E75                     676              RTS
0000128C                           677  .MINLIVE2     
0000128C  33FC 0001 00002642       678              MOVE.W  #STASPACE,(STANEXT)
00001294  5346                     679              SUBI.W  #1,D6            
00001296  4E75                     680              RTS
00001298= 0000 0000 0201 01E0      681  .COLLISIONS DC.W    0,0,SCRCTRL,SCRHEIGH
000012A0= 67616D65 206F7665 ...    682  .SOUNDG      DC.L    'game over.wav',0
000012B4= 6C6F7365 206C6966 ...    683  .SOUNDL     DC.L    'lose life.wav',0
000012C8                           684  ; -----------------------------------------------------------------------------
000012C8                           685  UTLCHCOLP
000012C8                           686  ; CHECKS COLLISION WITH PLATAFORM
000012C8                           687  ; INPUT    - D0.W BPOSX
000012C8                           688  ;            D1.W BPOSY
000012C8                           689  ;            D2.W PPOSX
000012C8                           690  ;            D3.W PPOSY
000012C8                           691  ;            D4.W BALL DIAMETRE
000012C8                           692  ;            D5.W LIVES 
000012C8                           693  ; OUTPUT   - D2.W = BSPEEDX, 
000012C8                           694  ;          - D3.W = BSPEEDY, 
000012C8                           695  ;          - D5.W = LIVES
000012C8                           696  ;          - D6.W = IF D6 == 4 {COMPROBAR COLISION PLATAFORMA} ELSE{NO COMPROBAR} 
000012C8                           697  ; MODIFIES - NONE
000012C8                           698  ; -----------------------------------------------------------------------------
000012C8  D244                     699              ADD.W   D4,D1
000012CA  B641                     700              CMP.W   D1,D3 ;COMPUREBA LA Y
000012CC                           701  
000012CC                           702              
000012CC                           703              ;AQUI IRIA LA COLISION DE LOS LADOS
000012CC                           704              
000012CC                           705              
000012CC  E24C                     706              LSR.W   #1,D4
000012CE                           707             ; ADD.W   D4
000012CE                           708               
000012CE                           709  ; -----------------------------------------------------------------------------
000012CE                           710  UTLCHCOL
000012CE                           711  ; CHECKS COLLISION
000012CE                           712  ; INPUT    - D0.W X0 COORDINATE ball
000012CE                           713  ;            D1.W Y0 COORDINATE ball
000012CE                           714  ;            D2.W X1 COORDINATE plataforma
000012CE                           715  ;            D3.W Y1 COORDINATE plataforma
000012CE                           716  ;            D4.W WIDTH 0      ball
000012CE                           717  ;            D5.W WIDTH 1      plataforma 
000012CE                           718  ;            D6.W HEIGHT 0     ball
000012CE                           719  ;            D7.W HEIGHT 1     plataforma
000012CE                           720  ; OUTPUT   - D0.B=FF - COLLISION, =0 - NO COLLISION
000012CE                           721  ; MODIFIES - NONE
000012CE                           722  ; -----------------------------------------------------------------------------
000012CE  48A7 0F00                723              MOVEM.W D4-D7,-(A7)
000012D2  D840                     724              ADD.W   D0,D4
000012D4  B842                     725              CMP.W   D2,D4
000012D6  6F00 0022                726              BLE     .NOCOL
000012DA  DA42                     727              ADD.W   D2,D5
000012DC  BA40                     728              CMP.W   D0,D5
000012DE  6F00 001A                729              BLE     .NOCOL
000012E2  DC41                     730              ADD.W   D1,D6
000012E4  BC43                     731              CMP.W   D3,D6
000012E6  6F00 0012                732              BLE     .NOCOL
000012EA  DE43                     733              ADD.W   D3,D7
000012EC  BE41                     734              CMP.W   D1,D7
000012EE  6F00 000A                735              BLE     .NOCOL
000012F2  103C 00FF                736              MOVE.B  #$FF,D0
000012F6  6000 0004                737              BRA     .END
000012FA  4200                     738  .NOCOL      CLR.B   D0
000012FC  4C9F 00F0                739  .END        MOVEM.W (A7)+,D4-D7
00001300  4E75                     740              RTS
00001302                           741  
00001302                           742  
00001302                           743  
00001302                           744  
00001302                           745  -------------------- end include --------------------
00001302                           746              INCLUDE "PLAYER.X68"            ;EL JUGADOR
00001302                           747  ; -----------------------------------------------------------------------------
00001302                           748  ;           PLAYER
00001302                           749  ; -----------------------------------------------------------------------------
00001302                           750  PLRINIT
00001302                           751  ; INITIALIZES THE PLAYER
00001302                           752  ; INPUT    - NONE
00001302                           753  ; OUTPUT   - NONE
00001302                           754  ; MODIFIES - NONE
00001302                           755  ; -----------------------------------------------------------------------------
00001302                           756              
00001302  33FC 00E0 00002644       757              MOVE.W  #PINPOSX1,PPOSX
0000130A  33FC 0040 00002646       758              MOVE.W  #PINWIDTH1,PWIDTH
00001312                           759              
00001312                           760            
00001312  4E75                     761              RTS
00001314                           762              
00001314                           763  ; -----------------------------------------------------------------------------
00001314                           764  PLRREV
00001314                           765  ; PLAYER REVIVES, INITIALIZE POSITION
00001314                           766  ; INPUT    - NONE
00001314                           767  ; OUTPUT   - NONE
00001314                           768  ; MODIFIES - NONE
00001314                           769  ; -----------------------------------------------------------------------------
00001314                           770              ;DEBERIAMOS CALCULAR LA POSICION NUEVA A PARTIR DE LA WIDTH QUE NOS PASEN
00001314                           771              
00001314  33FC 00E0 00002644       772              MOVE.W  #PINPOSX1,PPOSX
0000131C  33FC 0040 00002646       773              MOVE.W  #PINWIDTH1,PWIDTH
00001324                           774            
00001324  4E75                     775              RTS
00001326                           776  
00001326                           777  ; -----------------------------------------------------------------------------
00001326                           778  
00001326                           779  PLRUPD      
00001326  48E7 6000                780              MOVEM.L D1-D2,-(A7)
0000132A  1239 000019AC            781              MOVE.B  KBDVAL,D1  
00001330  E219                     782              ROR.B   #1,D1                   ;IZQUIERDA
00001332  6400 0016                783              BCC     .RIGHTKEY               ;CUANDO C = 0
00001336                           784              ;CUANDO PPOSX ES 0 NO TINENE QUE MOVERSE MAS A LA IZQ
00001336  3439 00002644            785              MOVE.W  PPOSX,D2
0000133C  B47C 0000                786              CMP.W    #0,D2
00001340  6F00 0008                787              BLE     .RIGHTKEY
00001344  5179 00002644            788              SUB.W   #PMOVE,(PPOSX)
0000134A                           789  .RIGHTKEY
0000134A  E209                     790              LSR.B   #1,D1                   
0000134C  E219                     791              ROR.B   #1,D1                   
0000134E  6400 001C                792              BCC     .END
00001352                           793              ;CUANDO PPOSX ES IGUAL A SCRWIDTH+PWIDTH NO TIENE QUE MOVERSE A LA DERECHA
00001352  3439 00002644            794              MOVE.W  PPOSX,D2
00001358  D479 00002646            795              ADD.W   PWIDTH,D2 
0000135E                           796  
0000135E  B47C 01FC                797              CMP.W    #SCRCTRL-SCRLWIDTH,D2
00001362  6C00 0008                798              BGE     .END
00001366  5079 00002644            799              ADD.W   #PMOVE,PPOSX
0000136C                           800  .END
0000136C  4CDF 0006                801              MOVEM.L (A7)+,D1-D2
00001370  4E75                     802              RTS
00001372                           803  
00001372                           804  
00001372                           805  PPLOT
00001372  48E7 FC40                806              MOVEM.L  D0-D5/A1,-(A7)
00001376                           807              ;PLOT THE PLATAFORM
00001376                           808m             UTLSPEN #PCOLOR 
00001376                           809m ; WRAPPER FOR SET PEN TRAP 15 TASK.
00001376                           810m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
00001376                           811m ; OUTPUT   - NONE
00001376                           812m ; MODIFIES - D0,D1
00001376                           813m ; -----------------------------------------------------------------------------
00001382                           814m             UTLSFIL #PCOLOR
00001382                           815m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001382                           816m ; INPUT    - #PCOLOR COLOR IN FORMAT $00BBGGRR
00001382                           817m ; OUTPUT   - NONE
00001382                           818m ; MODIFIES - D0,D1
00001382                           819m ; -----------------------------------------------------------------------------
0000138E  3239 00002644            820              MOVE.W  PPOSX,D1
00001394  343C 01D0                821              MOVE.W  #PPOSY,D2                    
00001398  3639 00002644            822              MOVE.W  PPOSX,D3
0000139E  3839 00002646            823              MOVE.W  PWIDTH,D4 
000013A4  D644                     824              ADD.W   D4,D3
000013A6  383C 01DC                825              MOVE.W  #PPOSY+PHEIGHT,D4
000013AA  303C 0057                826              MOVE.W  #87,D0
000013AE  4E4F                     827              TRAP    #15
000013B0                           828              
000013B0                           829              ;PLOT LIFE
000013B0  3A39 00002648            830              MOVE.W  PLIVES,D5
000013B6  6700 0076                831              BEQ     .END
000013BA                           832m             UTLSPEN #$00FFFFFF  
000013BA                           833m ; WRAPPER FOR SET PEN TRAP 15 TASK.
000013BA                           834m ; INPUT    - #$00FFFFFF COLOR IN FORMAT $00BBGGRR
000013BA                           835m ; OUTPUT   - NONE
000013BA                           836m ; MODIFIES - D0,D1
000013BA                           837m ; -----------------------------------------------------------------------------
000013C6                           838m             UTLSFIL #LIVECOLOR
000013C6                           839m ; WRAPPER FOR SET FIL TRAP 15 TASK.
000013C6                           840m ; INPUT    - #LIVECOLOR COLOR IN FORMAT $00BBGGRR
000013C6                           841m ; OUTPUT   - NONE
000013C6                           842m ; MODIFIES - D0,D1
000013C6                           843m ; -----------------------------------------------------------------------------
000013D2  5345                     844              SUB.W   #1,D5             
000013D4  103C 0057                845              MOVE.B  #87,D0
000013D8  323C 0215                846              MOVE.W  #LIVEPOSX,D1
000013DC  3601                     847              MOVE.W  D1,D3
000013DE  0643 0040                848              ADD.W   #LIVEWIDTH,D3
000013E2  343C 001E                849              MOVE.W  #LIVEPOSY,D2
000013E6  3802                     850              MOVE.W  D2,D4
000013E8  0644 0010                851              ADD.W   #LIVEHEIGHT,D4
000013EC                           852  .LOOP           
000013EC  4E4F                     853              TRAP    #15
000013EE  3203                     854              MOVE.W  D3,D1
000013F0  0643 0040                855              ADD.W   #LIVEWIDTH,D3
000013F4  51CD FFF6                856              DBRA    D5,.LOOP
000013F8                           857              
000013F8                           858              ;PLOT SCORE
000013F8                           859m             UTLLOCT PSCORETX,PSCORETY            
000013F8                           860m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000013F8                           861m ; INPUT    - PSCORETX X, PSCORETY Y
000013F8                           862m ; OUTPUT   - NONE
000013F8                           863m ; MODIFIES - D0,D1
000013F8                           864m ; -----------------------------------------------------------------------------
00001402                           865m             UTLSIZC #PSCORECOL,TXMSIZE           ;PENCOLOR Y TAMAÑO
00001402                           866m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001402                           867m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR TXMSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001402                           868m ; OUTPUT   - NONE
00001402                           869m ; MODIFIES - D0,D1
00001402                           870m ; -----------------------------------------------------------------------------
00001414                           871m             UTLSFIL #$00000000
00001414                           872m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001414                           873m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001414                           874m ; OUTPUT   - NONE
00001414                           875m ; MODIFIES - D0,D1
00001414                           876m ; -----------------------------------------------------------------------------
0000141C  43F9 00001434            877              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
00001422  3239 0000264A            878              MOVE.W  PSCORE,D1
00001428  103C 0011                879              MOVE.B  #17,D0
0000142C  4E4F                     880              TRAP    #15
0000142E                           881              
0000142E                           882  .END            
0000142E  4CDF 023F                883              MOVEM.L (A7)+,D0-D5/A1
00001432  4E75                     884              RTS
00001434                           885              
00001434= 53 43 4F 52 45 3A ...    886  .TXTSCORE   DC.B    'SCORE: ',0
0000143C                           887              DS.W    0
0000143C                           888  
0000143C                           889  
0000143C                           890  
0000143C                           891  
0000143C                           892  
0000143C                           893  
0000143C                           894  
0000143C                           895  
0000143C                           896  
0000143C                           897  
0000143C                           898  
0000143C                           899  
0000143C                           900  
0000143C                           901  
0000143C                           902  
0000143C                           903  
0000143C                           904  
0000143C                           905  -------------------- end include --------------------
0000143C                           906              INCLUDE "STATES.X68"            ;
0000143C                           907  ; =============================================================================
0000143C                           908  ; GAME STATE MANAGEMENT
0000143C                           909  ; =============================================================================
0000143C                           910  
0000143C                           911  ; -----------------------------------------------------------------------------
0000143C                           912  STAINIT
0000143C                           913  ; INITALIZES THE STATE MANAGER
0000143C                           914  ; INPUT    - NONE
0000143C                           915  ; OUTPUT   - NONE
0000143C                           916  ; MODIFIES - NONE
0000143C                           917  ; -----------------------------------------------------------------------------
0000143C  33FC FFFF 00002640       918              MOVE.W  #STANONE,(STACUR)       ;STACUR = -1 
00001444                           919             ; TENEMOS QUE SABER SI -1 = CAMBIO O SE QUEDA EN EL MISMO
00001444  33FC 0000 00002642       920              MOVE.W  #STAINTR,(STANEXT)      ;STAINTR = LA PANTALLA INTRO = 0
0000144C  4E75                     921              RTS
0000144E                           922  
0000144E                           923  ; -----------------------------------------------------------------------------
0000144E                           924  STAUPD
0000144E                           925  ; PERFORMS STATE UPDATE AND INIT IF NECESSARY
0000144E                           926  ; INPUT    - NONE
0000144E                           927  ; OUTPUT   - NONE
0000144E                           928  ; MODIFIES - NONE
0000144E                           929  ; -----------------------------------------------------------------------------
0000144E  48E7 8080                930              MOVEM.L D0/A0,-(A7)
00001452  4280                     931              CLR.L   D0
00001454  3039 00002642            932              MOVE.W  (STANEXT),D0
0000145A  B079 00002640            933              CMP.W   (STACUR),D0
00001460  6700 0012                934              BEQ     .DOUPD
00001464  33C0 00002640            935              MOVE.W  D0,(STACUR)             ;AHORA ES LA PANTALLA DE INTRO
0000146A  E588                     936              LSL.L   #2,D0
0000146C  2040                     937              MOVE.L  D0,A0
0000146E  2068 148C                938              MOVE.L  .INITBL(A0),A0
00001472  4E90                     939              JSR     (A0)
00001474  4280                     940  .DOUPD      CLR.L   D0                      ; IN ANY CASE, DO UPDATE
00001476  3039 00002640            941              MOVE.W  (STACUR),D0
0000147C  E588                     942              LSL.L   #2,D0
0000147E  2040                     943              MOVE.L  D0,A0
00001480  2068 1498                944              MOVE.L  .UPDTBL(A0),A0
00001484  4E90                     945              JSR     (A0)
00001486  4CDF 0101                946              MOVEM.L (A7)+,D0/A0
0000148A  4E75                     947              RTS
0000148C= 00001522 000014D6 ...    948  .INITBL     DC.L    STAINTRI,STAPLAYI,STAEMPTY ;EL 0 ES VACIAR LA MEMORIA DEL JUEGO
00001498                           949                                               ;EL 1 ES LO QUE INICIA EL JUEGO = PINIT
00001498                           950                                               ;EL 2 ES NO HACER NADA 
00001498= 00001552 000014E2 ...    951  .UPDTBL     DC.L    STAINTRU,STASPACEU,STAPLAYU,STAGOVRU
000014A8                           952                                              ;EL 0 ES SI SE PULSA ESPACIO CAMBIAR EL STANEXT A PLAY
000014A8                           953                                              ;EL 2 HACE QUE SE UPDATE 
000014A8                           954  
000014A8                           955  ; -----------------------------------------------------------------------------
000014A8                           956  STAPLOT
000014A8                           957  ; PERFORMS STATE PLOT
000014A8                           958  ; INPUT    - NONE
000014A8                           959  ; OUTPUT   - NONE
000014A8                           960  ; MODIFIES - NONE
000014A8                           961  ; -----------------------------------------------------------------------------
000014A8  48E7 8080                962              MOVEM.L D0/A0,-(A7)
000014AC  4280                     963              CLR.L   D0
000014AE  3039 00002640            964              MOVE.W  (STACUR),D0
000014B4  E588                     965              LSL.L   #2,D0
000014B6  2040                     966              MOVE.L  D0,A0
000014B8  2068 14C4                967              MOVE.L  .PLTTBL(A0),A0          ;ELIGE QUE HACER
000014BC  4E90                     968              JSR     (A0)
000014BE  4CDF 0101                969              MOVEM.L (A7)+,D0/A0
000014C2  4E75                     970              RTS
000014C4= 00001584 0000150A ...    971  .PLTTBL     DC.L    STAINTRP,STAPLAYP,STAPLAYP,STAGOVRP
000014D4                           972                             ;SPACE      NIVEL1   NIVEL2    NIVEL3   
000014D4                           973  
000014D4                           974  ; -----------------------------------------------------------------------------
000014D4                           975  STAEMPTY
000014D4                           976  ; EMPTY SUBROUTINE FOR CASES WITH NOTHING TO DO
000014D4                           977  ; INPUT    - NONE
000014D4                           978  ; OUTPUT   - NONE
000014D4                           979  ; MODIFIES - NONE
000014D4                           980  ; NOTE     - JUST A PLACEHOLDER. NOTHING TO DO.
000014D4                           981  ; -----------------------------------------------------------------------------
000014D4  4E75                     982              RTS
000014D6                           983  
000014D6                           984  ; -----------------------------------------------------------------------------
000014D6                           985  STAPLAYI    ;DEL NIVEL1, COMIENZO
000014D6                           986  
000014D6                           987  ; PLAY STATE INITIALIZATION.
000014D6                           988  ; INPUT    - NONE
000014D6                           989  ; OUTPUT   - NONE
000014D6                           990  ; MODIFIES - NONE
000014D6                           991  ; NOTE     - JUST A WRAPPER FOR PLRINIT
000014D6                           992  ; -----------------------------------------------------------------------------
000014D6  4EB8 1302                993              JSR     PLRINIT
000014DA  4EB9 0000165C            994              JSR     BINIT
000014E0  4E75                     995              RTS
000014E2                           996  ; -----------------------------------------------------------------------------
000014E2                           997  STASPACEU
000014E2                           998  ; WAITS FOR SPACE TO BE PRESSED, AND BEGIN THE GAME
000014E2                           999  ; INPUT    - NONE
000014E2                          1000  ; OUTPUT   - NONE
000014E2                          1001  ; MODIFIES - NONE
000014E2                          1002  ; -----------------------------------------------------------------------------
000014E2                          1003             
000014E2  0839 0004 000019AD      1004              BTST.B  #KBDBITF1,(KBDEDGE)
000014EA  6700 000A               1005              BEQ     .END
000014EE  33FC 0002 00002642      1006              MOVE.W  #STAPLAY,(STANEXT)
000014F6                          1007  .END        
000014F6  4E75                    1008              RTS
000014F8                          1009                               
000014F8                          1010  
000014F8                          1011  ; -----------------------------------------------------------------------------
000014F8                          1012  STAPLAYU
000014F8                          1013  ; PLAY STATE UPDATE
000014F8                          1014  ; INPUT    - NONE
000014F8                          1015  ; OUTPUT   - NONE
000014F8                          1016  ; MODIFIES - NONE
000014F8                          1017  ; -----------------------------------------------------------------------------
000014F8                          1018              
000014F8  4EB8 1326               1019              JSR     PLRUPD
000014FC  4EB9 0000188C           1020              JSR     BLUPD
00001502  4EB9 000016D0           1021              JSR     BUPD                    
00001508  4E75                    1022              RTS
0000150A                          1023  ; -----------------------------------------------------------------------------
0000150A                          1024  STAPLAYP
0000150A                          1025  ; PLAY STATE PLOT
0000150A                          1026  ; INPUT    - NONE
0000150A                          1027  ; OUTPUT   - NONE
0000150A                          1028  ; MODIFIES - NONE
0000150A                          1029  ; -----------------------------------------------------------------------------
0000150A  4EB9 000017B4           1030              JSR     BPLOT
00001510  4EB9 00001920           1031              JSR     BLPLOT
00001516  4EB8 1372               1032              JSR     PPLOT
0000151A  4EB9 000017F4           1033              JSR     SCTRLPLOT
00001520  4E75                    1034              RTS
00001522                          1035  
00001522                          1036  ; -----------------------------------------------------------------------------
00001522                          1037  STAINTRI                  ;VACIA LA MEMORIA DEL JUEGO
00001522                          1038  ; PARA QUE EL SCORE LA VIDA SE VUELVAN A REINICIAR
00001522                          1039  
00001522                          1040  ; INTRO STATE INIT
00001522                          1041  ; INPUT    - NONE
00001522                          1042  ; OUTPUT   - NONE
00001522                          1043  ; MODIFIES - NONE
00001522                          1044  ; NOTE     - JUST A WRAPPER FOR DMMINIT TO RELEASE ALL MEMORY
00001522                          1045  ; -----------------------------------------------------------------------------
00001522                          1046m             UTLSNDS .SOUND,#1
00001522                          1047m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
00001522                          1048m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
00001522                          1049m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
00001522                          1050m ; MODIFIES - D0,A1
00001522                          1051m ; -----------------------------------------------------------------------------
00001538  4EB8 111A               1052              JSR     DMMINIT
0000153C  4E75                    1053              RTS
0000153E= 73746172 74206C61 ...   1054  .SOUND      DC.L    'start largo.wav',0
00001552                          1055  ; -----------------------------------------------------------------------------
00001552                          1056  STAINTRU
00001552                          1057  ; INTRO STATE UPDATE
00001552                          1058  ; INPUT    - NONE
00001552                          1059  ; OUTPUT   - NONE
00001552                          1060  ; MODIFIES - NONE
00001552                          1061  ; -----------------------------------------------------------------------------
00001552                          1062              
00001552  0839 0004 000019AD      1063              BTST.B  #KBDBITF1,(KBDEDGE)
0000155A  6700 0026               1064              BEQ     .END
0000155E                          1065m             UTLSNDST
0000155E                          1066m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000155E                          1067m ; INPUT    - NONE 
0000155E                          1068m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000155E                          1069m ; MODIFIES - D0,A1
0000155E                          1070m ; -----------------------------------------------------------------------------
00001566  33FC 0001 00002642      1071              MOVE.W  #STASPACE,(STANEXT)
0000156E  4EB9 00001868           1072              JSR     BLINIT
00001574  33FC 0003 00002648      1073              MOVE.W  #PINLIVE,PLIVES
0000157C  4279 0000264A           1074              CLR.W   PSCORE            
00001582  4E75                    1075  .END        RTS
00001584                          1076  
00001584                          1077  ; -----------------------------------------------------------------------------
00001584                          1078  STAINTRP
00001584                          1079  ; INTRO STATE PLOT
00001584                          1080  ; INPUT    - NONE
00001584                          1081  ; OUTPUT   - NONE
00001584                          1082  ; MODIFIES - NONE
00001584                          1083  ; -----------------------------------------------------------------------------
00001584  48E7 E040               1084              MOVEM.L A1/D0-D2,-(A7)
00001588                          1085              ;TITULO
00001588                          1086m             UTLLOCT INTTITX,INTTITY      
00001588                          1087m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001588                          1088m ; INPUT    - INTTITX X, INTTITY Y
00001588                          1089m ; OUTPUT   - NONE
00001588                          1090m ; MODIFIES - D0,D1
00001588                          1091m ; -----------------------------------------------------------------------------
00001592                          1092m             UTLSIZC #INTTITC,TXBSIZE
00001592                          1093m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
00001592                          1094m ; INPUT    - #INTTITC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
00001592                          1095m ; OUTPUT   - NONE
00001592                          1096m ; MODIFIES - D0,D1
00001592                          1097m ; -----------------------------------------------------------------------------
000015A4  43F9 000015DE           1098              LEA     .TITSTR,A1            
000015AA  103C 000E               1099              MOVE.B  #14,D0
000015AE  4E4F                    1100              TRAP    #15
000015B0                          1101              
000015B0                          1102              ;START
000015B0                          1103m             UTLLOCT INTPRSX,INTPRSY
000015B0                          1104m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
000015B0                          1105m ; INPUT    - INTPRSX X, INTPRSY Y
000015B0                          1106m ; OUTPUT   - NONE
000015B0                          1107m ; MODIFIES - D0,D1
000015B0                          1108m ; -----------------------------------------------------------------------------
000015BA                          1109m             UTLSIZC #INTPRSC,TXSSIZE
000015BA                          1110m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
000015BA                          1111m ; INPUT    - #INTPRSC COLOR IN FORMAT $00BBGGRR TXSSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
000015BA                          1112m ; OUTPUT   - NONE
000015BA                          1113m ; MODIFIES - D0,D1
000015BA                          1114m ; -----------------------------------------------------------------------------
000015CC  43F9 000015EE           1115              LEA     .PRSSTR,A1
000015D2  103C 000E               1116              MOVE.B  #14,D0
000015D6  4E4F                    1117              TRAP    #15
000015D8                          1118              
000015D8  4CDF 0207               1119              MOVEM.L (A7)+,A1/D0-D2
000015DC  4E75                    1120              RTS
000015DE                          1121  
000015DE= 42 72 65 61 6B 69 ...   1122  .TITSTR     DC.B    'Breaking Blocks',0
000015EE= 50 55 53 48 20 46 ...   1123  .PRSSTR     DC.B    'PUSH FIRE TO START',0
00001602                          1124              DS.W    0
00001602                          1125  ; -----------------------------------------------------------------------------
00001602                          1126  STAGOVRU
00001602                          1127  ; GAME OVER STATE UPDATE
00001602                          1128  ; INPUT    - NONE
00001602                          1129  ; OUTPUT   - NONE
00001602                          1130  ; MODIFIES - NONE
00001602                          1131  ; -----------------------------------------------------------------------------
00001602  0839 0004 000019AD      1132              BTST.B  #KBDBITF1,(KBDEDGE)
0000160A  6700 0012               1133              BEQ     .END
0000160E                          1134m             UTLSNDST
0000160E                          1135m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
0000160E                          1136m ; INPUT    - NONE 
0000160E                          1137m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
0000160E                          1138m ; MODIFIES - D0,A1
0000160E                          1139m ; -----------------------------------------------------------------------------
00001616  33FC 0000 00002642      1140              MOVE.W  #STAINTR,(STANEXT)
0000161E  4E75                    1141  .END        RTS
00001620                          1142  
00001620                          1143  ; -----------------------------------------------------------------------------
00001620                          1144  STAGOVRP
00001620                          1145  ; GAME OVER STATE PLOT
00001620                          1146  ; INPUT    - NONE
00001620                          1147  ; OUTPUT   - NONE
00001620                          1148  ; MODIFIES - NONE
00001620                          1149  ; -----------------------------------------------------------------------------
00001620                          1150  
00001620  48E7 E040               1151              MOVEM.L A1/D0-D2,-(A7)
00001624                          1152              
00001624                          1153              ;GAME OVER TEXT
00001624                          1154m             UTLLOCT GOVERX,GOVERY            
00001624                          1155m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001624                          1156m ; INPUT    - GOVERX X, GOVERY Y
00001624                          1157m ; OUTPUT   - NONE
00001624                          1158m ; MODIFIES - D0,D1
00001624                          1159m ; -----------------------------------------------------------------------------
0000162E                          1160m             UTLSIZC #GOVERC,TXBSIZE
0000162E                          1161m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
0000162E                          1162m ; INPUT    - #GOVERC COLOR IN FORMAT $00BBGGRR TXBSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
0000162E                          1163m ; OUTPUT   - NONE
0000162E                          1164m ; MODIFIES - D0,D1
0000162E                          1165m ; -----------------------------------------------------------------------------
00001640  43F9 00001652           1166              LEA     .GOVSTR,A1              ;PONE EL TEXTO
00001646  103C 000E               1167              MOVE.B  #14,D0
0000164A  4E4F                    1168              TRAP    #15
0000164C                          1169  
0000164C  4CDF 0207               1170              MOVEM.L (A7)+,A1/D0-D2
00001650  4E75                    1171              RTS
00001652= 47 41 4D 45 20 4F ...   1172  .GOVSTR     DC.B    'GAME OVER',0
0000165C                          1173              DS.W    0
0000165C                          1174  
0000165C                          1175  
0000165C                          1176  
0000165C                          1177  
0000165C                          1178  
0000165C                          1179  -------------------- end include --------------------
0000165C                          1180              INCLUDE "BALL.X68"              ;LA PELOTA
0000165C                          1181  ; =============================================================================
0000165C                          1182  ; BALL
0000165C                          1183  ; =============================================================================
0000165C                          1184  ;----------------------------------
0000165C                          1185  BINIT
0000165C                          1186  ;INITIALIZE THE BALL
0000165C                          1187  ;----------------------------------
0000165C  33FC 00FC 0000264E      1188              MOVE.W  #BINPOSX,BPOSX
00001664  33FC 01C6 00002650      1189              MOVE.W  #BINPOSY,BPOSY  
0000166C  33FC FFFC 00002652      1190              MOVE.W  #BINSPEED,BSPEEDX
00001674  33FC FFFC 00002654      1191              MOVE.W  #BINSPEED,BSPEEDY
0000167C  4E75                    1192              RTS
0000167E                          1193  ;----------------------------------         
0000167E                          1194  BNXTLEV
0000167E                          1195  ;INITIALIZE THE BALL TO THE NEXT LEVEL
0000167E                          1196  ;----------------------------------
0000167E                          1197  ;BALL NEXT LEVEL       (NEXT LEVEL)
0000167E  48E7 8000               1198              MOVEM.L D0,-(A7)
00001682  33FC 00FC 0000264E      1199              MOVE.W  #BINPOSX,BPOSX
0000168A  33FC 01C6 00002650      1200              MOVE.W  #BINPOSY,BPOSY
00001692  3039 00002654           1201              MOVE.W  BSPEEDY,D0
00001698  6B00 000E               1202              BMI     .NEGY
0000169C  5479 00002654           1203              ADD.W   #2,BSPEEDY
000016A2  4EB9 000016AE           1204              JSR     .X
000016A8                          1205  .NEGY        
000016A8  5579 00002654           1206              SUB.W   #2,BSPEEDY
000016AE                          1207  .X          
000016AE  3039 00002652           1208              MOVE.W  BSPEEDX,D0
000016B4  6B00 000E               1209              BMI     .NEGX 
000016B8  5479 00002652           1210              ADD.W   #2,BSPEEDX
000016BE  4EB9 000016CA           1211              JSR     .END
000016C4                          1212  .NEGX       
000016C4  5579 00002652           1213              SUB.W   #2,BSPEEDX 
000016CA                          1214  .END        
000016CA  4CDF 0001               1215              MOVEM.L (A7)+,D0
000016CE  4E75                    1216              RTS
000016D0                          1217        
000016D0                          1218  ;-----------------------------------------------------------------------------
000016D0                          1219  BUPD
000016D0                          1220  ;UPDATES THE BALL
000016D0                          1221  ;-----------------------------------
000016D0                          1222  ; UPDATES THE BALL MOTION
000016D0                          1223  ; INPUT    - NONE 
000016D0                          1224  ; OUTPUT   - NONE 
000016D0                          1225  ; MODIFIES - NONE
000016D0                          1226  ; -----------------------------------------------------------------------------
000016D0                          1227  
000016D0  48E7 FE80               1228              MOVEM.L D0-D6/A0,-(A7)
000016D4                          1229              ;COMPRUEBA COLISIONES CON LAS 4 PAREDES
000016D4                          1230              ;Y SI PASA LA DE ABAJO LE ELIMINA UNA VIDA, O ENVIA LA PANTALLA GAME OVER
000016D4  3039 0000264E           1231              MOVE.W  BPOSX,D0
000016DA  3239 00002650           1232              MOVE.W  BPOSY,D1
000016E0  3439 00002652           1233              MOVE.W  BSPEEDX,D2
000016E6  3639 00002654           1234              MOVE.W  BSPEEDY,D3
000016EC  383C 0008               1235              MOVE.W  #BDIAMET,D4
000016F0  3A39 00002648           1236              MOVE.W  PLIVES,D5
000016F6  4EB8 120C               1237              JSR     UTLCHCOLW    ;CUANDO TOCA LA PARED SE DISMINUYE D6              
000016FA  BC7C 0003               1238              CMP.W   #3,D6
000016FE  6600 001A               1239              BNE     .PLATAFORMA
00001702  33C2 00002652           1240              MOVE.W  D2,BSPEEDX
00001708  33C3 00002654           1241              MOVE.W  D3,BSPEEDY
0000170E  33C5 00002648           1242              MOVE.W  D5,PLIVES
00001714  4EF9 00001796           1243              JMP     .END
0000171A                          1244  
0000171A                          1245              
0000171A                          1246  .PLATAFORMA
0000171A  3239 00002650           1247              MOVE.W  BPOSY,D1
00001720  5041                    1248              ADD.W   #BDIAMET,D1
00001722  343C 01D0               1249              MOVE.W  #PPOSY,D2               ;D2-D1
00001726  B441                    1250              CMP.W   D1,D2                   ;SI LA Y SE CORRESPONDE
00001728  6E00 006C               1251              BGT     .END                    ;SI LA BPOSY+WIDHT ES MAYOR QUE PPOSY,
0000172C                          1252              
0000172C                          1253           
0000172C                          1254  .PLRXLEFT   
0000172C                          1255              
0000172C  3239 0000264E           1256              MOVE.W  BPOSX,D1
00001732  5041                    1257              ADD.W   #BDIAMET,D1
00001734  3439 00002644           1258              MOVE.W  PPOSX,D2
0000173A  B441                    1259              CMP.W   D1,D2                   ;MIRAMOS EL IZQUIERDO
0000173C  6C00 0058               1260              BGE     .END
00001740                          1261              
00001740                          1262  .PLRXMIDDLE 
00001740  3639 00002646           1263              MOVE.W  PWIDTH,D3
00001746  E24B                    1264              LSR.W   #1,D3
00001748  D443                    1265              ADD.W   D3,D2
0000174A  B441                    1266              CMP.W   D1,D2                   ;CENTRO - POS PEL
0000174C  6F00 001E               1267              BLE     .PLRXRIGHT
00001750                          1268             
00001750  4479 00002654           1269              NEG.W   BSPEEDY
00001756                          1270              
00001756  3239 00002652           1271              MOVE.W  BSPEEDX,D1
0000175C  6B00 0038               1272              BMI     .END
00001760  4479 00002652           1273              NEG.W   BSPEEDX
00001766  4EF9 00001796           1274              JMP     .END
0000176C                          1275              
0000176C                          1276  .PLRXRIGHT 
0000176C  3239 0000264E           1277              MOVE.W  BPOSX,D1           
00001772  D443                    1278              ADD.W   D3,D2                   ;COMPARAMOS EL LADO IZQ DE LA PLATAFORMA
00001774  B441                    1279              CMP.W   D1,D2                   ;EL DERECHO
00001776  6F00 001E               1280              BLE     .END                   
0000177A  4479 00002654           1281              NEG.W   BSPEEDY
00001780                          1282              
00001780  3239 00002652           1283              MOVE.W  BSPEEDX,D1
00001786  6A00 000E               1284              BPL     .END              ;SI ES POSITIVO SOLO NEGAMOS Y
0000178A  4479 00002652           1285              NEG.W   BSPEEDX
00001790  4EF9 00001796           1286              JMP     .END
00001796                          1287  
00001796                          1288  .END            
00001796                          1289  
00001796  3039 00002652           1290              MOVE.W  BSPEEDX,D0
0000179C  D179 0000264E           1291              ADD.W   D0,BPOSX
000017A2                          1292              
000017A2  3239 00002654           1293              MOVE.W  BSPEEDY,D1
000017A8  D379 00002650           1294              ADD.W   D1,BPOSY
000017AE                          1295  
000017AE  4CDF 017F               1296              MOVEM.L (A7)+,D0-D6/A0
000017B2                          1297              
000017B2  4E75                    1298              RTS
000017B4                          1299  
000017B4                          1300  ;.SOUND      DC.L    'blocks.wav',0
000017B4                          1301  BPLOT       
000017B4  48E7 FC00               1302              MOVEM.L  D0-D5,-(A7)
000017B8                          1303              ;CONTOUR COLOR
000017B8  223C 00FFFFFF           1304              MOVE.L  #BINCOLOR,D1  
000017BE  103C 0050               1305              MOVE.B  #80,D0
000017C2  4E4F                    1306              TRAP    #15
000017C4                          1307      
000017C4                          1308               ;FILL COLOR
000017C4  223C 00FFFFFF           1309              MOVE.L   #BINCOLOR,D1  
000017CA  103C 0051               1310              MOVE.B  #81,D0
000017CE  4E4F                    1311              TRAP    #15
000017D0                          1312   
000017D0                          1313              ;CIRCLE
000017D0                          1314  
000017D0  3A3C 0008               1315              MOVE.W  #BDIAMET,D5 
000017D4                          1316      
000017D4  3639 0000264E           1317              MOVE.W  BPOSX,D3
000017DA  3839 00002650           1318              MOVE.W  BPOSY,D4
000017E0  3203                    1319              MOVE.W  D3,D1
000017E2  3404                    1320              MOVE.W  D4,D2
000017E4                          1321              
000017E4  D845                    1322              ADD.W   D5,D4
000017E6  D645                    1323              ADD.W   D5,D3
000017E8                          1324      
000017E8                          1325  
000017E8  103C 0058               1326              MOVE.B  #88,D0
000017EC  4E4F                    1327              TRAP    #15
000017EE                          1328      
000017EE  4CDF 003F               1329              MOVEM.L  (A7)+,D0-D5
000017F2                          1330  
000017F2  4E75                    1331              RTS
000017F4                          1332  
000017F4                          1333  
000017F4                          1334  
000017F4                          1335  
000017F4                          1336  
000017F4                          1337  
000017F4                          1338  
000017F4                          1339  
000017F4                          1340  
000017F4                          1341  
000017F4                          1342  
000017F4                          1343  
000017F4                          1344  
000017F4                          1345  
000017F4                          1346  
000017F4                          1347  
000017F4                          1348  
000017F4                          1349  
000017F4                          1350  
000017F4                          1351  
000017F4                          1352  
000017F4                          1353  
000017F4                          1354  -------------------- end include --------------------
000017F4                          1355              INCLUDE "SCTRL.X68"             ;CONTROL SCREEN
000017F4                          1356  ;--------------------------------------------------------------------------
000017F4                          1357  ;SCREEN CONTROL
000017F4                          1358  ;--------------------------------------------------------------------------
000017F4                          1359  
000017F4                          1360  
000017F4                          1361  SCTRLPLOT
000017F4  48E7 FC40               1362              MOVEM.L D0-D5/A1,-(A7)       
000017F8                          1363              
000017F8                          1364              ;DIBUJA LA BARRA DE SEPARACIÓN
000017F8  223C 00FFFFFF           1365              MOVE.L  #$00FFFFFF,D1  ;COLOR
000017FE  103C 0050               1366              MOVE.B  #80,D0
00001802  4E4F                    1367              TRAP    #15
00001804                          1368              
00001804  C2BC 00FFFFFF           1369              AND.L   #$00FFFFFF,D1  ;COLOR
0000180A  103C 0051               1370              MOVE.B  #81,D0
0000180E  4E4F                    1371              TRAP    #15
00001810                          1372              
00001810  103C 0057               1373              MOVE.B  #87,D0
00001814  323C 0201               1374              MOVE.W  #SCRCTRL,D1
00001818  363C 0206               1375              MOVE.W  #SCRCTRL+SCRLWIDTH,D3
0000181C  4282                    1376              CLR.L   D2
0000181E  383C 01E0               1377              MOVE.W  #SCRHEIGH,D4
00001822  4E4F                    1378              TRAP    #15
00001824                          1379              
00001824                          1380              ;SCORE
00001824                          1381              
00001824                          1382  
00001824                          1383m             UTLLOCT PSCORETX,PSCORETY            
00001824                          1384m ; WRAPPER TO TEXT POSITIONNING FROM TRAP 15
00001824                          1385m ; INPUT    - PSCORETX X, PSCORETY Y
00001824                          1386m ; OUTPUT   - NONE
00001824                          1387m ; MODIFIES - D0,D1
00001824                          1388m ; -----------------------------------------------------------------------------
0000182E                          1389m             UTLSIZC #PSCORECOL,TXMSIZE           ;PENCOLOR Y TAMAÑO
0000182E                          1390m ; WRAPPER FOR SET SIZE AND COLOR TRAP 15 TASK.
0000182E                          1391m ; INPUT    - #PSCORECOL COLOR IN FORMAT $00BBGGRR TXMSIZE SIZE (8, 9, 10, 12, 14, 16, 18))
0000182E                          1392m ; OUTPUT   - NONE
0000182E                          1393m ; MODIFIES - D0,D1
0000182E                          1394m ; -----------------------------------------------------------------------------
00001840                          1395m             UTLSFIL #$00000000
00001840                          1396m ; WRAPPER FOR SET FIL TRAP 15 TASK.
00001840                          1397m ; INPUT    - #$00000000 COLOR IN FORMAT $00BBGGRR
00001840                          1398m ; OUTPUT   - NONE
00001840                          1399m ; MODIFIES - D0,D1
00001840                          1400m ; -----------------------------------------------------------------------------
00001848  43F9 00001860           1401              LEA     .TXTSCORE,A1              ;PONE EL TEXTO
0000184E  3239 0000264A           1402              MOVE.W  PSCORE,D1
00001854  103C 0011               1403              MOVE.B  #17,D0
00001858  4E4F                    1404              TRAP    #15
0000185A                          1405              
0000185A  4CDF 023F               1406              MOVEM.L (A7)+,D0-D5/A1
0000185E  4E75                    1407              RTS   
00001860                          1408  
00001860                          1409  
00001860= 53 43 4F 52 45 3A ...   1410  .TXTSCORE   DC.B    'SCORE: ',0
00001868                          1411              DS.W    0
00001868                          1412  
00001868                          1413  
00001868                          1414  -------------------- end include --------------------
00001868                          1415              INCLUDE "BLOCKS.X68"           ;BLOQUES
00001868                          1416  ;-----------------------------------------------------------
00001868                          1417  ;           BLOCKS
00001868                          1418  ;-----------------------------------------------------------
00001868                          1419    
00001868                          1420  BLINIT
00001868  48E7 8080               1421              MOVEM.L D0/A0,-(A7)
0000186C  41F9 0000265A           1422              LEA.L   BLMATRIX,A0
00001872  303C 000B               1423              MOVE.W  #BLROW-1,D0             ;7
00001876                          1424  .LOOP       
00001876  10FC 00FF               1425              MOVE.B  #%11111111,(A0)+
0000187A  51C8 FFFA               1426              DBRA    D0,.LOOP
0000187E  33FC 0060 00002658      1427              MOVE.W  #BLROW*BLCOL,BLCOUNTER
00001886                          1428              
00001886  4CDF 0101               1429              MOVEM.L (A7)+,D0/A0
0000188A  4E75                    1430              RTS
0000188C                          1431              
0000188C                          1432              
0000188C                          1433              
0000188C                          1434  BLUPD       
0000188C  48E7 F080               1435              MOVEM.L D0-D3/A0,-(A7)
00001890  3039 0000264E           1436              MOVE.W BPOSX,D0
00001896  3239 00002650           1437              MOVE.W  BPOSY,D1
0000189C  5840                    1438              ADD.W #BDIAMET/2,D0              ;D0 -> POSICIÓN CENTRAL X DE LA BOLA
0000189E  E889                    1439              LSR.L  #4,D1                    ;BPOSY/BLHEIGHT. D1 -> FILA EN LA QUE ESTA LA BOLA
000018A0  343C 000B               1440              MOVE.W  #BLROW-1,D2
000018A4  B441                    1441              CMP.W   D1,D2                   ;SI ESTÁ POR DEBAJO DE LA ÚLTIMA FILA SALTA DIRECTO A END
000018A6  6D00 0062               1442              BLT     .END                    
000018AA  41F9 0000265A           1443              LEA.L   BLMATRIX,A0
000018B0  D1C1                    1444              ADDA.L  D1,A0                   ;CARGAMOS EN A0 LA DIRECCIÓN DEL BYTE DE LA FILA
000018B2                          1445              
000018B2                          1446                                              ;OBTENEMOS EN QUE COLUMNA ESTA
000018B2  EC88                    1447              LSR.L  #6,D0                    ;D0 -> COLUMNA EN LA QUE ESTÁ LA BOLA
000018B4  363C 0007               1448              MOVE.W  #BLCOL-1,D3             ;LAS COMPROBACIONES EMPIEZAN DESDE LA DERECHA              
000018B8  9640                    1449              SUB.W   D0,D3                   ;D3 -> COLUMNA (DESDE DRCHA) DONDE ESTÁ LA BOLA
000018BA                          1450              ;7-8
000018BA  6A00 0004               1451              BPL     .ERROR  
000018BE  4283                    1452              CLR.L D3        
000018C0                          1453  .ERROR
000018C0  0710                    1454              BTST.B  D3,(A0)                 ;MIRAMOS EL BIT DONDE ESTA 
000018C2  6700 0046               1455              BEQ     .END                    ;SALTA SI EN ESA POSICION YA HABIA UN 0
000018C6  5241                    1456              ADDI.W  #1,D1
000018C8  E989                    1457              LSL.L   #4,D1
000018CA  3039 00002654           1458              MOVE.W  BSPEEDY,D0
000018D0  6B00 0006               1459              BMI     .DOWNBL
000018D4  0441 0018               1460              SUB.W   #BLHEIGHT+BDIAMET,D1
000018D8                          1461  .DOWNBL
000018D8  33C1 00002650           1462              MOVE.W  D1,BPOSY                ;CORRECION DE LA BPOSY
000018DE  4479 00002654           1463              NEG.W   BSPEEDY
000018E4  0790                    1464              BCLR    D3,(A0)
000018E6  5379 00002658           1465              SUB.W   #1,BLCOUNTER
000018EC                          1466m             UTLSNDS  .SOUND,#1
000018EC                          1467m ; WRAPPER FOR PLAYING WAV FILE TRAP 15 TASK
000018EC                          1468m ; INPUT    - .SOUND ADDRESS TO STRING WITH NAME OF THE FILE, #1 NUM SOUNDS, 
000018EC                          1469m ; OUTPUT   - D0.W=0 IF SOUND NOT PLAYED, NON ZERO IF PLAYED
000018EC                          1470m ; MODIFIES - D0,A1
000018EC                          1471m ; -----------------------------------------------------------------------------
00001902  0679 0064 0000264A      1472              ADD.W   #100,PSCORE
0000190A                          1473              
0000190A                          1474          
0000190A                          1475              
0000190A                          1476  ;;;ANDREA: EL RECTANGULO 7 ES EL 0, EL 6 EL 1, EL 5 EL 2...
0000190A                          1477              
0000190A                          1478  
0000190A                          1479  .END            
0000190A  4CDF 010F               1480              MOVEM.L (A7)+,D0-D3/A0
0000190E  4E75                    1481              RTS     
00001910= 626C6F63 6B732E77 ...   1482  .SOUND      DC.L    'blocks.wav',0
00001920                          1483              
00001920                          1484  BLPLOT
00001920  48E7 FFC0               1485              MOVEM.L D0-D7/A0-A1,-(A7)
00001924  103C 0050               1486              MOVE.B  #80,D0                  ;SET PEN COLOR
00001928  7200                    1487              MOVE.L  #0,D1
0000192A  4E4F                    1488              TRAP    #15
0000192C                          1489              
0000192C  4242                    1490              CLR.W   D2                      ;UPPER Y
0000192E  383C 0010               1491              MOVE.W  #BLHEIGHT,D4            ;DOWN Y
00001932  41F8 11DC               1492              LEA     COLORS,A0
00001936                          1493              
00001936  3A3C 000B               1494              MOVE.W  #BLROW-1,D5    ;DBRA
0000193A  227C 00000000           1495              MOVE.L  #0,A1                      ;PARA SABER CUAL PONER D6= FILA
00001940                          1496              
00001940                          1497  
00001940                          1498              
00001940                          1499  .LOOP2                                      ;BUCLE DE FILAS
00001940                          1500   
00001940  103C 0051               1501              MOVE.B  #81,D0                  ;SET COLOR
00001944  2218                    1502              MOVE.L  (A0)+,D1
00001946  4E4F                    1503              TRAP    #15
00001948                          1504                                        ;BUCLE FILAS
00001948                          1505              
00001948  363C 0040               1506              MOVE.W  #BLWIDTH,D3             ;RIGHT X
0000194C  4241                    1507              CLR.W   D1                      ;LEFT X
0000194E                          1508              
0000194E  3F05                    1509              MOVE.W  D5,-(A7)                ;GUARDO EL VALOR DEL DECREMENTO DE LOOP2
00001950  3A3C 0007               1510              MOVE.W  #BLCOL-1,D5
00001954  1C29 265A               1511              MOVE.B  BLMATRIX(A1),D6
00001958                          1512  .LOOP1                                      ; BUCLE COLUMNAS
00001958                          1513             
00001958  E31E                    1514              ROL.B   #1,D6
0000195A  6400 0008               1515              BCC     .SALTO                  ; SALTA SI CARRY = 0
0000195E                          1516              
0000195E  103C 0057               1517              MOVE.B  #87,D0                  ; DIBUJAMOS EL CUADRADO
00001962  4E4F                    1518              TRAP    #15
00001964                          1519  .SALTO
00001964  3203                    1520              MOVE.W  D3,D1
00001966  0643 0040               1521              ADD.W   #BLWIDTH, D3
0000196A  5247                    1522              ADDI.W  #1,D7
0000196C  51CD FFEA               1523              DBRA    D5,.LOOP1 
00001970  3A1F                    1524              MOVE.W  (A7)+,D5              
00001972                          1525  
00001972  5249                    1526              ADDA.W  #1,A1
00001974  3404                    1527              MOVE.W  D4,D2
00001976  0644 0010               1528              ADD.W   #BLHEIGHT,D4
0000197A  51CD FFC4               1529              DBRA    D5,.LOOP2
0000197E  4CDF 03FF               1530              MOVEM.L (A7)+,D0-D7/A0-A1
00001982  4E75                    1531              RTS
00001984                          1532  
00001984                          1533  
00001984                          1534  
00001984                          1535  
00001984                          1536  
00001984                          1537  
00001984                          1538  
00001984                          1539  
00001984                          1540  
00001984                          1541  
00001984                          1542  
00001984                          1543  
00001984                          1544  
00001984                          1545  
00001984                          1546  
00001984                          1547  
00001984                          1548  
00001984                          1549  
00001984                          1550  -------------------- end include --------------------
00001984                          1551  
00001984                          1552  ; --- INITIALIZE --------------------------------------------------------------
00001984                          1553              
00001984  4EB8 1000               1554  START       JSR     SYSINIT
00001988                          1555              ; TO DO: CALL GAME INITIALIZATION CODE HERE
00001988  4EB8 143C               1556              JSR     STAINIT                 ;INICIA LAS PANTALLAS            
0000198C                          1557              
0000198C                          1558  ; --- UPDATE ------------------------------------------------------------------
0000198C                          1559  
0000198C  4E40                    1560  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD                 
0000198E                          1561                                              ; UPDATE DEPENDING ON THE STATE
0000198E                          1562              ; TO DO: CALL GAME UPDATE CODE HERE
0000198E  4EB8 144E               1563              JSR     STAUPD
00001992                          1564  
00001992                          1565  ; --- WAIT SYNCH --------------------------------------------------------------
00001992                          1566  
00001992  4A39 000019AE           1567  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001998  67F8                    1568              BEQ     .WINT
0000199A                          1569              
0000199A  4239 000019AE           1570              CLR.B   (SCRINTCT)
000019A0                          1571  
000019A0                          1572  ; --- PLOT --------------------------------------------------------------------
000019A0                          1573              
000019A0                          1574              ; TO DO: CALL GAME PLOT CODE HERE
000019A0  4EB8 14A8               1575              JSR     STAPLOT
000019A4                          1576  
000019A4  4E41                    1577              TRAP    #SCRTRAP                ; SHOW GRAPHICS
000019A6  60E4                    1578              BRA     .LOOP
000019A8  FFFF FFFF               1579              SIMHALT
000019AC                          1580  
000019AC                          1581  ; --- VARIABLES ---------------------------------------------------------------
000019AC                          1582  
000019AC                          1583              INCLUDE "SYSVAR.X68"
000019AC                          1584  ; =============================================================================
000019AC                          1585  ; SYSTEM VARS
000019AC                          1586  ; NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO USER. THUS
000019AC                          1587  ; THEY MUST NOT BE IN PROTECTED MEMORY.
000019AC                          1588  ; NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER APPLICATIONS CAN
000019AC                          1589  ; ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR THE SAKE OF THIS EXAMPLE
000019AC                          1590  ; THIS IS GOOD ENOUGH.
000019AC                          1591  ; =============================================================================
000019AC                          1592  
000019AC                          1593  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
000019AC                          1594  
000019AC                          1595  KBDVAL      DS.B    1                       ; KEY PRESSED=1
000019AD                          1596  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
000019AE                          1597  
000019AE                          1598              DS.W    0
000019AE                          1599  
000019AE                          1600  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
000019AE                          1601  
000019AE                          1602  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
000019AF                          1603  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
000019B0                          1604              DS.W    0
000019B0                          1605  
000019B0                          1606  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
000019B0                          1607  
000019C0                          1608              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
000019C0                          1609  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002640                          1610              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002640                          1611  
00002640                          1612  
00002640                          1613  
00002640                          1614  -------------------- end include --------------------
00002640                          1615              INCLUDE "VAR.X68"
00002640                          1616  ; =============================================================================
00002640                          1617  ; GAME VARS
00002640                          1618  ; =============================================================================
00002640                          1619  
00002640                          1620  ; TO DO: DECLARE GAME VARIABLES HERE.
00002640                          1621  
00002640                          1622  ; --- GAME STATE RELATED VARIABLES ------------------------------------------
00002640                          1623  
00002640                          1624  STACUR      DS.W    1                       ; CURRENT GAME STATE
00002642                          1625  STANEXT     DS.W    1                       ; NEXT GAME STATE
00002644                          1626  ;----------------------------------------------------------------------------
00002644                          1627  
00002644                          1628  ; PLAYER --------------------------------------------------------------------
00002644                          1629  PPOSX       DS.W    1                       ;POSICION DE LA PLATAFORMA
00002646                          1630  PWIDTH      DS.W    1                       ; PLAYER WIDTH (PIXELS)
00002648                          1631  PLIVES      DS.W    1                       ;LIVES LEFT
0000264A                          1632  PSCORE      DS.W    1                       ;SCORE DEL PLAYER
0000264C                          1633  PSPEED      DS.W    1
0000264E                          1634  ;----------------------------------------------------------------------------
0000264E                          1635  
0000264E                          1636  ; BALL ----------------------------------------------------------------------
0000264E                          1637  BPOSX       DS.W    1                       ;POSICION DE LA PELOTA X
00002650                          1638  BPOSY       DS.W    1                       ;POSICION DE LA PELOTA Y
00002652                          1639  BSPEEDX     DS.W    1                       ;VELOCIDAD DE LA PELOTA
00002654                          1640  BSPEEDY     DS.W    1
00002656                          1641  BCOLOR      DS.W    1
00002658                          1642  
00002658                          1643  ; BLOCKS --------------------------------------------------------------------
00002658                          1644  BLCOUNTER   DS.W    1
0000265A                          1645  BLMATRIX    DS.B    12  ;12*8
00002666                          1646              DS.W    0
00002666                          1647              
00002666                          1648  
00002666                          1649  
00002666                          1650  
00002666                          1651  
00002666                          1652  
00002666                          1653  -------------------- end include --------------------
00002666                          1654              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BCOLOR              2656
BDIAMET             8
BINCOLOR            FFFFFF
BINIT               165C
BINPOSX             FC
BINPOSY             1C6
BINSPEED            FFFFFFFC
BLCOL               8
BLCOUNTER           2658
BLHEIGHT            10
BLINIT              1868
BLINIT:LOOP         1876
BLMATRIX            265A
BLPLOT              1920
BLPLOT:LOOP1        1958
BLPLOT:LOOP2        1940
BLPLOT:SALTO        1964
BLROW               C
BLUE                F7E78E
BLUPD               188C
BLUPD:DOWNBL        18D8
BLUPD:END           190A
BLUPD:ERROR         18C0
BLUPD:SOUND         1910
BLWIDTH             40
BNXTLEV             167E
BNXTLEV:END         16CA
BNXTLEV:NEGX        16C4
BNXTLEV:NEGY        16A8
BNXTLEV:X           16AE
BPLOT               17B4
BPOSX               264E
BPOSY               2650
BSPEEDX             2652
BSPEEDY             2654
BUPD                16D0
BUPD:END            1796
BUPD:PLATAFORMA     171A
BUPD:PLRXLEFT       172C
BUPD:PLRXMIDDLE     1740
BUPD:PLRXRIGHT      176C
COLORS              11DC
DMMALLOC            11AC
DMMALLOC:END        11C4
DMMBNUM             32
DMMBSIZE            40
DMMDATA             19C0
DMMFCOM             1186
DMMFFND             1194
DMMFIRST            113C
DMMFLOOP            117A
DMMFRCOM            114E
DMMFREE             11C6
DMMFRFND            115C
DMMFRLOP            1142
DMMFRSTO            1174
DMMINIT             111A
DMMINIT:LOOP        1128
DMMNEXT             115E
DMMNEXTO            1196
DMMSYSID            0
GOVERC              FFFF
GOVERX              12
GOVERY              7
GREEN               95FF8C
INTPRSC             FFFFFF
INTPRSX             20
INTPRSY             52
INTTITC             DCAA7C
INTTITX             E
INTTITY             7
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             19AD
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10A6
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10BC
KBDREAD:LOOP1       10D2
KBDREAD:LOOP2       10EE
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              19AC
LIVECOLOR           FF
LIVEHEIGHT          10
LIVEPOSX            215
LIVEPOSY            1E
LIVEWIDTH           40
ORANGE              4E8CF3
PCOLOR              ECD59D
PHEIGHT             C
PINLIVE             3
PINPOSX1            E0
PINPOSX2            E4
PINPOSX3            E8
PINWIDTH1           40
PINWIDTH2           38
PINWIDTH3           30
PLIVES              2648
PLRINIT             1302
PLRREV              1314
PLRUPD              1326
PLRUPD:END          136C
PLRUPD:RIGHTKEY     134A
PMOVE               8
PPLOT               1372
PPLOT:END           142E
PPLOT:LOOP          13EC
PPLOT:TXTSCORE      1434
PPOSX               2644
PPOSY               1D0
PSCORE              264A
PSCORECOL           FFFFFF
PSCORETX            32
PSCORETY            4
PSPEED              264C
PURPLE              FFACAC
PWIDTH              2646
SCRCTRL             201
SCRCYCCT            19AF
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            19AE
SCRIRQ              1
SCRISR              107E
SCRLWIDTH           5
SCRTIM              14
SCRTRAP             1
SCRUPD              108C
SCRWIDTH            2E4
SCTRLPLOT           17F4
SCTRLPLOT:TXTSCORE  1860
STACUR              2640
STAEMPTY            14D4
STAGOVR             3
STAGOVRP            1620
STAGOVRP:GOVSTR     1652
STAGOVRU            1602
STAGOVRU:END        161E
STAINIT             143C
STAINTR             0
STAINTRI            1522
STAINTRI:SOUND      153E
STAINTRP            1584
STAINTRP:PRSSTR     15EE
STAINTRP:TITSTR     15DE
STAINTRU            1552
STAINTRU:END        1582
STANEXT             2642
STANONE             FFFFFFFF
STAPLAY             2
STAPLAYI            14D6
STAPLAYP            150A
STAPLAYU            14F8
STAPLOT             14A8
STAPLOT:PLTTBL      14C4
START               1984
START:LOOP          198C
START:WINT          1992
STASPACE            1
STASPACEU           14E2
STASPACEU:END       14F6
STAUPD              144E
STAUPD:DOUPD        1474
STAUPD:INITBL       148C
STAUPD:UPDTBL       1498
SYSINIT             1000
TXBSIZE             12
TXMSIZE             10
TXSSIZE             A
UTLCHCOL            12CE
UTLCHCOL:END        12FC
UTLCHCOL:NOCOL      12FA
UTLCHCOLP           12C8
UTLCHCOLW           120C
UTLCHCOLW:COLLISIONS  1298
UTLCHCOLW:DOWN      123C
UTLCHCOLW:LEFT      1222
UTLCHCOLW:MINLIVE1  1246
UTLCHCOLW:MINLIVE2  128C
UTLCHCOLW:RIGHT     122E
UTLCHCOLW:SOUNDG    12A0
UTLCHCOLW:SOUNDL    12B4
UTLLOCT             3CF
UTLSFIL             2A5
UTLSIZC             12A
UTLSNDS             4F7
UTLSNDST            6F3
UTLSPEN             0
YELLOW              38EEF8
